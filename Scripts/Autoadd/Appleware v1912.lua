local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\55\187","\133\25\149\137\225\34\129\168"),function(v42) if (v9(v42,2)==79) then local v100=0;while true do if (v100==0) then v30=v8(v11(v42,1,1));return "";end end else local v101=v10(v8(v42,10 + 6 ));if v30 then local v110=0;local v111;while true do if (1==v110) then return v111;end if (v110==0) then v111=v13(v101,v30);v30=nil;v110=1;end end else return v101;end end end);local function v31(v43,v44,v45) if v45 then local v102=(v43/(2^(v44-(3 -2))))%((7 -5)^(((v45-(2 -1)) -(v44-(860 -(814 + 45)))) + 1)) ;return v102-(v102%(2 -1)) ;else local v103=2^(v44-1) ;return (((v43%(v103 + v103))>=v103) and (1 -0)) or 0 ;end end local function v32() local v46=0;local v47;while true do if (1==v46) then return v47;end if (v46==0) then v47=v9(v27,v29,v29);v29=v29 + 1 ;v46=1;end end end local function v33() local v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + (4 -2) ;return (v49 * 256) + v48 ;end local function v34() local v50,v51,v52,v53=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v53 * 16777216) + (v52 * 65536) + (v51 * (14 + 242)) + v50 ;end local function v35() local v54=v34();local v55=v34();local v56=620 -(555 + 64) ;local v57=(v31(v55,1,951 -(857 + 74) ) * (2^32)) + v54 ;local v58=v31(v55,21,31);local v59=((v31(v55,32)==1) and  -1) or 1 ;if (v58==0) then if (v57==0) then return v59 * 0 ;else local v112=0;while true do if (v112==0) then v58=1;v56=0;break;end end end elseif (v58==(2932 -(261 + 624))) then return ((v57==0) and (v59 * ((569 -(367 + 201))/0))) or (v59 * NaN) ;end return v16(v59,v58-1023 ) * (v56 + (v57/(2^52))) ;end local function v36(v60) local v61;if  not v60 then v60=v34();if (v60==0) then return "";end end v61=v11(v27,v29,(v29 + v60) -1 );v29=v29 + v60 ;local v62={};for v76=1, #v61 do v62[v76]=v10(v9(v11(v61,v76,v76)));end return v14(v62);end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v63={};local v64={};local v65={};local v66={v63,v64,nil,v65};local v67=v34();local v68={};for v78=1,v67 do local v79=0;local v80;local v81;while true do if (v79==1) then if (v80==1) then v81=v32()~=0 ;elseif (v80==2) then v81=v35();elseif (v80==(1426 -(630 + 793))) then v81=v36();end v68[v78]=v81;break;end if (v79==0) then v80=v32();v81=nil;v79=1;end end end v66[3]=v32();for v82=1,v34() do local v83=v32();if (v31(v83,1,3 -2 )==0) then local v106=v31(v83,2,3);local v107=v31(v83,4,933 -(214 + 713) );local v108={v33(),v33(),nil,nil};if (v106==0) then v108[2 + 1 ]=v33();v108[13 -9 ]=v33();elseif (v106==1) then v108[3]=v34();elseif (v106==(1 + 1)) then v108[1 + 2 ]=v34() -((1749 -(760 + 987))^16) ;elseif (v106==3) then v108[3]=v34() -((1915 -(1789 + 124))^16) ;v108[770 -(745 + 21) ]=v33();end if (v31(v107,1,1)==1) then v108[2]=v68[v108[2]];end if (v31(v107,2,2)==(878 -(282 + 595))) then v108[3]=v68[v108[3]];end if (v31(v107,3,3)==1) then v108[4]=v68[v108[2 + 2 ]];end v63[v82]=v108;end end for v84=1,v34() do v64[v84-1 ]=v39();end return v66;end local function v40(v70,v71,v72) local v73=v70[1];local v74=v70[2];local v75=v70[3];return function(...) local v86=v73;local v87=v74;local v88=v75;local v89=v38;local v90=1;local v91= -1;local v92={};local v93={...};local v94=v20("#",...) -1 ;local v95={};local v96={};for v104=0,v94 do if (v104>=v88) then v92[v104-v88 ]=v93[v104 + 1 ];else v96[v104]=v93[v104 + 1 ];end end local v97=(v94-v88) + (1638 -(1523 + 114)) ;local v98;local v99;while true do local v105=0;while true do if (v105==0) then v98=v86[v90];v99=v98[1];v105=1;end if (v105==1) then if (v99<=45) then if (v99<=(20 + 2)) then if (v99<=(14 -4)) then if (v99<=4) then if (v99<=1) then if (v99>0) then local v132=0;local v133;local v134;local v135;while true do if (v132==2) then for v349=1066 -(68 + 997) ,v98[15 -11 ] do local v350=0;local v351;while true do if (v350==0) then v90=v90 + 1 ;v351=v86[v90];v350=1;end if (v350==1) then if (v351[1271 -(226 + 1044) ]==79) then v135[v349-1 ]={v96,v351[3]};else v135[v349-1 ]={v71,v351[3]};end v95[ #v95 + 1 ]=v135;break;end end end v96[v98[2]]=v40(v133,v134,v72);break;end if (v132==0) then v133=v87[v98[3]];v134=nil;v132=1;end if (v132==1) then v135={};v134=v18({},{[v7("\208\15\245\218\254\234\40","\154\143\80\156\180")]=function(v352,v353) local v354=0;local v355;while true do if (v354==0) then v355=v135[v353];return v355[1][v355[2]];end end end,[v7("\141\12\5\77\89\52\11\129\183\43","\229\210\83\107\40\46\93\101")]=function(v356,v357,v358) local v359=v135[v357];v359[1][v359[2]]=v358;end});v132=2;end end else local v136=0;local v137;while true do if (v136==0) then v137=v98[2];v96[v137]=v96[v137](v21(v96,v137 + 1 ,v98[3]));break;end end end elseif (v99<=2) then local v138=v98[2];local v139,v140=v89(v96[v138](v96[v138 + 1 + 0 ]));v91=(v140 + v138) -1 ;local v141=0;for v198=v138,v91 do v141=v141 + 1 ;v96[v198]=v139[v141];end elseif (v99>3) then do return v96[v98[2]]();end else local v217=0;local v218;local v219;local v220;local v221;while true do if (v217==0) then v218=v98[1 + 1 ];v219,v220=v89(v96[v218](v21(v96,v218 + 1 ,v98[3])));v217=1;end if (v217==1) then v91=(v220 + v218) -1 ;v221=0;v217=2;end if (v217==2) then for v394=v218,v91 do local v395=0;while true do if (v395==0) then v221=v221 + 1 ;v96[v394]=v219[v221];break;end end end break;end end end elseif (v99<=(2 + 5)) then if (v99<=5) then v96[v98[2]]= #v96[v98[3]];elseif (v99>(963 -(892 + 65))) then v90=v98[1058 -(87 + 968) ];else v96[v98[4 -2 ]]();end elseif (v99<=8) then v96[v98[3 -1 ]]={};elseif (v99>9) then v96[v98[2]]=v96[v98[3]];else local v225=0;local v226;while true do if (v225==0) then v226=v98[2];v96[v226]=v96[v226]();break;end end end elseif (v99<=16) then if (v99<=(12 + 1)) then if (v99<=11) then v96[v98[4 -2 ]][v96[v98[4 -1 ]]]=v96[v98[4]];elseif (v99>(1425 -(447 + 966))) then v96[v98[2]]=v96[v98[3]]%v98[4] ;else for v318=v98[2],v98[3] do v96[v318]=nil;end end elseif (v99<=14) then do return v96[v98[2]]();end elseif (v99==15) then v96[v98[2]][v96[v98[3]]]=v98[4];else v96[v98[2]]=v98[3];end elseif (v99<=19) then if (v99<=17) then local v146=v98[5 -3 ];local v147=v96[v146 + 2 ];local v148=v96[v146] + v147 ;v96[v146]=v148;if (v147>(350 -(87 + 263))) then if (v148<=v96[v146 + 1 ]) then local v361=0;while true do if (v361==0) then v90=v98[3];v96[v146 + 3 ]=v148;break;end end end elseif (v148>=v96[v146 + 1 ]) then local v362=0;while true do if (v362==0) then v90=v98[3];v96[v146 + 3 ]=v148;break;end end end elseif (v99>18) then v96[v98[2]]=v96[v98[3]]%v98[184 -(67 + 113) ] ;else local v233=v98[2];local v234,v235=v89(v96[v233](v96[v233 + (1818 -(1703 + 114)) ]));v91=(v235 + v233) -(1 + 0) ;local v236=0;for v320=v233,v91 do v236=v236 + 1 ;v96[v320]=v234[v236];end end elseif (v99<=(49 -29)) then local v150=0;local v151;while true do if (0==v150) then v151=v98[2];do return v96[v151](v21(v96,v151 + 1 ,v98[3]));end break;end end elseif (v99>21) then if (v98[2]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end else v96[v98[2]]=v98[3]~=0 ;end elseif (v99<=33) then if (v99<=27) then if (v99<=(18 + 6)) then if (v99==23) then v96[v98[2]]=v96[v98[3]]%v96[v98[4]] ;else v96[v98[7 -5 ]]=v96[v98[3]] -v96[v98[705 -(376 + 325) ]] ;end elseif (v99<=(40 -15)) then local v154=v98[2];local v155=v96[v98[3]];v96[v154 + (953 -(802 + 150)) ]=v155;v96[v154]=v155[v98[4]];elseif (v99>26) then v96[v98[2]]=v98[7 -4 ] + v96[v98[4]] ;else local v239=0;local v240;while true do if (v239==0) then v240=v98[2];v96[v240]=v96[v240](v21(v96,v240 + 1 ,v91));break;end end end elseif (v99<=30) then if (v99<=28) then local v159=0;local v160;while true do if (v159==0) then v160=v98[2];v96[v160](v96[v160 + 1 ]);break;end end elseif (v99>(88 -59)) then v96[v98[2]]= not v96[v98[3]];elseif  not v96[v98[2]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=31) then v71[v98[3]]=v96[v98[2]];elseif (v99==32) then v96[v98[2]]=v96[v98[1 + 2 ]][v98[8 -4 ]];else v71[v98[3]]=v96[v98[2]];end elseif (v99<=39) then if (v99<=(65 -29)) then if (v99<=34) then v96[v98[16 -(9 + 5) ]]= not v96[v98[3]];elseif (v99==35) then v96[v98[2]]=v72[v98[3 + 0 ]];else do return;end end elseif (v99<=37) then if (v96[v98[2]]==v98[4]) then v90=v90 + (377 -(85 + 291)) ;else v90=v98[3];end elseif (v99>38) then v90=v98[3];else local v250=0;local v251;while true do if (v250==0) then v251=v98[1267 -(243 + 1022) ];v96[v251](v96[v251 + 1 ]);break;end end end elseif (v99<=42) then if (v99<=40) then v96[v98[2]]=v96[v98[3]][v98[4]];elseif (v99==41) then if (v96[v98[2]]<v98[4]) then v90=v90 + (998 -(915 + 82)) ;else v90=v98[3];end else v96[v98[2]]=v71[v98[3]];end elseif (v99<=(121 -78)) then if  not v96[v98[2 + 0 ]] then v90=v90 + 1 ;else v90=v98[3];end elseif (v99==(57 -13)) then local v255=v98[1189 -(1069 + 118) ];local v256,v257=v89(v96[v255](v21(v96,v255 + 1 ,v98[3])));v91=(v257 + v255) -(1 + 0) ;local v258=0;for v325=v255,v91 do v258=v258 + 1 ;v96[v325]=v256[v258];end elseif v96[v98[2]] then v90=v90 + (1181 -(1123 + 57)) ;else v90=v98[3];end elseif (v99<=68) then if (v99<=56) then if (v99<=50) then if (v99<=47) then if (v99>46) then do return;end else local v166=0;local v167;while true do if (v166==0) then v167=v98[4 -2 ];v96[v167]=v96[v167]();break;end end end elseif (v99<=48) then if (v96[v98[2 + 0 ]]<v98[8 -4 ]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99==49) then local v260=v98[2];local v261=v96[v260];for v330=v260 + (255 -(163 + 91)) ,v91 do v15(v261,v96[v330]);end else v96[v98[1 + 1 ]]=v98[3];end elseif (v99<=53) then if (v99<=(15 + 36)) then local v168=v98[2];v96[v168](v21(v96,v168 + 1 ,v98[4 -1 ]));elseif (v99>52) then local v264=v98[2];local v265={};for v331=1, #v95 do local v332=v95[v331];for v367=0, #v332 do local v368=v332[v367];local v369=v368[1];local v370=v368[2];if ((v369==v96) and (v370>=v264)) then v265[v370]=v369[v370];v368[1]=v265;end end end else v96[v98[2]][v98[3]]=v98[4];end elseif (v99<=54) then v96[v98[2 + 0 ]]=v96[v98[3]]%v96[v98[4]] ;elseif (v99==55) then v96[v98[2]][v96[v98[3]]]=v98[4];else v96[v98[2 -0 ]][v98[3]]=v96[v98[4]];end elseif (v99<=62) then if (v99<=59) then if (v99<=57) then v96[v98[793 -(368 + 423) ]]=v96[v98[3]] + v98[4] ;elseif (v99>58) then v96[v98[2]]=v96[v98[3]] + v98[4] ;else local v273=v98[2];v96[v273]=v96[v273](v21(v96,v273 + (3 -2) ,v98[3]));end elseif (v99<=60) then for v201=v98[2],v98[3] do v96[v201]=nil;end elseif (v99==61) then v96[v98[2]]={};else local v276=v98[2];v96[v276]=v96[v276](v21(v96,v276 + 1 ,v91));end elseif (v99<=65) then if (v99<=(9 + 54)) then local v171=v98[20 -(10 + 8) ];v96[v171](v21(v96,v171 + 1 ,v91));elseif (v99>64) then local v278=v98[2];v96[v278](v21(v96,v278 + 1 ,v91));else v96[v98[2]]=v96[v98[3]] -v96[v98[4]] ;end elseif (v99<=66) then v96[v98[2]]=v72[v98[11 -8 ]];elseif (v99>67) then if (v96[v98[2 + 0 ]]==v98[4]) then v90=v90 + (1475 -(1329 + 145)) ;else v90=v98[3];end else v96[v98[444 -(416 + 26) ]]();end elseif (v99<=79) then if (v99<=73) then if (v99<=(1920 -(1409 + 441))) then if (v99>69) then local v174=0;local v175;while true do if (v174==0) then v175=v98[2];do return v21(v96,v175,v91);end break;end end else v96[v98[2]]=v71[v98[3]];end elseif (v99<=71) then v96[v98[2]]=v98[3] + v96[v98[4]] ;elseif (v99>(229 -157)) then v96[v98[2]][v96[v98[3]]]=v96[v98[4]];else local v282=0;local v283;local v284;local v285;while true do if (v282==1) then v285=v96[v283] + v284 ;v96[v283]=v285;v282=2;end if (v282==0) then v283=v98[2];v284=v96[v283 + 2 ];v282=1;end if (v282==2) then if (v284>0) then if (v285<=v96[v283 + 1 ]) then v90=v98[721 -(15 + 703) ];v96[v283 + 3 ]=v285;end elseif (v285>=v96[v283 + 1 + 0 ]) then local v426=0;while true do if (v426==0) then v90=v98[3];v96[v283 + 3 ]=v285;break;end end end break;end end end elseif (v99<=76) then if (v99<=74) then local v179=0;local v180;local v181;local v182;while true do if (v179==0) then v180=v98[1 + 1 ];v181=v96[v180];v179=1;end if (v179==1) then v182=v96[v180 + 2 ];if (v182>0) then if (v181>v96[v180 + 1 ]) then v90=v98[3];else v96[v180 + 3 ]=v181;end elseif (v181<v96[v180 + 1 ]) then v90=v98[4 -1 ];else v96[v180 + (441 -(262 + 176)) ]=v181;end break;end end elseif (v99>75) then v96[v98[2]]= #v96[v98[3]];elseif (v98[2]==v96[v98[4]]) then v90=v90 + 1 ;else v90=v98[3];end elseif (v99<=77) then local v183=0;local v184;local v185;local v186;while true do if (v183==1) then v186=v96[v184 + 2 ];if (v186>(1721 -(345 + 1376))) then if (v185>v96[v184 + 1 ]) then v90=v98[3];else v96[v184 + 3 ]=v185;end elseif (v185<v96[v184 + 1 ]) then v90=v98[691 -(198 + 490) ];else v96[v184 + 3 ]=v185;end break;end if (v183==0) then v184=v98[2];v185=v96[v184];v183=1;end end elseif (v99>(516 -(145 + 293))) then v96[v98[2]]=v96[v98[3]];else local v289=0;local v290;local v291;while true do if (v289==1) then for v399=v290 + 1 ,v91 do v15(v291,v96[v399]);end break;end if (v289==0) then v290=v98[2];v291=v96[v290];v289=1;end end end elseif (v99<=85) then if (v99<=82) then if (v99<=80) then local v187=v98[2];local v188={};for v203=1, #v95 do local v204=v95[v203];for v292=0, #v204 do local v293=0;local v294;local v295;local v296;while true do if (v293==0) then v294=v204[v292];v295=v294[1];v293=1;end if (v293==1) then v296=v294[2];if ((v295==v96) and (v296>=v187)) then local v419=0;while true do if (v419==0) then v188[v296]=v295[v296];v294[1]=v188;break;end end end break;end end end end elseif (v99==81) then local v297=v98[2];do return v96[v297](v21(v96,v297 + 1 ,v98[433 -(44 + 386) ]));end else local v298=0;local v299;local v300;local v301;local v302;while true do if (v298==2) then for v400=v299,v91 do local v401=0;while true do if (v401==0) then v302=v302 + 1 ;v96[v400]=v300[v302];break;end end end break;end if (v298==1) then v91=(v301 + v299) -1 ;v302=0;v298=2;end if (v298==0) then v299=v98[2];v300,v301=v89(v96[v299](v21(v96,v299 + 1 ,v91)));v298=1;end end end elseif (v99<=83) then local v189=v87[v98[3]];local v190;local v191={};v190=v18({},{[v7("\13\233\137\32\236\8\90","\34\82\182\224\78\136\109")]=function(v205,v206) local v207=0;local v208;while true do if (v207==0) then v208=v191[v206];return v208[1][v208[2]];end end end,[v7("\228\221\140\251\204\235\140\250\222\250","\158\187\130\226")]=function(v209,v210,v211) local v212=0;local v213;while true do if (v212==0) then v213=v191[v210];v213[1][v213[2]]=v211;break;end end end});for v214=1,v98[1490 -(998 + 488) ] do v90=v90 + 1 ;local v215=v86[v90];if (v215[1 + 0 ]==79) then v191[v214-1 ]={v96,v215[6 -3 ]};else v191[v214-(1 + 0) ]={v71,v215[3]};end v95[ #v95 + 1 ]=v191;end v96[v98[1140 -(116 + 1022) ]]=v40(v189,v190,v72);elseif (v99>84) then local v303=v98[2];local v304,v305=v89(v96[v303](v21(v96,v303 + 1 ,v91)));v91=(v305 + v303) -1 ;local v306=0;for v342=v303,v91 do local v343=0;while true do if (v343==0) then v306=v306 + 1 ;v96[v342]=v304[v306];break;end end end else v96[v98[2]]=v98[3]~=0 ;end elseif (v99<=88) then if (v99<=(180 -94)) then local v193=0;local v194;local v195;while true do if (v193==1) then v96[v194 + 1 ]=v195;v96[v194]=v195[v98[4]];break;end if (v193==0) then v194=v98[2];v195=v96[v98[3]];v193=1;end end elseif (v99>87) then if v96[v98[8 -6 ]] then v90=v90 + 1 ;else v90=v98[3];end else local v308=0;local v309;while true do if (v308==0) then v309=v98[1264 -(1091 + 171) ];v96[v309](v21(v96,v309 + 1 ,v98[3]));break;end end end elseif (v99<=89) then v96[v98[1 + 1 ]][v98[3]]=v96[v98[4]];elseif (v99>90) then v96[v98[2]][v98[9 -6 ]]=v98[12 -8 ];else local v312=0;local v313;while true do if (v312==0) then v313=v98[2];do return v21(v96,v313,v91);end break;end end end v90=v90 + (375 -(123 + 251)) ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- Ã¢Å¡ Ã¯Â¸Â WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--