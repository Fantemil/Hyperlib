local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\115\75","\46\93\101\161"),function(v42) if (v9(v42,2)==(246 -167)) then local v93=0;while true do if (v93==0) then v30=v8(v11(v42,1,1));return "";end end else local v94=0;local v95;while true do if (v94==0) then v95=v10(v8(v42,45 -29 ));if v30 then local v121=0;local v122;while true do if (1==v121) then return v122;end if (v121==0) then v122=v13(v95,v30);v30=nil;v121=1;end end else return v95;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v96=0;local v97;while true do if (v96==0) then v97=(v43/(2^(v44-1)))%(2^(((v45-(1 -0)) -(v44-1)) + 1)) ;return v97-(v97%1) ;end end else local v98=0;local v99;while true do if (v98==0) then v99=(4 -2)^(v44-1) ;return (((v43%(v99 + v99))>=v99) and 1) or 0 ;end end end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47=0;local v48;local v49;while true do if (v47==1) then return (v49 * 256) + v48 ;end if (v47==0) then v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v47=1;end end end local function v34() local v50=0;local v51;local v52;local v53;local v54;while true do if (1==v50) then return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51 ;end if (v50==0) then v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v50=1;end end end local function v35() local v55=0;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v55==1) then v58=1;v59=(v31(v57,1,639 -(555 + 64) ) * (2^32)) + v56 ;v55=2;end if (v55==0) then v56=v34();v57=v34();v55=1;end if (v55==3) then if (v60==0) then if (v59==0) then return v61 * 0 ;else local v123=0;while true do if (v123==0) then v60=1;v58=0;break;end end end elseif (v60==(2615 -(367 + 201))) then return ((v59==0) and (v61 * (1/0))) or (v61 * NaN) ;end return v16(v61,v60-1023 ) * (v58 + (v59/(2^52))) ;end if (v55==2) then v60=v31(v57,21,31);v61=((v31(v57,32)==1) and  -(932 -(857 + 74))) or 1 ;v55=3;end end end local function v36(v62) local v63=0;local v64;local v65;while true do if (v63==3) then return v14(v65);end if (v63==1) then v64=v11(v27,v29,(v29 + v62) -1 );v29=v29 + v62 ;v63=2;end if (0==v63) then v64=nil;if  not v62 then local v118=0;while true do if (0==v118) then v62=v34();if (v62==0) then return "";end break;end end end v63=1;end if (2==v63) then v65={};for v103=1, #v64 do v65[v103]=v10(v9(v11(v64,v103,v103)));end v63=3;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v66=0;local v67;local v68;local v69;local v70;local v71;local v72;while true do if (v66==0) then v67={};v68={};v69={};v70={v67,v68,nil,v69};v66=1;end if (v66==1) then v71=v34();v72={};for v105=1,v71 do local v106=0;local v107;local v108;while true do if (v106==1) then if (v107==1) then v108=v32()~=0 ;elseif (v107==(929 -(214 + 713))) then v108=v35();elseif (v107==3) then v108=v36();end v72[v105]=v108;break;end if (v106==0) then v107=v32();v108=nil;v106=1;end end end v70[3]=v32();v66=2;end if (v66==2) then for v109=1,v34() do local v110=0;local v111;while true do if (0==v110) then v111=v32();if (v31(v111,1 + 0 ,1)==0) then local v125=0;local v126;local v127;local v128;while true do if (v125==0) then v126=v31(v111,2,3);v127=v31(v111,4,6);v125=1;end if (v125==1) then v128={v33(),v33(),nil,nil};if (v126==0) then local v130=0;while true do if (v130==0) then v128[1 + 2 ]=v33();v128[4]=v33();break;end end elseif (v126==1) then v128[880 -(282 + 595) ]=v34();elseif (v126==2) then v128[3]=v34() -(2^16) ;elseif (v126==3) then local v297=0;while true do if (0==v297) then v128[3]=v34() -(2^16) ;v128[4]=v33();break;end end end v125=2;end if (v125==3) then if (v31(v127,3,3)==1) then v128[4]=v72[v128[1641 -(1523 + 114) ]];end v67[v109]=v128;break;end if (v125==2) then if (v31(v127,1,1)==1) then v128[2]=v72[v128[2]];end if (v31(v127,2,2)==1) then v128[3]=v72[v128[3]];end v125=3;end end end break;end end end for v112=1,v34() do v68[v112-1 ]=v39();end return v70;end end end local function v40(v73,v74,v75) local v76=v73[1];local v77=v73[2 + 0 ];local v78=v73[3];return function(...) local v79=v76;local v80=v77;local v81=v78;local v82=v38;local v83=1;local v84= -1;local v85={};local v86={...};local v87=v20("#",...) -1 ;local v88={};local v89={};for v100=0,v87 do if (v100>=v81) then v85[v100-v81 ]=v86[v100 + 1 ];else v89[v100]=v86[v100 + 1 ];end end local v90=(v87-v81) + 1 ;local v91;local v92;while true do local v101=0;while true do if (v101==0) then v91=v79[v83];v92=v91[1];v101=1;end if (1==v101) then if (v92<=35) then if (v92<=17) then if (v92<=8) then if (v92<=3) then if (v92<=1) then if (v92>0) then local v140=v91[2 -0 ];v89[v140]=v89[v140]();else v89[v91[2]]=v91[3] + v89[v91[4]] ;end elseif (v92>(1067 -(68 + 997))) then local v143=0;local v144;while true do if (v143==0) then v144=v91[2];v89[v144]=v89[v144](v21(v89,v144 + 1 ,v91[3]));break;end end else v89[v91[1272 -(226 + 1044) ]]=v89[v91[12 -9 ]][v91[4]];end elseif (v92<=5) then if (v92==4) then local v147=v91[2];local v148,v149=v82(v89[v147](v21(v89,v147 + 1 ,v91[3])));v84=(v149 + v147) -1 ;local v150=0;for v235=v147,v84 do local v236=0;while true do if (0==v236) then v150=v150 + 1 ;v89[v235]=v148[v150];break;end end end else v89[v91[2]][v91[3]]=v91[121 -(32 + 85) ];end elseif (v92<=6) then local v153=0;local v154;local v155;local v156;local v157;while true do if (v153==0) then v154=v91[2];v155,v156=v82(v89[v154](v21(v89,v154 + 1 ,v84)));v153=1;end if (v153==2) then for v333=v154,v84 do local v334=0;while true do if (0==v334) then v157=v157 + 1 ;v89[v333]=v155[v157];break;end end end break;end if (v153==1) then v84=(v156 + v154) -(1 + 0) ;v157=0;v153=2;end end elseif (v92>7) then v83=v91[3];else v83=v91[3];end elseif (v92<=12) then if (v92<=10) then if (v92>9) then local v158=v91[2];do return v89[v158](v21(v89,v158 + 1 ,v91[3]));end else do return;end end elseif (v92==11) then v89[v91[2]]={};else do return v89[v91[2]]();end end elseif (v92<=14) then if (v92==13) then if v89[v91[2]] then v83=v83 + 1 ;else v83=v91[1 + 2 ];end else local v160=0;local v161;while true do if (v160==0) then v161=v91[959 -(892 + 65) ];v89[v161]=v89[v161](v21(v89,v161 + 1 ,v91[3]));break;end end end elseif (v92<=(35 -20)) then v89[v91[2]]=v89[v91[3]][v91[4]];elseif (v92>16) then local v254=v91[2];local v255=v89[v91[3]];v89[v254 + 1 ]=v255;v89[v254]=v255[v91[6 -2 ]];else local v259=v91[2];do return v21(v89,v259,v84);end end elseif (v92<=26) then if (v92<=21) then if (v92<=19) then if (v92==18) then local v164=0;local v165;local v166;local v167;local v168;while true do if (v164==2) then for v335=v165,v84 do local v336=0;while true do if (v336==0) then v168=v168 + 1 ;v89[v335]=v166[v168];break;end end end break;end if (v164==1) then v84=(v167 + v165) -1 ;v168=0;v164=2;end if (0==v164) then v165=v91[2];v166,v167=v82(v89[v165](v89[v165 + 1 ]));v164=1;end end else v89[v91[2]]=v89[v91[3]];end elseif (v92>20) then v89[v91[2]]=v89[v91[3]] + v91[4] ;elseif (v91[2]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92<=23) then if (v92>22) then v89[v91[2]]=v74[v91[3]];else local v174=0;local v175;local v176;local v177;while true do if (2==v174) then for v337=1,v91[4] do v83=v83 + 1 ;local v338=v79[v83];if (v338[1]==63) then v177[v337-1 ]={v89,v338[3]};else v177[v337-1 ]={v74,v338[3]};end v88[ #v88 + 1 ]=v177;end v89[v91[2]]=v40(v175,v176,v75);break;end if (v174==1) then v177={};v176=v18({},{[v7("\233\191\39\60\210\133\54","\82\182\224\78")]=function(v340,v341) local v342=0;local v343;while true do if (v342==0) then v343=v177[v341];return v343[1][v343[2]];end end end,[v7("\102\193\213\231\149\4\87\250\222\250","\109\57\158\187\130\226")]=function(v344,v345,v346) local v347=0;local v348;while true do if (v347==0) then v348=v177[v345];v348[351 -(87 + 263) ][v348[2]]=v346;break;end end end});v174=2;end if (v174==0) then v175=v80[v91[4 -1 ]];v176=nil;v174=1;end end end elseif (v92<=24) then local v178=v91[2];v89[v178](v21(v89,v178 + (181 -(67 + 113)) ,v84));elseif (v92>25) then local v261=0;local v262;local v263;local v264;local v265;while true do if (v261==1) then v84=(v264 + v262) -1 ;v265=0 + 0 ;v261=2;end if (0==v261) then v262=v91[2];v263,v264=v82(v89[v262](v89[v262 + 1 ]));v261=1;end if (v261==2) then for v374=v262,v84 do local v375=0;while true do if (v375==0) then v265=v265 + (2 -1) ;v89[v374]=v263[v265];break;end end end break;end end else v89[v91[2]][v91[3]]=v91[4];end elseif (v92<=30) then if (v92<=(21 + 7)) then if (v92>27) then local v179=v91[7 -5 ];local v180=v89[v179];local v181=v89[v179 + 2 ];if (v181>0) then if (v180>v89[v179 + 1 ]) then v83=v91[3];else v89[v179 + 3 ]=v180;end elseif (v180<v89[v179 + 1 ]) then v83=v91[3];else v89[v179 + 3 ]=v180;end else local v182=v91[2];do return v89[v182](v21(v89,v182 + 1 ,v91[3]));end end elseif (v92==29) then if v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end else local v183=0;local v184;while true do if (v183==0) then v184=v91[2];v89[v184](v21(v89,v184 + 1 ,v91[3]));break;end end end elseif (v92<=32) then if (v92==31) then v89[v91[2]]={};else local v186=0;local v187;while true do if (v186==0) then v187=v91[2];v89[v187]=v89[v187]();break;end end end elseif (v92<=33) then v89[v91[2]]=v89[v91[3]] + v91[956 -(802 + 150) ] ;elseif (v92==34) then local v269=0;local v270;local v271;local v272;local v273;while true do if (v269==0) then v270=v91[2];v271,v272=v82(v89[v270](v21(v89,v270 + 1 ,v91[3])));v269=1;end if (v269==1) then v84=(v272 + v270) -1 ;v273=0;v269=2;end if (2==v269) then for v376=v270,v84 do local v377=0;while true do if (v377==0) then v273=v273 + 1 ;v89[v376]=v271[v273];break;end end end break;end end else for v309=v91[2],v91[3] do v89[v309]=nil;end end elseif (v92<=53) then if (v92<=44) then if (v92<=39) then if (v92<=37) then if (v92==36) then v89[v91[2]]= #v89[v91[3]];else local v190=v80[v91[3]];local v191;local v192={};v191=v18({},{[v7("\1\0\240\255\58\58\225","\145\94\95\153")]=function(v237,v238) local v239=0;local v240;while true do if (v239==0) then v240=v192[v238];return v240[2 -1 ][v240[2]];end end end,[v7("\194\242\26\208\89\190\243\201\17\205","\215\157\173\116\181\46")]=function(v241,v242,v243) local v244=0;local v245;while true do if (v244==0) then v245=v192[v242];v245[1][v245[2]]=v243;break;end end end});for v246=1,v91[6 -2 ] do v83=v83 + 1 + 0 ;local v247=v79[v83];if (v247[1]==63) then v192[v246-1 ]={v89,v247[3]};else v192[v246-1 ]={v74,v247[3]};end v88[ #v88 + 1 ]=v192;end v89[v91[5 -3 ]]=v40(v190,v191,v75);end elseif (v92>38) then v89[v91[2 + 0 ]][v91[3]]=v89[v91[4]];else local v196=0;local v197;local v198;while true do if (1==v196) then v89[v197 + 1 ]=v198;v89[v197]=v198[v91[4]];break;end if (v196==0) then v197=v91[2];v198=v89[v91[3 -0 ]];v196=1;end end end elseif (v92<=41) then if (v92==40) then local v199=0;local v200;local v201;while true do if (v199==1) then for v356=v200 + 1 ,v84 do v15(v201,v89[v356]);end break;end if (v199==0) then v200=v91[1189 -(1069 + 118) ];v201=v89[v200];v199=1;end end else do return;end end elseif (v92<=(94 -52)) then v89[v91[2]]=v75[v91[3]];elseif (v92==43) then v89[v91[2]]=v91[6 -3 ];else v89[v91[1 + 1 ]]=v75[v91[3]];end elseif (v92<=(84 -36)) then if (v92<=46) then if (v92==45) then if  not v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end else local v204=0;local v205;while true do if (v204==0) then v205=v91[2];v89[v205](v21(v89,v205 + 1 ,v91[3]));break;end end end elseif (v92>(47 + 0)) then v89[v91[2]]=v74[v91[3]];else local v208=0;local v209;while true do if (v208==0) then v209=v91[2];v89[v209]=v89[v209](v21(v89,v209 + 1 ,v84));break;end end end elseif (v92<=50) then if (v92>49) then v89[v91[793 -(368 + 423) ]]=v89[v91[3]]%v91[4] ;else v89[v91[6 -4 ]][v91[21 -(10 + 8) ]]=v89[v91[4]];end elseif (v92<=51) then if (v89[v91[2]]==v91[4]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92==52) then v89[v91[2]]=v91[3];else v89[v91[2]]= #v89[v91[3]];end elseif (v92<=62) then if (v92<=(219 -162)) then if (v92<=55) then if (v92>(496 -(416 + 26))) then local v213=0;local v214;local v215;while true do if (v213==1) then for v357=v214 + 1 ,v84 do v15(v215,v89[v357]);end break;end if (v213==0) then v214=v91[2];v215=v89[v214];v213=1;end end elseif (v89[v91[2]]==v91[4]) then v83=v83 + 1 ;else v83=v91[3];end elseif (v92>56) then do return v89[v91[2]]();end else local v216=0;local v217;local v218;local v219;while true do if (v216==1) then v219=v89[v217 + 2 ];if (v219>(0 -0)) then if (v218>v89[v217 + 1 ]) then v83=v91[3];else v89[v217 + 3 ]=v218;end elseif (v218<v89[v217 + 1 + 0 ]) then v83=v91[3];else v89[v217 + 3 ]=v218;end break;end if (v216==0) then v217=v91[2];v218=v89[v217];v216=1;end end end elseif (v92<=(103 -44)) then if (v92>58) then v89[v91[2]]=v89[v91[3]]%v89[v91[4]] ;else for v249=v91[2],v91[3] do v89[v249]=nil;end end elseif (v92<=60) then local v221=0;local v222;local v223;local v224;local v225;while true do if (v221==1) then v84=(v224 + v222) -1 ;v225=0;v221=2;end if (2==v221) then for v358=v222,v84 do local v359=0;while true do if (v359==0) then v225=v225 + 1 ;v89[v358]=v223[v225];break;end end end break;end if (v221==0) then v222=v91[2];v223,v224=v82(v89[v222](v21(v89,v222 + 1 ,v84)));v221=1;end end elseif (v92>61) then local v284=0;local v285;local v286;local v287;while true do if (0==v284) then v285=v91[440 -(145 + 293) ];v286=v89[v285 + 2 ];v284=1;end if (v284==2) then if (v286>0) then if (v287<=v89[v285 + 1 ]) then local v395=0;while true do if (v395==0) then v83=v91[3];v89[v285 + 3 ]=v287;break;end end end elseif (v287>=v89[v285 + (431 -(44 + 386)) ]) then local v396=0;while true do if (0==v396) then v83=v91[3];v89[v285 + 3 ]=v287;break;end end end break;end if (v284==1) then v287=v89[v285] + v286 ;v89[v285]=v287;v284=2;end end else local v288=0;local v289;while true do if (0==v288) then v289=v91[2];v89[v289]=v89[v289](v21(v89,v289 + 1 ,v84));break;end end end elseif (v92<=66) then if (v92<=64) then if (v92==63) then v89[v91[2]]=v89[v91[3]];else local v228=0;local v229;while true do if (v228==0) then v229=v91[2];v89[v229](v21(v89,v229 + 1 ,v84));break;end end end elseif (v92==65) then if  not v89[v91[2]] then v83=v83 + 1 ;else v83=v91[3];end else v89[v91[1488 -(998 + 488) ]]=v91[1 + 2 ] + v89[v91[4 + 0 ]] ;end elseif (v92<=68) then if (v92>67) then if (v91[2]==v89[v91[4]]) then v83=v83 + 1 ;else v83=v91[3];end else v89[v91[2]]=v89[v91[3]]%v89[v91[4]] ;end elseif (v92<=69) then local v232=0;local v233;while true do if (v232==0) then v233=v91[2];do return v21(v89,v233,v84);end break;end end elseif (v92>70) then v89[v91[774 -(201 + 571) ]]=v89[v91[3]]%v91[1142 -(116 + 1022) ] ;else local v293=0;local v294;local v295;local v296;while true do if (v293==1) then v296=v89[v294] + v295 ;v89[v294]=v296;v293=2;end if (v293==0) then v294=v91[2];v295=v89[v294 + 2 ];v293=1;end if (v293==2) then if (v295>0) then if (v296<=v89[v294 + 1 ]) then v83=v91[3];v89[v294 + 3 ]=v296;end elseif (v296>=v89[v294 + (4 -3) ]) then v83=v91[2 + 1 ];v89[v294 + 3 ]=v296;end break;end end end v83=v83 + 1 ;break;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
-- Ã¢Å¡ Ã¯Â¸Â WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--