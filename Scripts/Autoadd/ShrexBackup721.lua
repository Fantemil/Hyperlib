-- This script was automatically @generated by Maui, it is not intended for manual editing.

local ModuleRoot = {
    {
        ClassName = "LocalScript",
        Closure = function() if getgenv then
	script.Parent = game:GetService("CoreGui")
else
	script.Parent = (game.Players.LocalPlayer or game.Players:GetPropertyChangedSignal("LocalPlayer"):Wait()).PlayerGui
end

require(script.Shrex.Frame.Main) end,
        Properties = {
            Name = "Handler"
        },
        Reference = 1,
        Children = {
            {
                Children = {
                    {
                        Children = {
                            {
                                Closure = function() --// Services
local Players = game:GetService('Players')
local UIS = game:GetService("UserInputService")

--// Variables
local UI = script.Parent

local Player = Players.LocalPlayer
local Mouse = Player:GetMouse()

local Hovered = false
local Holding = false
local MoveCon = nil

local InitialX, InitialY, UIInitialPos

local ViewPortSize = workspace.Camera.ViewportSize
local Speed = 1

--// Functions

local function Drag(processed)
	if processed then return end
	if Holding == false then MoveCon:Disconnect(); return end
	local distanceMovedX = (InitialX - Mouse.X)*Speed
	local distanceMovedY = (InitialY - Mouse.Y)*Speed

	local Pos = UIInitialPos - UDim2.new(distanceMovedX / ViewPortSize.X, 0, distanceMovedY / (ViewPortSize.Y + game.GuiService:GetGuiInset().Y), 0)
	UI.Position = UDim2.new(math.clamp(Pos.X.Scale, 0, 1-UI.Size.X.Scale), 0, math.clamp(Pos.Y.Scale, 0, 1-UI.Size.Y.Scale), 0)
end

--// Connections

UI.MouseEnter:Connect(function()
	Hovered = true
end)

UI.MouseLeave:Connect(function()
	Hovered = false
end)

UIS.InputBegan:Connect(function(input, processed)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch and not processed then
		Holding = Hovered
		if Holding then
			InitialX, InitialY = Mouse.X, Mouse.Y
			UIInitialPos = UI.Position

			MoveCon = Mouse.Move:Connect(function()
				Drag(processed)
			end)
		end
	end
end)

UIS.InputEnded:Connect(function(input, processed)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch and not processed then
		Holding = false
	end
end) end,
                                Properties = {
                                    Name = "Draggable"
                                },
                                Reference = 124,
                                ClassName = "LocalScript"
                            },
                            {
                                Properties = {
                                    Name = "CurrentScript"
                                },
                                Reference = 130,
                                ClassName = "ObjectValue"
                            },
                            {
                                Children = {
                                    {
                                        Properties = {
                                            CornerRadius = UDim.new(0, 10)
                                        },
                                        Reference = 128,
                                        ClassName = "UICorner"
                                    }
                                },
                                Properties = {
                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                    TextColor3 = Color3.new(1, 1, 1),
                                    BorderColor3 = Color3.new(0, 0, 0),
                                    Text = "Write to Unique File",
                                    Name = "Writefile",
                                    Position = UDim2.new(0.3079999983310699, 0, 0.009999999776482582, 0),
                                    Size = UDim2.new(0, 140, 0, 34),
                                    BorderSizePixel = 0,
                                    TextSize = 14,
                                    BackgroundColor3 = Color3.new(0.3294117748737335, 0.3294117748737335, 0.3294117748737335)
                                },
                                Reference = 127,
                                ClassName = "TextButton"
                            },
                            {
                                Closure = function() 
local Holder = script.Parent

local Write = Holder:WaitForChild("Writefile")
local Object = Holder:WaitForChild("CurrentScript")
local Output = Holder:WaitForChild("TextHolder").Decompiled
local Name = Holder:WaitForChild("ScriptName")

local function FilterString(String, AAA)
	if typeof(String) ~= "string" then String = tostring(String) end
	local Copy = ""

	for i = 1, string.len(String) do
		local Char = string.sub(String, i, i)
		local Byte = string.byte(Char)

		if Char:match("[%w%s]+") or Char == "." then
			Copy = Copy .. Char
		end
	end

	return Copy
end

local function GetFullName(Instance)
	local Parent = Instance.Parent
	local Ancestor = (Parent == nil and "nil" or "game")
	local Path = "." .. Instance.Name

	while Parent and (Parent ~= game and Parent ~= nil) do
		if Parent.Parent == game then
			Path = "." .. Parent.Name  .. Path
		else
			Path = "." .. Parent.Name .. Path
		end

		Parent = Parent.Parent
	end

	return FilterString(Ancestor .. Path)
end

if game:GetService("RunService"):IsStudio() then
	writefile = warn
end

Write.Activated:Connect(function()
	if writefile then
		local Obj = Object.Value
		
		if not Obj then return end
		
		local Path = GetFullName(Obj)
		local Str = ("{%s} %s @ %s.lua"):format(Obj.ClassName, Path, tostring(DateTime.now()))
		
		writefile(Str, Output.Text)
	end
end)

Holder:GetPropertyChangedSignal("Visible"):Connect(function()
	Name.Text = Object.Value and "Path: " .. GetFullName(Object.Value) or ""
end)

Output:GetPropertyChangedSignal("Text"):Connect(function()
	Name.Text = Object.Value and "Path: " .. GetFullName(Object.Value) or ""
end) end,
                                Properties = {
                                    Name = "Handler"
                                },
                                Reference = 129,
                                ClassName = "LocalScript"
                            },
                            {
                                Children = {
                                    {
                                        Properties = {
                                            CornerRadius = UDim.new(0, 10)
                                        },
                                        Reference = 126,
                                        ClassName = "UICorner"
                                    }
                                },
                                Properties = {
                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                    TextColor3 = Color3.new(1, 1, 1),
                                    BorderColor3 = Color3.new(0, 0, 0),
                                    Text = "Copy to Clipboard",
                                    Name = "CopyButton",
                                    Position = UDim2.new(0.01200000010430813, 0, 0.009999999776482582, 0),
                                    Size = UDim2.new(0, 140, 0, 34),
                                    BorderSizePixel = 0,
                                    TextSize = 14,
                                    BackgroundColor3 = Color3.new(0.3294117748737335, 0.3294117748737335, 0.3294117748737335)
                                },
                                Reference = 125,
                                ClassName = "TextButton"
                            },
                            {
                                Properties = {
                                    CornerRadius = UDim.new(0, 10)
                                },
                                Reference = 120,
                                ClassName = "UICorner"
                            },
                            {
                                Children = {
                                    {
                                        Properties = {
                                            CornerRadius = UDim.new(0, 10)
                                        },
                                        Reference = 122,
                                        ClassName = "UICorner"
                                    },
                                    {
                                        Closure = function() local Viewer = script.Parent.Parent

script.Parent.Activated:Connect(function()
	Viewer.Visible = false
end) end,
                                        Reference = 123,
                                        ClassName = "LocalScript"
                                    }
                                },
                                Properties = {
                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                    TextColor3 = Color3.new(1, 1, 1),
                                    BorderColor3 = Color3.new(0, 0, 0),
                                    Text = "X",
                                    Name = "CloseButton",
                                    Position = UDim2.new(0.9200000166893005, 0, 0.009999999776482582, 0),
                                    Size = UDim2.new(0, 34, 0, 34),
                                    BorderSizePixel = 0,
                                    TextSize = 27,
                                    BackgroundColor3 = Color3.new(0.3294117748737335, 0.3294117748737335, 0.3294117748737335)
                                },
                                Reference = 121,
                                ClassName = "TextButton"
                            },
                            {
                                Children = {
                                    {
                                        Children = {
                                            {
                                                Closure = function() local Highlighter = require(script.Parent.Parent.Parent.Parent.Frame.Modules.Highlighter)

Highlighter.highlight({textObject = script.Parent}) end,
                                                Properties = {
                                                    Name = "Highlighter"
                                                },
                                                Reference = 119,
                                                ClassName = "LocalScript"
                                            }
                                        },
                                        Properties = {
                                            FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                            TextColor3 = Color3.new(1, 1, 1),
                                            BorderColor3 = Color3.new(0, 0, 0),
                                            Text = "-- Example text example text bla bla bla\n\nfor Hot, Men in YourArea do\n\tClickHereToday()\nend",
                                            BorderSizePixel = 0,
                                            ZIndex = 3,
                                            Size = UDim2.new(0, 488, 0, 455),
                                            Position = UDim2.new(0, 6, 0, 0),
                                            Name = "Decompiled",
                                            TextXAlignment = Enum.TextXAlignment.Left,
                                            AutomaticSize = Enum.AutomaticSize.Y,
                                            TextYAlignment = Enum.TextYAlignment.Top,
                                            TextSize = 14,
                                            BackgroundColor3 = Color3.new(0.196078434586525, 0.196078434586525, 0.196078434586525)
                                        },
                                        Reference = 118,
                                        ClassName = "TextLabel"
                                    }
                                },
                                Properties = {
                                    ScrollBarImageColor3 = Color3.new(0, 0, 0),
                                    Active = true,
                                    BorderColor3 = Color3.new(0, 0, 0),
                                    AutomaticCanvasSize = Enum.AutomaticSize.Y,
                                    Name = "TextHolder",
                                    Position = UDim2.new(0, 6, 0, 93),
                                    Size = UDim2.new(0, 488, 0, 452),
                                    ZIndex = 2,
                                    BorderSizePixel = 0,
                                    BackgroundColor3 = Color3.new(0.196078434586525, 0.196078434586525, 0.196078434586525)
                                },
                                Reference = 117,
                                ClassName = "ScrollingFrame"
                            },
                            {
                                Properties = {
                                    TextWrapped = true,
                                    TextColor3 = Color3.new(1, 1, 1),
                                    BorderColor3 = Color3.new(0, 0, 0),
                                    Text = "Path:  ",
                                    Position = UDim2.new(0.02400000020861626, 0, 0.09454545378684998, 0),
                                    Size = UDim2.new(0, 454, 0, 35),
                                    Name = "ScriptName",
                                    TextXAlignment = Enum.TextXAlignment.Left,
                                    BorderSizePixel = 0,
                                    FontFace = Font.new("rbxasset://fonts/families/Ubuntu.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                    TextScaled = true,
                                    BackgroundColor3 = Color3.new(0.196078434586525, 0.196078434586525, 0.196078434586525)
                                },
                                Reference = 131,
                                ClassName = "TextLabel"
                            }
                        },
                        Properties = {
                            Visible = false,
                            Name = "ScriptViewer",
                            Position = UDim2.new(0.498346209526062, 0, 0.3097409605979919, 0),
                            BorderColor3 = Color3.new(0, 0, 0),
                            Size = UDim2.new(0, 500, 0, 550),
                            BorderSizePixel = 0,
                            BackgroundColor3 = Color3.new(0.196078434586525, 0.196078434586525, 0.196078434586525)
                        },
                        Reference = 116,
                        ClassName = "Frame"
                    },
                    {
                        Children = {
                            {
                                Children = {
                                    {
                                        Closure = function() local Explorer = script.Parent.Parent:WaitForChild("Explorer")
local Settings = script.Parent.Parent:WaitForChild("SettingsButton")
local Button = script.Parent

local Offset = Explorer.Parent.AbsoluteSize.X + Button.AbsoluteSize.X
local YPos = Button.Position.Y.Offset



Button.Activated:Connect(function()
	local Visible = Explorer.Visible
	
	Button.Text = Visible and "\226\172\133" or "\226\158\161"
	Explorer.Visible = not Visible
	Settings.Visible = Explorer.Visible
end)

while game:GetService("RunService").RenderStepped:Wait() and (Explorer and Button and Explorer.Parent and Button.Parent) do
	if Explorer.Visible then
		Button.Position = UDim2.new(0, -Button.AbsoluteSize.X, 0, YPos)
	else
		Button.Position = UDim2.new(0, Explorer.Size.X.Offset - Button.Size.X.Offset , 0, YPos)
	end
end

 end,
                                        Properties = {
                                            Name = "MinimizeHandler"
                                        },
                                        Reference = 64,
                                        ClassName = "LocalScript"
                                    }
                                },
                                Properties = {
                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                    TextColor3 = Color3.new(1, 1, 1),
                                    BorderColor3 = Color3.new(0, 0, 0),
                                    Text = "\226\158\161",
                                    BorderSizePixel = 0,
                                    Name = "MinimizeButton",
                                    Position = UDim2.new(0, -62, 0, 184),
                                    Size = UDim2.new(0, 62, 0, 62),
                                    ZIndex = 998,
                                    TextSize = 36,
                                    BackgroundColor3 = Color3.new(0.3098039329051971, 0.3098039329051971, 0.3098039329051971)
                                },
                                Reference = 63,
                                ClassName = "TextButton"
                            },
                            {
                                Children = {
                                    {
                                        Children = {
                                            {
                                                Properties = {
                                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                    TextColor3 = Color3.new(1, 1, 1),
                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                    Text = "View Script",
                                                    Name = "Decompile",
                                                    Position = UDim2.new(-0.00440528616309166, 0, 0.4969214498996735, 0),
                                                    Size = UDim2.new(0, 228, 0, 31),
                                                    BorderSizePixel = 0,
                                                    TextSize = 14,
                                                    BackgroundColor3 = Color3.new(0.294117659330368, 0.294117659330368, 0.294117659330368)
                                                },
                                                Reference = 60,
                                                ClassName = "TextButton"
                                            },
                                            {
                                                Properties = {
                                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                    TextColor3 = Color3.new(1, 1, 1),
                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                    Text = "Teleport To",
                                                    Name = "TeleportTo",
                                                    Position = UDim2.new(-0.00440528616309166, 0, 0.8088986277580261, 0),
                                                    Size = UDim2.new(0, 228, 0, 31),
                                                    BorderSizePixel = 0,
                                                    TextSize = 14,
                                                    BackgroundColor3 = Color3.new(0.294117659330368, 0.294117659330368, 0.294117659330368)
                                                },
                                                Reference = 62,
                                                ClassName = "TextButton"
                                            },
                                            {
                                                Properties = {
                                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                    TextColor3 = Color3.new(1, 1, 1),
                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                    Text = "Clear Children",
                                                    Name = "ClearChildren",
                                                    Position = UDim2.new(-0.00440528616309166, 0, 0.3393878638744354, 0),
                                                    Size = UDim2.new(0, 228, 0, 31),
                                                    BorderSizePixel = 0,
                                                    TextSize = 14,
                                                    BackgroundColor3 = Color3.new(0.294117659330368, 0.294117659330368, 0.294117659330368)
                                                },
                                                Reference = 59,
                                                ClassName = "TextButton"
                                            },
                                            {
                                                Properties = {
                                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                    TextColor3 = Color3.new(1, 1, 1),
                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                    Text = "Teleport Here",
                                                    Name = "TeleportHere",
                                                    Position = UDim2.new(-0.00440528616309166, 0, 0.6507353782653809, 0),
                                                    Size = UDim2.new(0, 228, 0, 31),
                                                    BorderSizePixel = 0,
                                                    TextSize = 14,
                                                    BackgroundColor3 = Color3.new(0.294117659330368, 0.294117659330368, 0.294117659330368)
                                                },
                                                Reference = 61,
                                                ClassName = "TextButton"
                                            },
                                            {
                                                Properties = {
                                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                    TextColor3 = Color3.new(1, 1, 1),
                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                    Text = "Copy Path",
                                                    Name = "CopyPath",
                                                    Position = UDim2.new(-0.00440528616309166, 0, 0.1860275268554688, 0),
                                                    Size = UDim2.new(0, 228, 0, 31),
                                                    BorderSizePixel = 0,
                                                    TextSize = 14,
                                                    BackgroundColor3 = Color3.new(0.294117659330368, 0.294117659330368, 0.294117659330368)
                                                },
                                                Reference = 58,
                                                ClassName = "TextButton"
                                            },
                                            {
                                                Properties = {
                                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                    TextColor3 = Color3.new(1, 1, 1),
                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                    Text = "Group",
                                                    Name = "Group",
                                                    Position = UDim2.new(-0.00440528616309166, 0, 0.03179588913917542, 0),
                                                    Size = UDim2.new(0, 228, 0, 31),
                                                    BorderSizePixel = 0,
                                                    TextSize = 14,
                                                    BackgroundColor3 = Color3.new(0.294117659330368, 0.294117659330368, 0.294117659330368)
                                                },
                                                Reference = 57,
                                                ClassName = "TextButton"
                                            },
                                            {
                                                Properties = {
                                                    CornerRadius = UDim.new(0, 10)
                                                },
                                                Reference = 56,
                                                ClassName = "UICorner"
                                            }
                                        },
                                        Properties = {
                                            Name = "ActionsTab",
                                            Position = UDim2.new(0, 35, 0, 167),
                                            BorderColor3 = Color3.new(0, 0, 0),
                                            Size = UDim2.new(0, 227, 0, 196),
                                            BorderSizePixel = 0,
                                            BackgroundColor3 = Color3.new(0.1019607931375504, 0.1019607931375504, 0.1019607931375504)
                                        },
                                        Reference = 55,
                                        ClassName = "Frame"
                                    },
                                    {
                                        Children = {
                                            {
                                                Children = {
                                                    {
                                                        Children = {
                                                            {
                                                                Properties = {
                                                                    SortOrder = Enum.SortOrder.LayoutOrder
                                                                },
                                                                Reference = 21,
                                                                ClassName = "UIListLayout"
                                                            }
                                                        },
                                                        Properties = {
                                                            ScrollBarImageColor3 = Color3.new(0, 0, 0),
                                                            Active = true,
                                                            BorderColor3 = Color3.new(0, 0, 0),
                                                            Size = UDim2.new(0, 394, 0, 825),
                                                            Name = "List",
                                                            Position = UDim2.new(0.002915235934779048, 0, 0, 0),
                                                            BorderSizePixel = 0,
                                                            AutomaticCanvasSize = Enum.AutomaticSize.Y,
                                                            AutomaticSize = Enum.AutomaticSize.X,
                                                            BackgroundColor3 = Color3.new(0.3098039329051971, 0.3098039329051971, 0.3098039329051971)
                                                        },
                                                        Reference = 20,
                                                        ClassName = "ScrollingFrame"
                                                    }
                                                },
                                                Properties = {
                                                    Size = UDim2.new(0, 397, 0, 828),
                                                    Name = "Instances",
                                                    Position = UDim2.new(1.226837298418104e-06, 0, 0.03128127381205559, 0),
                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                    BorderSizePixel = 0,
                                                    AutomaticSize = Enum.AutomaticSize.XY,
                                                    BackgroundColor3 = Color3.new(0.3098039329051971, 0.3098039329051971, 0.3098039329051971)
                                                },
                                                Reference = 19,
                                                ClassName = "Frame"
                                            },
                                            {
                                                Children = {
                                                    {
                                                        Properties = {
                                                            FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                            TextColor3 = Color3.new(1, 1, 1),
                                                            BorderColor3 = Color3.new(0, 0, 0),
                                                            Text = ">",
                                                            Name = "Expand",
                                                            BackgroundTransparency = 1,
                                                            Size = UDim2.new(0, 31, 0, 24),
                                                            BorderSizePixel = 0,
                                                            AutomaticSize = Enum.AutomaticSize.XY,
                                                            TextSize = 24,
                                                            BackgroundColor3 = Color3.new(0.3490196168422699, 0.3490196168422699, 0.3490196168422699)
                                                        },
                                                        Reference = 18,
                                                        ClassName = "TextButton"
                                                    },
                                                    {
                                                        Children = {
                                                            {
                                                                Properties = {
                                                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                    TextColor3 = Color3.new(0, 0, 0),
                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                    Text = "\240\159\140\142",
                                                                    Name = "Type",
                                                                    Size = UDim2.new(0, 29, 0, 24),
                                                                    BackgroundTransparency = 1,
                                                                    Position = UDim2.new(-0.0003117487940471619, 0, 0, 0),
                                                                    BorderSizePixel = 0,
                                                                    AutomaticSize = Enum.AutomaticSize.XY,
                                                                    TextSize = 14,
                                                                    BackgroundColor3 = Color3.new(0.3490196168422699, 0.3490196168422699, 0.3490196168422699)
                                                                },
                                                                Reference = 17,
                                                                ClassName = "TextLabel"
                                                            }
                                                        },
                                                        Properties = {
                                                            FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                            TextDirection = Enum.TextDirection.LeftToRight,
                                                            TextTruncate = Enum.TextTruncate.AtEnd,
                                                            TextSize = 14,
                                                            Size = UDim2.new(0, 290, 0, 24),
                                                            TextColor3 = Color3.new(1, 1, 1),
                                                            BorderColor3 = Color3.new(0, 0, 0),
                                                            Text = "\t\t\t\tInstance",
                                                            AutoButtonColor = false,
                                                            Name = "NameButton",
                                                            TextWrapped = true,
                                                            BackgroundTransparency = 1,
                                                            TextXAlignment = Enum.TextXAlignment.Left,
                                                            Position = UDim2.new(0.09657321125268936, 0, 0, 0),
                                                            BorderSizePixel = 0,
                                                            AutomaticSize = Enum.AutomaticSize.XY,
                                                            BackgroundColor3 = Color3.new(0.3490196168422699, 0.3490196168422699, 0.3490196168422699)
                                                        },
                                                        Reference = 16,
                                                        ClassName = "TextButton"
                                                    }
                                                },
                                                Properties = {
                                                    Visible = false,
                                                    Size = UDim2.new(0, 393, 0, 24),
                                                    Name = "Example",
                                                    Position = UDim2.new(0.003114939900115132, 0, -0.0001040340430336073, 0),
                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                    BorderSizePixel = 0,
                                                    AutomaticSize = Enum.AutomaticSize.XY,
                                                    BackgroundColor3 = Color3.new(0.3098039329051971, 0.3098039329051971, 0.3098039329051971)
                                                },
                                                Reference = 15,
                                                ClassName = "Frame"
                                            },
                                            {
                                                Children = {
                                                    {
                                                        Children = {
                                                            {
                                                                Properties = {
                                                                    Padding = UDim.new(0, 2),
                                                                    HorizontalAlignment = Enum.HorizontalAlignment.Right,
                                                                    SortOrder = Enum.SortOrder.LayoutOrder
                                                                },
                                                                Reference = 11,
                                                                ClassName = "UIListLayout"
                                                            }
                                                        },
                                                        Properties = {
                                                            ScrollBarImageColor3 = Color3.new(0, 0, 0),
                                                            Active = true,
                                                            AutomaticCanvasSize = Enum.AutomaticSize.XY,
                                                            ScrollBarThickness = 0,
                                                            Position = UDim2.new(0, 0, 0.0847669318318367, 0),
                                                            BorderSizePixel = 0,
                                                            Size = UDim2.new(0, 397, 0, 315),
                                                            Name = "Properties",
                                                            ScrollingDirection = Enum.ScrollingDirection.Y,
                                                            SizeConstraint = Enum.SizeConstraint.RelativeXX,
                                                            BorderColor3 = Color3.new(0, 0, 0),
                                                            AutomaticSize = Enum.AutomaticSize.X,
                                                            BackgroundColor3 = Color3.new(0.2588235437870026, 0.2588235437870026, 0.2588235437870026)
                                                        },
                                                        Reference = 10,
                                                        ClassName = "ScrollingFrame"
                                                    },
                                                    {
                                                        Children = {
                                                            {
                                                                Properties = {
                                                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                    Text = "Properties",
                                                                    Size = UDim2.new(0, 398, 0, 24),
                                                                    Name = "Title",
                                                                    Position = UDim2.new(9.224456789524993e-07, 0, 0.2083333283662796, 0),
                                                                    BorderSizePixel = 0,
                                                                    AutomaticSize = Enum.AutomaticSize.XY,
                                                                    TextSize = 14,
                                                                    BackgroundColor3 = Color3.new(0.2117647230625153, 0.2117647230625153, 0.2117647230625153)
                                                                },
                                                                Reference = 9,
                                                                ClassName = "TextLabel"
                                                            }
                                                        },
                                                        Properties = {
                                                            Name = "TopBar",
                                                            BorderColor3 = Color3.new(0, 0, 0),
                                                            Size = UDim2.new(0, 397, 0, 24),
                                                            BorderSizePixel = 0,
                                                            BackgroundColor3 = Color3.new(0.3098039329051971, 0.3098039329051971, 0.3098039329051971)
                                                        },
                                                        Reference = 8,
                                                        ClassName = "Frame"
                                                    },
                                                    {
                                                        Children = {
                                                            {
                                                                Properties = {
                                                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                    Text = "Property",
                                                                    Name = "Property",
                                                                    TextTruncate = Enum.TextTruncate.AtEnd,
                                                                    Size = UDim2.new(0, 125, 0, 23),
                                                                    BorderSizePixel = 0,
                                                                    TextSize = 14,
                                                                    BackgroundColor3 = Color3.new(0.4235294461250305, 0.4235294461250305, 0.4235294461250305)
                                                                },
                                                                Reference = 13,
                                                                ClassName = "TextLabel"
                                                            },
                                                            {
                                                                Properties = {
                                                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                    Text = "",
                                                                    BorderSizePixel = 0,
                                                                    Size = UDim2.new(0, 192, 0, 22),
                                                                    Position = UDim2.new(0.4156934320926666, 0, 0.0910542830824852, 0),
                                                                    Name = "Value",
                                                                    TextTruncate = Enum.TextTruncate.AtEnd,
                                                                    TextXAlignment = Enum.TextXAlignment.Left,
                                                                    ClearTextOnFocus = false,
                                                                    TextSize = 14,
                                                                    BackgroundColor3 = Color3.new(0.1137254908680916, 0.1137254908680916, 0.1137254908680916)
                                                                },
                                                                Reference = 14,
                                                                ClassName = "TextBox"
                                                            }
                                                        },
                                                        Properties = {
                                                            Position = UDim2.new(0.002344856970012188, 0, -0.0007153837941586971, 0),
                                                            Size = UDim2.new(0, 394, 0, 24),
                                                            Name = "Example",
                                                            ClipsDescendants = true,
                                                            BorderColor3 = Color3.new(0, 0, 0),
                                                            BorderSizePixel = 0,
                                                            AutomaticSize = Enum.AutomaticSize.XY,
                                                            BackgroundColor3 = Color3.new(0.1137254908680916, 0.1137254908680916, 0.1137254908680916)
                                                        },
                                                        Reference = 12,
                                                        ClassName = "Frame"
                                                    }
                                                },
                                                Properties = {
                                                    Position = UDim2.new(0.0007759745931252837, 0, 0.713099479675293, 0),
                                                    Size = UDim2.new(0, 398, 0, 346),
                                                    Name = "Bottom",
                                                    ClipsDescendants = true,
                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                    BorderSizePixel = 0,
                                                    AutomaticSize = Enum.AutomaticSize.XY,
                                                    BackgroundColor3 = Color3.new(0.2588235437870026, 0.2588235437870026, 0.2588235437870026)
                                                },
                                                Reference = 7,
                                                ClassName = "Frame"
                                            },
                                            {
                                                Children = {
                                                    {
                                                        Properties = {
                                                            FontFace = Font.new("rbxasset://fonts/families/AccanthisADFStd.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                            TextColor3 = Color3.new(1, 1, 1),
                                                            BorderColor3 = Color3.new(0, 0, 0),
                                                            Text = "Shrex Explorer v1",
                                                            Position = UDim2.new(0.00311555340886116, 0, 0.002014100551605225, 0),
                                                            Size = UDim2.new(0, 392, 0, 17),
                                                            Name = "Title",
                                                            TextXAlignment = Enum.TextXAlignment.Left,
                                                            BorderSizePixel = 0,
                                                            AutomaticSize = Enum.AutomaticSize.XY,
                                                            TextSize = 14,
                                                            BackgroundColor3 = Color3.new(0.2745098173618317, 0.2745098173618317, 0.2745098173618317)
                                                        },
                                                        Reference = 23,
                                                        ClassName = "TextLabel"
                                                    },
                                                    {
                                                        Children = {
                                                            {
                                                                Properties = {
                                                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                    Text = "Paste Into",
                                                                    Size = UDim2.new(0, 63, 0, 22),
                                                                    Name = "PasteInto",
                                                                    Position = UDim2.new(0.3949842154979706, 0, 0, 0),
                                                                    BorderSizePixel = 0,
                                                                    AutomaticSize = Enum.AutomaticSize.XY,
                                                                    TextSize = 14,
                                                                    BackgroundColor3 = Color3.new(0.2470588386058807, 0.2470588386058807, 0.2470588386058807)
                                                                },
                                                                Reference = 27,
                                                                ClassName = "TextButton"
                                                            },
                                                            {
                                                                Properties = {
                                                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                    Text = "Clone",
                                                                    Size = UDim2.new(0, 69, 0, 22),
                                                                    Name = "Clone",
                                                                    Position = UDim2.new(0.789968729019165, 0, 0, 0),
                                                                    BorderSizePixel = 0,
                                                                    AutomaticSize = Enum.AutomaticSize.XY,
                                                                    TextSize = 14,
                                                                    BackgroundColor3 = Color3.new(0.2470588237047195, 0.2470588237047195, 0.2470588237047195)
                                                                },
                                                                Reference = 29,
                                                                ClassName = "TextButton"
                                                            },
                                                            {
                                                                Properties = {
                                                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                    Text = "Copy",
                                                                    Size = UDim2.new(0, 63, 0, 22),
                                                                    Name = "Copy",
                                                                    Position = UDim2.new(0.1974921077489853, 0, 0, 0),
                                                                    BorderSizePixel = 0,
                                                                    AutomaticSize = Enum.AutomaticSize.XY,
                                                                    TextSize = 14,
                                                                    BackgroundColor3 = Color3.new(0.2470588237047195, 0.2470588237047195, 0.2470588237047195)
                                                                },
                                                                Reference = 26,
                                                                ClassName = "TextButton"
                                                            },
                                                            {
                                                                Properties = {
                                                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                    Text = "Cut Into",
                                                                    Size = UDim2.new(0, 63, 0, 22),
                                                                    Name = "Cut",
                                                                    Position = UDim2.new(0.5924763083457947, 0, 0, 0),
                                                                    BorderSizePixel = 0,
                                                                    AutomaticSize = Enum.AutomaticSize.XY,
                                                                    TextSize = 14,
                                                                    BackgroundColor3 = Color3.new(0.2470588386058807, 0.2470588386058807, 0.2470588386058807)
                                                                },
                                                                Reference = 28,
                                                                ClassName = "TextButton"
                                                            },
                                                            {
                                                                Properties = {
                                                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                    Text = "Delete",
                                                                    Name = "Delete",
                                                                    Size = UDim2.new(0, 63, 0, 22),
                                                                    BorderSizePixel = 0,
                                                                    AutomaticSize = Enum.AutomaticSize.XY,
                                                                    TextSize = 14,
                                                                    BackgroundColor3 = Color3.new(0.2470588386058807, 0.2470588386058807, 0.2470588386058807)
                                                                },
                                                                Reference = 25,
                                                                ClassName = "TextButton"
                                                            }
                                                        },
                                                        Properties = {
                                                            Size = UDim2.new(0, 394, 0, 22),
                                                            Name = "Controls",
                                                            Position = UDim2.new(0.01005146559327841, 0, 0.7204693555831909, 0),
                                                            BorderColor3 = Color3.new(0, 0, 0),
                                                            BorderSizePixel = 0,
                                                            AutomaticSize = Enum.AutomaticSize.XY,
                                                            BackgroundColor3 = Color3.new(0.2470588237047195, 0.2470588237047195, 0.2470588237047195)
                                                        },
                                                        Reference = 24,
                                                        ClassName = "Frame"
                                                    }
                                                },
                                                Properties = {
                                                    Name = "TopBar",
                                                    Size = UDim2.new(0, 398, 0, 13),
                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                    BorderSizePixel = 0,
                                                    AutomaticSize = Enum.AutomaticSize.XY,
                                                    BackgroundColor3 = Color3.new(0.2470588237047195, 0.2470588237047195, 0.2470588237047195)
                                                },
                                                Reference = 22,
                                                ClassName = "Frame"
                                            }
                                        },
                                        Properties = {
                                            Name = "ExplorerTab",
                                            BorderColor3 = Color3.new(0, 0, 0),
                                            Size = UDim2.new(0, 398, 0, 1210),
                                            BorderSizePixel = 0,
                                            BackgroundColor3 = Color3.new(0.2588235437870026, 0.2588235437870026, 0.2588235437870026)
                                        },
                                        Reference = 6,
                                        ClassName = "Frame"
                                    },
                                    {
                                        Properties = {
                                            ApplyStrokeMode = Enum.ApplyStrokeMode.Border,
                                            LineJoinMode = Enum.LineJoinMode.Miter,
                                            Color = Color3.new(0.2588235437870026, 0.2588235437870026, 0.2588235437870026),
                                            Transparency = 0.8999999761581421,
                                            Thickness = 2.599999904632568
                                        },
                                        Reference = 5,
                                        ClassName = "UIStroke"
                                    },
                                    {
                                        Children = {
                                            {
                                                Properties = {
                                                    CornerRadius = UDim.new(0.4000000059604645, 0)
                                                },
                                                Reference = 53,
                                                ClassName = "UICorner"
                                            },
                                            {
                                                Properties = {
                                                    Thickness = 2.200000047683716,
                                                    Transparency = 0.8999999761581421,
                                                    Color = Color3.new(0.2588235437870026, 0.2588235437870026, 0.2588235437870026)
                                                },
                                                Reference = 54,
                                                ClassName = "UIStroke"
                                            }
                                        },
                                        Properties = {
                                            Size = UDim2.new(0, 98, 0, 100),
                                            Name = "Flair",
                                            Position = UDim2.new(-0.1560000330209732, 0, 0.1524380147457123, 0),
                                            BorderColor3 = Color3.new(0, 0, 0),
                                            ZIndex = 0,
                                            BorderSizePixel = 0,
                                            BackgroundColor3 = Color3.new(0.3098039329051971, 0.3098039329051971, 0.3098039329051971)
                                        },
                                        Reference = 52,
                                        ClassName = "Frame"
                                    },
                                    {
                                        Children = {
                                            {
                                                Children = {
                                                    {
                                                        Properties = {
                                                            Thickness = 2.299999952316284,
                                                            Transparency = 0.8999999761581421,
                                                            Color = Color3.new(0.2588235437870026, 0.2588235437870026, 0.2588235437870026)
                                                        },
                                                        Reference = 51,
                                                        ClassName = "UIStroke"
                                                    },
                                                    {
                                                        Properties = {
                                                            CornerRadius = UDim.new(0.4000000059604645, 0)
                                                        },
                                                        Reference = 50,
                                                        ClassName = "UICorner"
                                                    }
                                                },
                                                Properties = {
                                                    Size = UDim2.new(0, 98, 0, 100),
                                                    Name = "Flair",
                                                    Position = UDim2.new(-0.1560000032186508, 0, 0.06400000303983688, 0),
                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                    ZIndex = 0,
                                                    BorderSizePixel = 0,
                                                    BackgroundColor3 = Color3.new(0.3098039329051971, 0.3098039329051971, 0.3098039329051971)
                                                },
                                                Reference = 49,
                                                ClassName = "Frame"
                                            },
                                            {
                                                Children = {
                                                    {
                                                        Children = {
                                                            {
                                                                Properties = {
                                                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                    Text = "",
                                                                    Size = UDim2.new(0, 165, 0, 55),
                                                                    Name = "Input",
                                                                    Position = UDim2.new(0.5843828916549683, 0, 0, 0),
                                                                    BorderSizePixel = 0,
                                                                    PlaceholderText = "(1 - 255)",
                                                                    TextSize = 24,
                                                                    BackgroundColor3 = Color3.new(0.3137255012989044, 0.3137255012989044, 0.3137255012989044)
                                                                },
                                                                Reference = 39,
                                                                ClassName = "TextBox"
                                                            },
                                                            {
                                                                Properties = {
                                                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                    Text = "Selection Color Red",
                                                                    Name = "Title",
                                                                    TextXAlignment = Enum.TextXAlignment.Left,
                                                                    Size = UDim2.new(0, 198, 0, 55),
                                                                    BorderSizePixel = 0,
                                                                    TextSize = 28,
                                                                    BackgroundColor3 = Color3.new(0.3529411852359772, 0.3529411852359772, 0.3529411852359772)
                                                                },
                                                                Reference = 38,
                                                                ClassName = "TextLabel"
                                                            }
                                                        },
                                                        Properties = {
                                                            Name = "ColorRed",
                                                            Position = UDim2.new(0.003112945938482881, 0, 0.0522325187921524, 0),
                                                            BorderColor3 = Color3.new(0, 0, 0),
                                                            Size = UDim2.new(0, 397, 0, 55),
                                                            BorderSizePixel = 0,
                                                            BackgroundColor3 = Color3.new(0.3529411852359772, 0.3529411852359772, 0.3529411852359772)
                                                        },
                                                        Reference = 37,
                                                        ClassName = "Frame"
                                                    },
                                                    {
                                                        Children = {
                                                            {
                                                                Properties = {
                                                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                    Text = "",
                                                                    Size = UDim2.new(0, 165, 0, 55),
                                                                    Name = "Input",
                                                                    Position = UDim2.new(0.5843828916549683, 0, 0, 0),
                                                                    BorderSizePixel = 0,
                                                                    PlaceholderText = "(1 - inf)",
                                                                    TextSize = 24,
                                                                    BackgroundColor3 = Color3.new(0.3137255012989044, 0.3137255012989044, 0.3137255012989044)
                                                                },
                                                                Reference = 48,
                                                                ClassName = "TextBox"
                                                            },
                                                            {
                                                                Properties = {
                                                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                    Text = "Instance Refresh Time",
                                                                    Name = "Title",
                                                                    TextXAlignment = Enum.TextXAlignment.Left,
                                                                    Size = UDim2.new(0, 198, 0, 55),
                                                                    BorderSizePixel = 0,
                                                                    TextSize = 28,
                                                                    BackgroundColor3 = Color3.new(0.3529411852359772, 0.3529411852359772, 0.3529411852359772)
                                                                },
                                                                Reference = 47,
                                                                ClassName = "TextLabel"
                                                            }
                                                        },
                                                        Properties = {
                                                            Name = "RefreshTime",
                                                            Position = UDim2.new(0.003112945938482881, 0, 0.2106149941682816, 0),
                                                            BorderColor3 = Color3.new(0, 0, 0),
                                                            Size = UDim2.new(0, 397, 0, 55),
                                                            BorderSizePixel = 0,
                                                            BackgroundColor3 = Color3.new(0.3529411852359772, 0.3529411852359772, 0.3529411852359772)
                                                        },
                                                        Reference = 46,
                                                        ClassName = "Frame"
                                                    },
                                                    {
                                                        Children = {
                                                            {
                                                                Properties = {
                                                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                    Text = "",
                                                                    Size = UDim2.new(0, 165, 0, 55),
                                                                    Name = "Input",
                                                                    Position = UDim2.new(0.5843828916549683, 0, 0, 0),
                                                                    BorderSizePixel = 0,
                                                                    PlaceholderText = "(1 - 255)",
                                                                    TextSize = 24,
                                                                    BackgroundColor3 = Color3.new(0.3137255012989044, 0.3137255012989044, 0.3137255012989044)
                                                                },
                                                                Reference = 42,
                                                                ClassName = "TextBox"
                                                            },
                                                            {
                                                                Properties = {
                                                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                    Text = "Selection Color Green",
                                                                    Name = "Title",
                                                                    TextXAlignment = Enum.TextXAlignment.Left,
                                                                    Size = UDim2.new(0, 198, 0, 55),
                                                                    BorderSizePixel = 0,
                                                                    TextSize = 28,
                                                                    BackgroundColor3 = Color3.new(0.3529411852359772, 0.3529411852359772, 0.3529411852359772)
                                                                },
                                                                Reference = 41,
                                                                ClassName = "TextLabel"
                                                            }
                                                        },
                                                        Properties = {
                                                            Name = "ColorGreen",
                                                            Position = UDim2.new(0.003112945938482881, 0, 0.1044650375843048, 0),
                                                            BorderColor3 = Color3.new(0, 0, 0),
                                                            Size = UDim2.new(0, 397, 0, 55),
                                                            BorderSizePixel = 0,
                                                            BackgroundColor3 = Color3.new(0.3529411852359772, 0.3529411852359772, 0.3529411852359772)
                                                        },
                                                        Reference = 40,
                                                        ClassName = "Frame"
                                                    },
                                                    {
                                                        Children = {
                                                            {
                                                                Properties = {
                                                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                    Text = "",
                                                                    Size = UDim2.new(0, 165, 0, 55),
                                                                    Name = "Input",
                                                                    Position = UDim2.new(0.5843828916549683, 0, 0, 0),
                                                                    BorderSizePixel = 0,
                                                                    PlaceholderText = "(1 - 255)",
                                                                    TextSize = 24,
                                                                    BackgroundColor3 = Color3.new(0.3137255012989044, 0.3137255012989044, 0.3137255012989044)
                                                                },
                                                                Reference = 45,
                                                                ClassName = "TextBox"
                                                            },
                                                            {
                                                                Properties = {
                                                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                    Text = "Selection Color Blue",
                                                                    Name = "Title",
                                                                    TextXAlignment = Enum.TextXAlignment.Left,
                                                                    Size = UDim2.new(0, 198, 0, 55),
                                                                    BorderSizePixel = 0,
                                                                    TextSize = 28,
                                                                    BackgroundColor3 = Color3.new(0.3529411852359772, 0.3529411852359772, 0.3529411852359772)
                                                                },
                                                                Reference = 44,
                                                                ClassName = "TextLabel"
                                                            }
                                                        },
                                                        Properties = {
                                                            Name = "ColorBlue",
                                                            Position = UDim2.new(0.003112945938482881, 0, 0.1575400233268738, 0),
                                                            BorderColor3 = Color3.new(0, 0, 0),
                                                            Size = UDim2.new(0, 397, 0, 55),
                                                            BorderSizePixel = 0,
                                                            BackgroundColor3 = Color3.new(0.3529411852359772, 0.3529411852359772, 0.3529411852359772)
                                                        },
                                                        Reference = 43,
                                                        ClassName = "Frame"
                                                    },
                                                    {
                                                        Children = {
                                                            {
                                                                Properties = {
                                                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                    Text = "Highlight Selection",
                                                                    Name = "Title",
                                                                    TextXAlignment = Enum.TextXAlignment.Left,
                                                                    Size = UDim2.new(0, 198, 0, 55),
                                                                    BorderSizePixel = 0,
                                                                    TextSize = 28,
                                                                    BackgroundColor3 = Color3.new(0.3529411852359772, 0.3529411852359772, 0.3529411852359772)
                                                                },
                                                                Reference = 35,
                                                                ClassName = "TextLabel"
                                                            },
                                                            {
                                                                Properties = {
                                                                    TextWrapped = true,
                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                    Text = "\226\156\133",
                                                                    Size = UDim2.new(0, 165, 0, 55),
                                                                    Name = "Toggle",
                                                                    Position = UDim2.new(0.584871768951416, 0, 0, 0),
                                                                    BorderSizePixel = 0,
                                                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                    TextSize = 30,
                                                                    BackgroundColor3 = Color3.new(0.3137255012989044, 0.3137255012989044, 0.3137255012989044)
                                                                },
                                                                Reference = 36,
                                                                ClassName = "TextButton"
                                                            }
                                                        },
                                                        Properties = {
                                                            Name = "SelectionOutline",
                                                            Position = UDim2.new(0.003112945938482881, 0, 0, 0),
                                                            BorderColor3 = Color3.new(0, 0, 0),
                                                            Size = UDim2.new(0, 397, 0, 55),
                                                            BorderSizePixel = 0,
                                                            BackgroundColor3 = Color3.new(0.3529411852359772, 0.3529411852359772, 0.3529411852359772)
                                                        },
                                                        Reference = 34,
                                                        ClassName = "Frame"
                                                    }
                                                },
                                                Properties = {
                                                    Name = "Container",
                                                    Position = UDim2.new(0, 0, 0.0181818176060915, 0),
                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                    Size = UDim2.new(0, 399, 0, 1187),
                                                    BorderSizePixel = 0,
                                                    BackgroundColor3 = Color3.new(0.3098039329051971, 0.3098039329051971, 0.3098039329051971)
                                                },
                                                Reference = 33,
                                                ClassName = "Frame"
                                            },
                                            {
                                                Children = {
                                                    {
                                                        Properties = {
                                                            FontFace = Font.new("rbxasset://fonts/families/AccanthisADFStd.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                            TextColor3 = Color3.new(1, 1, 1),
                                                            BorderColor3 = Color3.new(0, 0, 0),
                                                            Text = "Shrettings",
                                                            Position = UDim2.new(0.003115860046818852, 0, 0.002009999705478549, 0),
                                                            Size = UDim2.new(0, 398, 0, 17),
                                                            Name = "Title",
                                                            TextXAlignment = Enum.TextXAlignment.Left,
                                                            BorderSizePixel = 0,
                                                            AutomaticSize = Enum.AutomaticSize.XY,
                                                            TextSize = 14,
                                                            BackgroundColor3 = Color3.new(0.2745098173618317, 0.2745098173618317, 0.2745098173618317)
                                                        },
                                                        Reference = 32,
                                                        ClassName = "TextLabel"
                                                    }
                                                },
                                                Properties = {
                                                    Name = "TopBar",
                                                    Size = UDim2.new(0, 398, 0, 0),
                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                    BorderSizePixel = 0,
                                                    AutomaticSize = Enum.AutomaticSize.XY,
                                                    BackgroundColor3 = Color3.new(0.2235294282436371, 0.2235294282436371, 0.2235294282436371)
                                                },
                                                Reference = 31,
                                                ClassName = "Frame"
                                            }
                                        },
                                        Properties = {
                                            Visible = false,
                                            Name = "SettingsTab",
                                            BorderColor3 = Color3.new(0, 0, 0),
                                            Size = UDim2.new(0, 398, 0, 1210),
                                            BorderSizePixel = 0,
                                            BackgroundColor3 = Color3.new(0.3098039329051971, 0.3098039329051971, 0.3098039329051971)
                                        },
                                        Reference = 30,
                                        ClassName = "Frame"
                                    }
                                },
                                Properties = {
                                    Name = "Explorer",
                                    Size = UDim2.new(0, 398, 0, 1210),
                                    BorderColor3 = Color3.new(0, 0, 0),
                                    BorderSizePixel = 0,
                                    AutomaticSize = Enum.AutomaticSize.XY,
                                    BackgroundColor3 = Color3.new(0.2588235437870026, 0.2588235437870026, 0.2588235437870026)
                                },
                                Reference = 4,
                                ClassName = "Frame"
                            },
                            {
                                Closure = function() return (function()
	local TEXT_INDENT = "\t\t\t\t"
	local Settings = {
		SelectionOutline = false,
		SelectionColor = {
			ColorRed = 161,
			ColorGreen = 18,
			ColorBlue = 196,
		},
		RefreshTime = 5
	}

	local a = Instance.new("Frame")
	a.LayoutOrder = 1
	a.Visible = false
	a.Parent = script.Parent

	local OpenObjects = {[game] = a} -- OpenObjects stores the objects that have been dropped-down
	local ObjectIndents = {} -- ObjectIndents stores the indent for given objects

	local CurrentFrames = {} -- CurrentFrames stores frames and the objects they represent. so {[Frame1] = workspace}
	local Memory = {} -- Memory stores instances to be handled uwu owo im an instance

	local DestructionTree = {[game] = {}}
	local LogDestructions = true

	game.Close:Connect(function() -- Why would I want a big ass lag spike right as I close the game?
		LogDestructions = false
	end)

	local Modules = {}

	for i, v in next, script.Parent:WaitForChild("Modules"):GetChildren() do
		if v:IsA("ModuleScript") then
			Modules[v.Name] = require(v)
		end
	end

	local Emojis = Modules.Emojis
	local SelectionHandler = Modules.SelectionHandler
	local Priority = Modules.Priority

	-- Im so fucking sorry Maui required me to put some of the modules into this script instead of their own modulescripts.
	
	
	-- // Properties // 
	

	local Properties = {}
	local Data = {}
	local Clone = {}

	local Api = {}
	local Explorer = script.Parent.Explorer:WaitForChild("ExplorerTab")

	if getgenv then
		if not isfile("API.json") then -- This is the one optional HttpGet. Read my thread for information on how to disable this if you don't want any external web requests.
			local Response = game:HttpGetAsync("https://raw.githubusercontent.com/MaximumADHD/Roblox-Client-Tracker/roblox/API-Dump.json")

			Api = Response
			writefile("API.json", Response)
		end

		Api = readfile("API.json")

		Api = game:GetService("HttpService"):JSONDecode(Api) -- Have to use JSONDecode since the api dump is a json file
	else
		Api = {Classes = {}}
	end

	repeat task.wait() until Api --- AAAAAAAAAAAAAAAAAAAAAA

	local function CopyTable(Table) -- Definitely not skidded from the roblox docs. Makes clones of tables so Clone(Table)[1] doesn't modify the original table
		local Copy = {}

		for i, v in next, Table do
			if typeof(v) == "table" then
				v = CopyTable(v)
			end

			Table[i] = v

		end

		return Table
	end

	local function CloneData() -- Parses the api dump into a format that the script can use. Api.Classes["NameHere"] returns the scriptable and hidden members of that class
		for _, Class in next, Api.Classes do
			local Properties = {
				Hidden = {},
				{},
			}

			local Superclass = Class.Superclass
			local Info = Superclass and Clone[Superclass]

			if Info then
				Properties = CopyTable(Info)	
			end

			for _, v in next, Class.Members do
				if v.MemberType == "Property" then
					if v.Tags and table.find(v.Tags, "Hidden") then
						Properties.Hidden[v.Name] = {
							Type = v.ValueType.Name
						}
					else
						Properties[1][v.Name] = {
							Type = v.ValueType.Name
						}
					end
				end
			end

			if not Clone[Class.Name] then
				Clone[Class.Name] = Properties
			end
		end	
	end


	CloneData()


	local function GetProperties(Class) -- Same thing as clone. Thanks, superclasses! (fuck superclasses i hate them)
		local Properties = {
			Hidden = {},
			{},
		}

		local Superclass = Class.Superclass
		local Info = Superclass and Clone[Superclass]

		if Info then	
			Properties = CopyTable(Info)
		end

		for _, v in next, Class.Members do
			if v.MemberType == "Property" then
				if v.Tags and table.find(v.Tags, "Hidden") then
					Properties.Hidden[v.Name] = {
						Type = v.ValueType.Name
					}
				else
					Properties[1][v.Name] = {
						Type = v.ValueType.Name
					}
				end
			end
		end

		return Properties
	end

	local function ParseClass(Class)
		local Information = {
			Properties = GetProperties(Class)
		}

		return Information
	end


	for _, v in next, Api.Classes do
		Data[v.Name] = ParseClass(v)
	end

	function Properties:GetStrings(Object) -- {{"Name1", "Value1"}, {"Name2", "Value2"}}
		local Strings = {}
		local ClassName = Object.ClassName 
		local Info = Data[ClassName]

		if Info then

			for i, v in next, Info.Properties[1] do
				local Success, Value = pcall(function() return Object[i] end)

				if Success then
					table.insert(Strings, {
						i, 
						tostring(Value)
					})
				end
			end

			for i, v in next, Info.Properties.Hidden do
				local Success, Value = pcall(function() if not gethiddenproperty then return Object[i] else return gethiddenproperty(Object, i) end end) -- I made this to be modifiable in roblox studio, so we're just gonna do that. Also why don't executors have ishiddenproperty?
				local Hidden, Value2 = pcall(function() if Success then return Object[i] end end)

				if Success and not rawget(Info.Properties[1], i) then
					table.insert(Strings, {
						(Hidden and "\240\159\148\144 " or "(\240\159\145\129) ") .. i, 
						tostring(Value) -- The eyeball means the member is hidden, and the lock means it's just a secwet.
					})
				end
			end
		end

		return Strings
	end

	local Bottom = Explorer:WaitForChild("Bottom") -- OwO
	local PropertyHolder = Bottom:WaitForChild("Properties")
	local ExampleProperty = Bottom:WaitForChild("Example")
	local UIS = game:GetService("UserInputService")
	
	local KeyCodes = {
		SelectAll = Enum.KeyCode.LeftShift,
		SelectOne = Enum.KeyCode.LeftControl
	}

	ExampleProperty.Visible = false

	function Properties:Clear()
		for _, v in next, PropertyHolder:GetChildren() do
			if v:IsA("Frame") then
				v:Destroy()
			end
		end
	end

	function Properties:Update(Selection)
		local Props = self:GetStrings(Selection)
		local Padding = ExampleProperty:Clone()

		for _, v in next, Props do
			local New = ExampleProperty:Clone()

			New.Property.Text = v[1]
			New.Value.Text = v[2]

			New.Visible = true
			New.Parent = PropertyHolder
		end

		for _, v in next, Padding:GetChildren() do
			v.Visible = false
		end

		Padding.Visible = true
		Padding.Parent = PropertyHolder
	end


	-- // Explorer Tab //
	

	local ColorSettings = Settings.SelectionColor

	SelectionHandler:SetColor(Color3.fromRGB(ColorSettings.ColorRed, ColorSettings.ColorGreen, ColorSettings.ColorBlue)) -- Custom selection color because some people cant stand purple!!

	local Explorer = script.Parent.Explorer:WaitForChild("ExplorerTab")
	local Example = Explorer.Example
	local Instances = Explorer.Instances.List
	
	local ActionMenu = Explorer.Parent.ActionsTab
	ActionMenu.Visible = false


	Example.Visible = false

	local Instance_ID = 2

	local RefreshInstances, HandleInstances = function() end, function() end -- Omg I did the C trhing oh my god holy binkle

	local function GetFrame(Object) -- Returns the frame that represents a specific object, so GetFrame(workspace) returns the first frame
		for i, v in next, CurrentFrames do
			if v == Object then
				return i
			end
		end

		return nil
	end

	local function IsDrawn(Object) -- Does a frame represent this object?
		return GetFrame(Object)
	end

	local function GetDestructionParent(Object) -- This is important. Don't question it
		return DestructionTree[Object], Object
	end


	local SpecialServices = {}

	for i, v in next, Priority do
		local Success, Service = pcall(game.GetService, game, v)
		local Success2, Error = pcall(function() return Service:GetFullName() end)

		if Success and Success2 then
			table.insert(SpecialServices, Service)
		end
	end

	local function DestroyFrame(Frame)
		CurrentFrames[Frame] = nil
		Frame:Destroy()
	end


	local ExpandAll; ExpandAll = function(ParentPath)
		if ParentPath == game then
			local Chicken = {}

			for i, w in next, SpecialServices do
				local Frame = IsDrawn(w)

				if Frame then
					Instance_ID += 1
					Frame.LayoutOrder = Instance_ID
					Frame.Name = Instance_ID
					
					if #w:GetChildren() == 0 then
						local Expand = Frame:FindFirstChild("Expand")
						
						if Expand then
							Expand.Text = ""
						end
					end
					
					Frame.Visible = true
					

				else
					table.insert(Chicken, w)
				end

				if OpenObjects[w] then
					ExpandAll(w)
				end
			end

			for i, w in next, ParentPath:GetChildren() do
				if table.find(SpecialServices, w) then continue end

				local Frame = IsDrawn(w)

				if Frame then
					Instance_ID += 1
					Frame.LayoutOrder = Instance_ID
					Frame.Name = Instance_ID
					
					if #w:GetChildren() == 0 then
						local Expand = Frame:FindFirstChild("Expand")

						if Expand then
							Expand.Text = ""
						end
					end
					
					Frame.Visible = true
					

				else
					table.insert(Chicken, w)
				end

				if OpenObjects[w] then
					ExpandAll(w)
				end
			end

			HandleInstances(Chicken, nil, ParentPath)
		else
			local Children = {}

			for i, v in next, ParentPath:GetChildren() do
				local Frame = IsDrawn(v)

				if Frame then
					Instance_ID += 1
					Frame.LayoutOrder = Instance_ID
					Frame.Name = Instance_ID
					Frame.Visible = true
					
					if #v:GetChildren() == 0 then
						local Expand = Frame:FindFirstChild("Expand")

						if Expand then
							Expand.Text = ""
						end
					end

				else
					table.insert(Children, v)
				end

				if OpenObjects[v] then
					ExpandAll(v)
				end
			end

			HandleInstances(Children, nil, ParentPath)
		end

		task.delay(0.1, function()
			for _, v in next, Instances:GetChildren() do
				if v:IsA("Frame") and not v.Visible then
					DestroyFrame(v)
				end
			end
		end)
	end

	local LastRefresh = tick()
	local IsQueued = false

	RefreshInstances = function(Bypass)
		local NewTick = tick()

		if NewTick - LastRefresh < 0.5 then
			if not IsQueued then
				IsQueued = true
				wait(0.2)
			else
				return
			end
		end

		LastRefresh = NewTick
		Instance_ID = 1

		for Frame, Path in CurrentFrames do
			Frame.LayoutOrder = 69696969696969
			Frame.Visible = false
		end

		ExpandAll(game)
		IsQueued = false
	end


	HandleInstances = function(Memory, Indentation, Parent)
		for _, v in next, Memory do
			if IsDrawn(v) then 
				return warn("This instance is already drawn!") -- Why would you call this function if you already have the frame cached
			end

			if v:IsDescendantOf(Explorer) then -- I'm so fucking retarded
				continue
			end

			local New = Example:Clone()
			local DestructParent = DestructionTree[Parent] or GetDestructionParent(Parent)

			if not DestructParent then
				DestructionTree[v] = {New}
			else
				table.insert(DestructParent, New)
			end

			Instance_ID = Instance_ID + 1

			local MyID = Instance_ID

			local Name = New:WaitForChild("NameButton")
			local Expand = New:WaitForChild("Expand")

			New.Name = MyID
			New.LayoutOrder = MyID

			Name.Text = TEXT_INDENT .. v.Name
			Name.Type.Text = Emojis(v)

			Name.Activated:Connect(function()
				ActionMenu.Visible = false
				
				if UIS:IsKeyDown(KeyCodes.SelectAll) then
					local First = SelectionHandler.Frames[1]

					if First then
						SelectionHandler:MultiSelect(CurrentFrames, tonumber(First.Name), MyID, Settings.SelectionOutline)
					end
				elseif UIS:IsKeyDown(KeyCodes.SelectOne) then
					SelectionHandler:CtrlSelect(v, New, Settings.SelectionOutline)
				else
					Properties:Clear()
					SelectionHandler:SingleSelect(v, New, Settings.SelectionOutline)
					Properties:Update(v)
				end
			end)
			
			Name.MouseButton2Down:Connect(function(X, Y)
				local Object
				
				if #SelectionHandler.Memory > 0 and UIS:IsKeyDown(Enum.KeyCode.LeftControl) then
					local Object = SelectionHandler.Memory[1]
					
					--table.remove(SelectionHandler.Memory, table.find(SelectionHandler.Memory, Object))
					SelectionHandler.Memory[1] = v
					table.insert(SelectionHandler.Memory, Object)
					New.BackgroundColor3 = Color3.fromRGB(ColorSettings.ColorRed, ColorSettings.ColorGreen, ColorSettings.ColorBlue)
				else
				
				--SelectionHandler:Clear()
				
				--[[if #SelectionHandler.Memory >= 1 then
					local Old = SelectionHandler.Memory[1]
					
					SelectionHandler.Memory[1] = v
					table.insert(SelectionHandler.Memory, Old)
					table.insert(SelectionHandler.Frames, New)
					
					New.BackgroundColor3 = Color3.fromRGB(ColorSettings.ColorRed, ColorSettings.ColorGreen, ColorSettings.ColorBlue)
				else]]
					SelectionHandler:SingleSelect(v, New, Settings.SelectionOutline)
				end
				--end
				
				
				local InsetY =  game:GetService("GuiService"):GetGuiInset().Y
				
				ActionMenu.Position = UDim2.new(0, X - Explorer.AbsolutePosition.X, 0, Y - Explorer.AbsolutePosition.Y - InsetY)
				ActionMenu.Visible = true
			end)

			if #v:GetChildren() == 0 then
				Expand.TextTransparency = 1
			end

			Expand.Text = OpenObjects[v] and "v" or ">"

			if OpenObjects[v] then
				Expand.TextSize = 20
			end

			ObjectIndents[v] = Indentation

			Expand.Activated:Connect(function()
				if OpenObjects[v] then
					Expand.Text = ">" -- What? Did you seriously expect me to rotate it?
					Expand.TextSize = 24
					OpenObjects[v] = nil

					RefreshInstances()
				else
					Expand.Text = "v"
					Expand.TextSize = 20
					OpenObjects[v] = New

					RefreshInstances()
				end
			end)

			local Indentation = #v:GetFullName():split(".")

			if Indentation then
				local ButtonPos, ExpandPos = New.NameButton.Position, New.Expand.Position

				-- UiListLayouts don't like letting you set the positions of objects they control. Too bad I don't care so I'll fucking do it anyway.

				New.NameButton.Position = UDim2.new(ButtonPos.X.Scale + (.05 * Indentation), ButtonPos.X.Offset, UDim2.new(ButtonPos.Y.Scale, ButtonPos.Y.Offset))
				New.Expand.Position = UDim2.new(ExpandPos.X.Scale + (.05 * Indentation), ExpandPos.X.Offset, UDim2.new(ExpandPos.Y.Scale, ExpandPos.Y.Offset))
			end

			if table.find(SelectionHandler.Memory, v) then
				New.BackgroundColor3 = Color3.fromRGB(ColorSettings.ColorRed, ColorSettings.ColorGreen, ColorSettings.ColorBlue)
			end

			CurrentFrames[New] = v

			New.Visible = true
			New.Parent = Instances
		end
	end


	for i = 1, 2 do
		LastRefresh = 0
		RefreshInstances()
	end


	game.DescendantAdded:Connect(function(Child)
		task.wait()
		local Success, Error = pcall(function() return Child:GetFullName() end)

		local Parent = Child.Parent

		if not Parent then
			return
		end

		if OpenObjects[Parent] or Parent.Parent and OpenObjects[Parent.Parent] then
			RefreshInstances()
		end
	end)

	game.ItemChanged:Connect(function(a, b)
		local Success, Name = pcall(game.GetFullName, game, a)

		if Success and b == "Parent" then
			local NewFrame = GetFrame(a.Parent)

			local Expand = NewFrame and NewFrame:FindFirstChild("Expand")

			if Expand and Expand.TextTransparency == 1 then
				Expand.TextTransparency = 0
				Expand.Text = OpenObjects[a.Parent] and "v" or ">"
			end
		end
	end)

	task.spawn(function()
		while true do
			task.wait(Settings.RefreshTime)
			RefreshInstances()
		end
	end)


	-- // TopBar Controls //


	local TopBar = Explorer:WaitForChild("TopBar")
	local Controls = TopBar:WaitForChild("Controls")

	-- Delete button

	Controls.Delete.Activated:Connect(function()
		for _, v in next, SelectionHandler.Memory do
			v:Destroy()
		end

		SelectionHandler:Clear()
	end)

	-- Copy & Paste buttons

	Controls.Copy.Activated:Connect(function()
		SelectionHandler:CopySelection()
	end)

	Controls.PasteInto.Activated:Connect(function()
		if not SelectionHandler.Memory[1] then return end

		for _, Location in next, SelectionHandler.Memory do
			for _, v in next, SelectionHandler.CopyStorage do
				local SelectionFrame = GetFrame(v)

				if table.find(SelectionHandler.Frames, SelectionFrame) then
					table.remove(SelectionHandler.Frames, table.find(SelectionHandler.Frames, SelectionFrame))
				end
				
				local Success, Clone = pcall(v.Clone, v)

				if Success and Clone then Clone.Parent = Location end
			end
		end

		SelectionHandler:Clear()
	end)

	Controls.Cut.Activated:Connect(function()
		if not SelectionHandler.Memory[1] then return end

		for _, v in next, SelectionHandler.CopyStorage do
			pcall(function() v.Parent = SelectionHandler.Memory[1] end)
		end

		SelectionHandler.Frames[1].BackgroundColor3 = Color3.fromRGB(79, 79, 79)
		SelectionHandler:Clear()
	end)

	Controls:WaitForChild("Clone").Activated:Connect(function()
		for _, v in next, SelectionHandler.CopyStorage do
			v:Clone().Parent = v.Parent
		end
	end)


	-- // Settings //

	local SettingsTab = Explorer.Parent.SettingsTab.Container

	for _, v in next, SettingsTab:GetChildren() do
		local Toggle = v:FindFirstChild("Toggle")
		local Input = v:FindFirstChild("Input")

		if Toggle and Toggle:IsA("TextButton") then
			Toggle.Text = Settings[v.Name] and "\226\156\133" or "\226\157\140" 

			Toggle.Activated:Connect(function()
				local Value = Settings[v.Name]

				Settings[v.Name] = not Value
				Toggle.Text = Value and "\226\157\140" or "\226\156\133"

				if v.Name == "SelectionOutline" then
					SelectionHandler:UpdateHighlights(not Value)
				end
			end)
		elseif Input and Input:IsA("TextBox") then
			Input.FocusLost:Connect(function(EnterPressed)
				if EnterPressed then
					local Number = tonumber(Input.Text)

					if v.Name:find("Color") then
						if Number ~= Number or not Number then
							Input.Text = "Invalid Input!"
							return
						end

						Number = math.clamp(Number, 1, 255)

						ColorSettings[v.Name] = Number

						SelectionHandler:SetColor(Color3.fromRGB(ColorSettings.ColorRed, ColorSettings.ColorGreen, ColorSettings.ColorBlue))
					elseif v.Name == "RefreshTime" then
						if Number ~= Number or not Number then
							Input.Text = "Invalid Input!"
							return
						end

						Number = math.clamp(Number, 1, math.huge)

						Settings.RefreshTime = Number
					end

					Input.Text = ""
				end
			end)
		end
	end
	
	
	-- // Action Menu //
	
	UIS.InputBegan:Connect(function(Input, Processed)
		local Key = Input.KeyCode
		local CTRL = UIS:IsKeyDown(Enum.KeyCode.LeftControl)
		
		if Key == Enum.KeyCode.Escape then
			SelectionHandler:Clear()
			ActionMenu.Visible = false
		elseif CTRL and Key == Enum.KeyCode.D then
			SelectionHandler:Clear()
		elseif Key == Enum.KeyCode.Delete then
			for _, v in next, SelectionHandler.Memory do
				pcall(v.Destroy, v)
			end

			SelectionHandler:Clear()
		elseif Key == Enum.KeyCode.C and CTRL and not Processed then
			SelectionHandler:CopySelection()
		elseif Key == Enum.KeyCode.X and CTRL and not Processed then
			if not SelectionHandler.Memory[1] then return end

			for _, v in next, SelectionHandler.CopyStorage do
				pcall(function() v.Parent = SelectionHandler.Memory[1] end)
			end

			SelectionHandler.Frames[1].BackgroundColor3 = Color3.fromRGB(79, 79, 79)
			SelectionHandler:Clear()
		elseif Key == Enum.KeyCode.V and CTRL and not Processed then
			if not SelectionHandler.Memory[1] then return end

			for _, Location in next, SelectionHandler.Memory do
				for _, v in next, SelectionHandler.CopyStorage do
					local SelectionFrame = GetFrame(v)

					if table.find(SelectionHandler.Frames, SelectionFrame) then
						table.remove(SelectionHandler.Frames, table.find(SelectionHandler.Frames, SelectionFrame))
					end

					local Success, Clone = pcall(v.Clone, v)

					if Success and Clone then Clone.Parent = Location end
				end
			end

			SelectionHandler:Clear()
		end
	end)
	
	
	ActionMenu.Group.Activated:Connect(function()
		local Parent = SelectionHandler.Memory[1] and SelectionHandler.Memory[1].Parent
		local Model = Instance.new("Model")
		
		if not Parent then return end
		
		for _, v in next, SelectionHandler.Memory do
			pcall(function() v.Parent = Model end)
		end
		
		Model.Parent = Parent
	end)
	
	
	local function FilterString(String, AAA)
		if typeof(String) ~= "string" then String = tostring(String) end
		local Copy = ""

		for i = 1, string.len(String) do
			local Char = string.sub(String, i, i)
			local Byte = string.byte(Char)

			if Byte < 32 or Byte > 126 then
				Copy = Copy .. "\\" .. Byte
			else
				Copy = Copy .. Char
			end
		end

		return Copy
	end

	local function GetFullName(Instance)
		local Parent = Instance.Parent
		local Ancestor = (Parent == nil and "nil" or "game")
		local Path = ":FindFirstChild(\"" .. Instance.Name .. "\")"

		while Parent and (Parent ~= game and Parent ~= nil) do
			if Parent.Parent == game then
				Path = "\[\"" .. Parent.Name .. "\"\]" .. Path
			else
				Path = ":FindFirstChild(\"" .. Parent.Name .. "\")" .. Path
			end

			Parent = Parent.Parent
		end

		return FilterString(Ancestor .. Path)
	end
	
	if not setclipboard and game:GetService("RunService"):IsStudio() then
		setclipboard = print
	end
	
	ActionMenu.CopyPath.Activated:Connect(function()
		if not setclipboard or not SelectionHandler.Memory[1] then
			return
		end
		
		setclipboard(GetFullName(SelectionHandler.Memory[1]))
	end)
	
	ActionMenu.ClearChildren.Activated:Connect(function()
		for _, v in next, SelectionHandler.Memory do
			if v then
				v:ClearAllChildren()
			end
		end
	end)
	
	local Viewer = script.Parent.Parent.ScriptViewer
	local CurrentScript = Viewer.CurrentScript
	local Output = Viewer.TextHolder.Decompiled
	
	if game:GetService("RunService"):IsStudio() then
		decompile = function() return "-- You're testing this in studio, retard." end
	end
	
	ActionMenu.Decompile.Activated:Connect(function()
		local Script = SelectionHandler.Memory[1]
		
		if typeof(Script) ~= "Instance" or not (Script:IsA("Script") or Script:IsA("ModuleScript")) then
			return
		end
		
		local Decompile = decompile or disassemble or getscriptbytecode 
		
		if not Decompile then return end
		
		CurrentScript.Value = Script
		Output.Text = Decompile(Script)
		Viewer.Visible = true
	end)
	
	ActionMenu.TeleportHere.Activated:Connect(function()
		local Position = workspace.CurrentCamera.Focus
		
		for _, v in next, SelectionHandler.Memory do
			if v:IsA("Model") then
				v:PivotTo(Position)
			elseif v:IsA("BasePart") then
				v.CFrame = Position
			end
		end
	end)
	
	ActionMenu.TeleportTo.Activated:Connect(function()
		local Player = game:GetService("Players").LocalPlayer or game:GetService("Players"):GetPropertyChangedSignal("LocalPlayer"):Wait()
		local Character = Player.Character or Player.CharacterAdded:Wait()
		
		if not Character then
			return
		end
		
		for _, v in next, SelectionHandler.Memory do
			if v:IsA("BasePart") then
				if Character:IsA("Model") then Character:PivotTo(v.CFrame * CFrame.new(0, 3, 0)) elseif Character:IsA("BasePart") then Character.CFrame = v.CFrame * CFrame.new(0, 3, 0) end
				break
			elseif v:IsA("Model") then
				if Character:IsA("Model") then Character:PivotTo(v:GetPivot() * CFrame.new(0, 3, 0)) elseif Character:IsA("BasePart") then Character.CFrame = v:GetPivot() * CFrame.new(0, 3, 0) end
				break
			end
		end
	end)
	
	
	return true
end)() end,
                                Properties = {
                                    Name = "Main"
                                },
                                Reference = 113,
                                ClassName = "ModuleScript"
                            },
                            {
                                Children = {
                                    {
                                        Closure = function() local Priority = { -- I don't want this shit to look like dex v2, so let's do some prioritization!
	"Workspace", -- Everything here is the order that it should appear in the explorer. Because most exploiting will be done using only a few services, we might as well make them easier to find!
	"Players",
	"ReplicatedStorage",
	"ReplicatedFirst",
	"CoreGui",
	"StarterGui",
	"StarterPack",
	"StarterPlayer",
	"GuiService",
	"LogService",
	"ScriptContext",
	"HttpService",
	"HttpRbxApiService",
	"SoundService",
	"MarketplaceService",
	"Lighting",
	"Chat",
	"TextChatService",
	"VoiceChatService",
	"TestService",
	"NetworkClient",
	"RobloxReplicatedStorage",
}

return Priority end,
                                        Properties = {
                                            Name = "Priority"
                                        },
                                        Reference = 70,
                                        ClassName = "ModuleScript"
                                    },
                                    {
                                        Closure = function() local Handler = {
	Memory = {},
	Frames = {},
	CopyStorage = {}
}

local Explorer = script.Parent.Parent.Explorer.ExplorerTab.Instances.List
local Highlight = Instance.new("Highlight")

local SELECTION_COLOR = Color3.fromRGB(161, 18, 196)

Highlight.Name = "SELECTION_HIGHLIGHT"
Highlight.FillColor = SELECTION_COLOR
Highlight.Parent = script.Parent.Parent
Highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop

function Handler:UpdateHighlights(Value)
	Highlight.Enabled = Value
end

function Handler:SetColor(Color)
	SELECTION_COLOR = Color -- Idk someone might want to change the selection color in some settings
	
	for _, v in next, self.Frames do -- I will fucking kill myself if I use .SetColor instead of :SetColor and spend an hour trying to figure out why "self" doesn't work
		v.BackgroundColor3 = Color
	end
	
	Highlight.FillColor = Color
end

function Handler:Select(Object, Frame, HighlightObject)
	Frame.BackgroundColor3 = SELECTION_COLOR
	
	if not table.find(self.Memory, Object) then
		table.insert(self.Memory, Object) -- Remembers which objects are selected in case the ancestry of the object changes
	else
		return warn("object in memory")
	end
	
	if not table.find(self.Frames, Frame) then
		table.insert(self.Frames, Frame) -- Remembers which objects are selected in case the ancestry of the object changes
	else
		return warn("object in frames")
	end
	
	if HighlightObject then
		Highlight.Adornee = Object
	end
end

function Handler:CtrlSelect(Object, Frame, HighlightObject)
	if table.find(self.Memory, Object) then
		table.remove(self.Memory, table.find(self.Memory, Object)) -- Remembers which objects are selected in case the ancestry of the object changes
	else
		table.insert(self.Memory, Object)
	end

	if table.find(self.Frames, Frame) then
		table.remove(self.Frames, table.find(self.Frames, Frame)) -- Remembers which objects are selected in case the ancestry of the object changes
	else
		table.insert(self.Frames, Frame)
	end
	
	Frame.BackgroundColor3 = table.find(self.Frames, Frame) and SELECTION_COLOR or Color3.fromRGB(79, 79, 79)

	if HighlightObject and table.find(self.Memory, Object) then
		Highlight.Adornee = Object
	end
end

function Handler:MultiSelect(RenderedFrames, Start, End, Highlight)
	local RealStart = math.min(Start, End)
	local RealEnd = math.max(Start, End)
	
	for _, v in next, Explorer:GetChildren() do
		if v:IsA("Frame") and tonumber(v.Name) >= RealStart and tonumber(v.Name) <= RealEnd then	
			if not (table.find(self.Memory, RenderedFrames[v]) or table.find(self.Frames, v)) then
				self:Select(RenderedFrames[v], v, Highlight)
			end
		end
	end
end

function Handler:Clear()
	for i, v in next, self.Frames do
		v.BackgroundColor3 = Color3.fromRGB(79, 79, 79)
	end
	
	for i, v in next, Explorer:GetChildren() do
		if v:IsA("Frame") and v.BackgroundColor3 == SELECTION_COLOR then
			v.BackgroundColor3 = Color3.fromRGB(79, 79, 79)
		end
	end
	
	table.clear(self.Frames)
	table.clear(self.Memory)
end

function Handler:SingleSelect(Object, Frame, HighlightObject) -- Clicking an object without holding shift or ctrl is a singular object selection. 
	self:Clear()
	self:Select(Object, Frame, HighlightObject)
end

function Handler:CopySelection()
	local CopiedInstances = {}
	
	for _, v in next, self.Memory do
		if v.Archivable then
			table.insert(CopiedInstances, v)
		end
	end
	
	self.CopyStorage = CopiedInstances
	
	return CopiedInstances
end

return Handler end,
                                        Properties = {
                                            Name = "SelectionHandler"
                                        },
                                        Reference = 71,
                                        ClassName = "ModuleScript"
                                    },
                                    {
                                        ClassName = "ModuleScript",
                                        Closure = function() local types = require(script.types)
local utility = require(script.utility)
local theme = require(script.theme)

local Highlighter = {
	defaultLexer = require(script.lexer) :: types.Lexer,

	_textObjectData = {} :: { [types.TextObject]: types.ObjectData },
	_cleanups = {} :: { [types.TextObject]: () -> () },
}

--[[
	Gathers the info that is needed in order to set up a line label.
]]
function Highlighter._getLabelingInfo(textObject: types.TextObject)
	local data = Highlighter._textObjectData[textObject]
	if not data then
		return
	end

	local src = utility.convertTabsToSpaces(utility.removeControlChars(textObject.Text))
	local numLines = #string.split(src, "\n")
	if numLines == 0 then
		return
	end

	local textBounds = utility.getTextBounds(textObject)
	local textHeight = textBounds.Y / numLines

	return {
		data = data,
		numLines = numLines,
		textBounds = textBounds,
		textHeight = textHeight,
		innerAbsoluteSize = utility.getInnerAbsoluteSize(textObject),
		textColor = theme.getColor("iden"),
		textFont = textObject.FontFace,
		textSize = textObject.TextSize,
		labelSize = UDim2.new(1, 0, 0, math.ceil(textHeight)),
	}
end

--[[
	Aligns and matches the line labels to the textObject.
]]
function Highlighter._alignLabels(textObject: types.TextObject)
	local labelingInfo = Highlighter._getLabelingInfo(textObject)
	if not labelingInfo then
		return
	end

	for lineNumber, lineLabel in labelingInfo.data.Labels do
		-- Align line label
		lineLabel.TextColor3 = labelingInfo.textColor
		lineLabel.FontFace = labelingInfo.textFont
		lineLabel.TextSize = labelingInfo.textSize
		lineLabel.Size = labelingInfo.labelSize
		lineLabel.Position =
			UDim2.fromScale(0, labelingInfo.textHeight * (lineNumber - 1) / labelingInfo.innerAbsoluteSize.Y)
	end
end

--[[
	Creates and populates the line labels with the appropriate rich text.
]]
function Highlighter._populateLabels(props: types.HighlightProps)
	-- Gather props
	local textObject = props.textObject
	local src = utility.convertTabsToSpaces(utility.removeControlChars(props.src or textObject.Text))
	local lexer = props.lexer or Highlighter.defaultLexer
	local customLang = props.customLang
	local forceUpdate = props.forceUpdate

	-- Avoid updating when unnecessary
	local data = Highlighter._textObjectData[textObject]
	if (data == nil) or (data.Text == src) then
		if forceUpdate ~= true then
			return
		end
	end

	-- Ensure textObject matches sanitized src
	textObject.Text = src

	local lineLabels = data.Labels
	local previousLines = data.Lines

	local lines = string.split(src, "\n")

	data.Lines = lines
	data.Text = src
	data.Lexer = lexer
	data.CustomLang = customLang

	-- Shortcut empty textObjects
	if src == "" then
		for l = 1, #lineLabels do
			if lineLabels[l].Text == "" then
				continue
			end
			lineLabels[l].Text = ""
		end
		return
	end

	local idenColor = theme.getColor("iden")
	local labelingInfo = Highlighter._getLabelingInfo(textObject)

	local richTextBuffer, bufferIndex, lineNumber = table.create(5), 0, 1
	for token: types.TokenName, content: string in lexer.scan(src) do
		local Color = if customLang and customLang[content]
			then theme.getColor("custom")
			else theme.getColor(token) or idenColor

		local tokenLines = string.split(utility.sanitizeRichText(content), "\n")

		for l, tokenLine in tokenLines do
			-- Find line label
			local lineLabel = lineLabels[lineNumber]
			if not lineLabel then
				local newLabel = Instance.new("TextLabel")
				newLabel.Name = "Line_" .. lineNumber
				newLabel.AutoLocalize = false
				newLabel.RichText = true
				newLabel.BackgroundTransparency = 1
				newLabel.Text = ""
				newLabel.TextXAlignment = Enum.TextXAlignment.Left
				newLabel.TextYAlignment = Enum.TextYAlignment.Top
				newLabel.TextColor3 = labelingInfo.textColor
				newLabel.FontFace = labelingInfo.textFont
				newLabel.TextSize = labelingInfo.textSize
				newLabel.Size = labelingInfo.labelSize
				newLabel.Position =
					UDim2.fromScale(0, labelingInfo.textHeight * (lineNumber - 1) / labelingInfo.innerAbsoluteSize.Y)

				newLabel.Parent = textObject.SyntaxHighlights
				lineLabels[lineNumber] = newLabel
				lineLabel = newLabel
			end

			-- If multiline token, then set line & move to next
			if l > 1 then
				if forceUpdate or lines[lineNumber] ~= previousLines[lineNumber] then
					-- Set line
					lineLabels[lineNumber].Text = table.concat(richTextBuffer)
				end
				-- Move to next line
				lineNumber += 1
				bufferIndex = 0
				table.clear(richTextBuffer)
			end

			-- If changed, add token to line
			if forceUpdate or lines[lineNumber] ~= previousLines[lineNumber] then
				bufferIndex += 1
				-- Only add RichText tags when the color is non-default and the characters are non-whitespace
				if Color ~= idenColor and string.find(tokenLine, "[%S%C]") then
					richTextBuffer[bufferIndex] = theme.getColoredRichText(Color, tokenLine)
				else
					richTextBuffer[bufferIndex] = tokenLine
				end
			end
		end
	end

	-- Set final line
	if richTextBuffer[1] and lineLabels[lineNumber] then
		lineLabels[lineNumber].Text = table.concat(richTextBuffer)
	end

	-- Clear unused line labels
	for l = lineNumber + 1, #lineLabels do
		if lineLabels[l].Text == "" then
			continue
		end
		lineLabels[l].Text = ""
	end
end

--[[
	Highlights the given textObject with the given props and returns a cleanup function.
	Highlighting will automatically update when needed, so the cleanup function will disconnect
	those connections and remove all labels.
]]
function Highlighter.highlight(props: types.HighlightProps): () -> ()
	-- Gather props
	local textObject = props.textObject
	local src = utility.convertTabsToSpaces(utility.removeControlChars(props.src or textObject.Text))
	local lexer = props.lexer or Highlighter.defaultLexer
	local customLang = props.customLang

	-- Avoid updating when unnecessary
	if Highlighter._cleanups[textObject] then
		-- Already been initialized, so just update
		Highlighter._populateLabels(props)
		Highlighter._alignLabels(textObject)
		return Highlighter._cleanups[textObject]
	end

	-- Ensure valid object properties
	textObject.RichText = false
	textObject.Text = src
	textObject.TextXAlignment = Enum.TextXAlignment.Left
	textObject.TextYAlignment = Enum.TextYAlignment.Top
	textObject.BackgroundColor3 = theme.getColor("background")
	textObject.TextColor3 = theme.getColor("iden")
	textObject.TextTransparency = 0.5

	-- Build the highlight labels
	local lineFolder = textObject:FindFirstChild("SyntaxHighlights")
	if lineFolder == nil then
		local newLineFolder = Instance.new("Folder")
		newLineFolder.Name = "SyntaxHighlights"
		newLineFolder.Parent = textObject

		lineFolder = newLineFolder
	end

	local data = {
		Text = "",
		Labels = {},
		Lines = {},
		Lexer = lexer,
		CustomLang = customLang,
	}
	Highlighter._textObjectData[textObject] = data

	-- Add a cleanup handler for this textObject
	local connections: { [string]: RBXScriptConnection } = {}
	local function cleanup()
		lineFolder:Destroy()

		Highlighter._textObjectData[textObject] = nil
		Highlighter._cleanups[textObject] = nil

		for _key, connection in connections do
			connection:Disconnect()
		end
		table.clear(connections)
	end
	Highlighter._cleanups[textObject] = cleanup

	connections["AncestryChanged"] = textObject.AncestryChanged:Connect(function()
		if textObject.Parent then
			return
		end

		cleanup()
	end)
	connections["TextChanged"] = textObject:GetPropertyChangedSignal("Text"):Connect(function()
		Highlighter._populateLabels(props)
	end)
	connections["TextBoundsChanged"] = textObject:GetPropertyChangedSignal("TextBounds"):Connect(function()
		Highlighter._alignLabels(textObject)
	end)
	connections["AbsoluteSizeChanged"] = textObject:GetPropertyChangedSignal("AbsoluteSize"):Connect(function()
		Highlighter._alignLabels(textObject)
	end)
	connections["FontFaceChanged"] = textObject:GetPropertyChangedSignal("FontFace"):Connect(function()
		Highlighter._alignLabels(textObject)
	end)

	-- Populate the labels
	Highlighter._populateLabels(props)
	Highlighter._alignLabels(textObject)

	return cleanup
end

--[[
	Refreshes all highlighted textObjects. Used when the theme changes.
]]
function Highlighter.refresh(): ()
	-- Rehighlight existing labels using latest colors
	for textObject, data in Highlighter._textObjectData do
		for _, lineLabel in data.Labels do
			lineLabel.TextColor3 = theme.getColor("iden")
		end

		Highlighter.highlight({
			textObject = textObject,
			forceUpdate = true,
			src = data.Text,
			lexer = data.Lexer,
			customLang = data.CustomLang,
		})
	end
end

--[[
	Sets the token colors to the given colors and refreshes all highlighted textObjects.
]]
function Highlighter.setTokenColors(colors: types.TokenColors): ()
	theme.setColors(colors)

	Highlighter.refresh()
end

--[[
	Gets a token color by name.
	Mainly useful for setting "background" token color on other UI objects behind your text.
]]
function Highlighter.getTokenColor(tokenName: types.TokenName): Color3
	return theme.getColor(tokenName)
end

--[[
	Matches the token colors to the Studio theme settings and refreshes all highlighted textObjects.
	Does nothing when not run in a Studio plugin.
]]
function Highlighter.matchStudioSettings(): ()
	local applied = theme.matchStudioSettings(Highlighter.refresh)
	if applied then
		Highlighter.refresh()
	end
end

return Highlighter
 end,
                                        Properties = {
                                            Name = "Highlighter"
                                        },
                                        Reference = 72,
                                        Children = {
                                            {
                                                Closure = function() export type TextObject = TextLabel | TextBox

export type TokenName =
	"background"
	| "iden"
	| "keyword"
	| "builtin"
	| "string"
	| "number"
	| "comment"
	| "operator"
	| "custom"

export type TokenColors = {
	["background"]: Color3?,
	["iden"]: Color3?,
	["keyword"]: Color3?,
	["builtin"]: Color3?,
	["string"]: Color3?,
	["number"]: Color3?,
	["comment"]: Color3?,
	["operator"]: Color3?,
	["custom"]: Color3?,
}

export type HighlightProps = {
	textObject: TextObject,
	src: string?,
	forceUpdate: boolean?,
	lexer: Lexer?,
	customLang: { [string]: string }?,
}

export type Lexer = {
	scan: (src: string) -> () -> (string, string),
	navigator: () -> any,
	finished: boolean?,
}

export type ObjectData = {
	Text: string,
	Labels: { TextLabel },
	Lines: { string },
	Lexer: Lexer?,
	CustomLang: { [string]: string }?,
}

return nil
 end,
                                                Properties = {
                                                    Name = "types"
                                                },
                                                Reference = 76,
                                                ClassName = "ModuleScript"
                                            },
                                            {
                                                ClassName = "ModuleScript",
                                                Closure = function() --[=[
	Lexical scanner for creating a sequence of tokens from Lua source code.
	This is a heavily modified and Roblox-optimized version of
	the original Penlight Lexer module:
		https://github.com/stevedonovan/Penlight
	Authors:
		stevedonovan <https://github.com/stevedonovan> ----------- Original Penlight lexer author
		ryanjmulder <https://github.com/ryanjmulder> ------------- Penlight lexer contributer
		mpeterv <https://github.com/mpeterv> --------------------- Penlight lexer contributer
		Tieske <https://github.com/Tieske> ----------------------- Penlight lexer contributer
		boatbomber <https://github.com/boatbomber> --------------- Roblox port, added builtin token,
		                                                           added patterns for incomplete syntax, bug fixes,
		                                                           behavior changes, token optimization, thread optimization
		                                                           Added lexer.navigator() for non-sequential reads
		Sleitnick <https://github.com/Sleitnick> ----------------- Roblox optimizations
		howmanysmall <https://github.com/howmanysmall> ----------- Lua + Roblox optimizations

	List of possible tokens:
		- iden
		- keyword
		- builtin
		- string
		- number
		- comment
		- operator
--]=]

local lexer = {}

local Prefix, Suffix, Cleaner = "^[%c%s]*", "[%c%s]*", "[%c%s]+"
local UNICODE = "[%z\x01-\x7F\xC2-\xF4][\x80-\xBF]+"
local NUMBER_A = "0[xX][%da-fA-F_]+"
local NUMBER_B = "0[bB][01_]+"
local NUMBER_C = "%d+%.?%d*[eE][%+%-]?%d+"
local NUMBER_D = "%d+[%._]?[%d_eE]*"
local OPERATORS = "[:;<>/~%*%(%)%-={},%.#%^%+%%]+"
local BRACKETS = "[%[%]]+" -- needs to be separate pattern from other operators or it'll mess up multiline strings
local IDEN = "[%a_][%w_]*"
local STRING_EMPTY = "(['\"])%1" --Empty String
local STRING_PLAIN = "(['\"])[^\n]-([^\\]%1)" --TODO: Handle escaping escapes
local STRING_INTER = "`[^\n]-`"
local STRING_INCOMP_A = "(['\"]).-\n" --Incompleted String with next line
local STRING_INCOMP_B = "(['\"])[^\n]*" --Incompleted String without next line
local STRING_MULTI = "%[(=*)%[.-%]%1%]" --Multiline-String
local STRING_MULTI_INCOMP = "%[=*%[.-.*" --Incompleted Multiline-String
local COMMENT_MULTI = "%-%-%[(=*)%[.-%]%1%]" --Completed Multiline-Comment
local COMMENT_MULTI_INCOMP = "%-%-%[=*%[.-.*" --Incompleted Multiline-Comment
local COMMENT_PLAIN = "%-%-.-\n" --Completed Singleline-Comment
local COMMENT_INCOMP = "%-%-.*" --Incompleted Singleline-Comment
-- local TYPED_VAR = ":%s*([%w%?%| \t]+%s*)" --Typed variable, parameter, function

local lang = require(script.language)
local lua_keyword = lang.keyword
local lua_builtin = lang.builtin
local lua_libraries = lang.libraries

lexer.language = lang

local lua_matches = {
	-- Indentifiers
	{ Prefix .. IDEN .. Suffix, "var" },

	-- Numbers
	{ Prefix .. NUMBER_A .. Suffix, "number" },
	{ Prefix .. NUMBER_B .. Suffix, "number" },
	{ Prefix .. NUMBER_C .. Suffix, "number" },
	{ Prefix .. NUMBER_D .. Suffix, "number" },

	-- Strings
	{ Prefix .. STRING_EMPTY .. Suffix, "string" },
	{ Prefix .. STRING_PLAIN .. Suffix, "string" },
	{ Prefix .. STRING_INCOMP_A .. Suffix, "string" },
	{ Prefix .. STRING_INCOMP_B .. Suffix, "string" },
	{ Prefix .. STRING_MULTI .. Suffix, "string" },
	{ Prefix .. STRING_MULTI_INCOMP .. Suffix, "string" },
	{ Prefix .. STRING_INTER .. Suffix, "string_inter" },

	-- Comments
	{ Prefix .. COMMENT_MULTI .. Suffix, "comment" },
	{ Prefix .. COMMENT_MULTI_INCOMP .. Suffix, "comment" },
	{ Prefix .. COMMENT_PLAIN .. Suffix, "comment" },
	{ Prefix .. COMMENT_INCOMP .. Suffix, "comment" },

	-- Operators
	{ Prefix .. OPERATORS .. Suffix, "operator" },
	{ Prefix .. BRACKETS .. Suffix, "operator" },

	-- Unicode
	{ Prefix .. UNICODE .. Suffix, "iden" },

	-- Unknown
	{ "^.", "iden" },
}

-- To reduce the amount of table indexing during lexing, we separate the matches now
local PATTERNS, TOKENS = {}, {}
for i, m in lua_matches do
	PATTERNS[i] = m[1]
	TOKENS[i] = m[2]
end

--- Create a plain token iterator from a string.
-- @tparam string s a string.

function lexer.scan(s: string)
	local index = 1
	local size = #s
	local previousContent1, previousContent2, previousContent3, previousToken = "", "", "", ""

	local thread = coroutine.create(function()
		while index <= size do
			local matched = false
			for tokenType, pattern in ipairs(PATTERNS) do
				-- Find match
				local start, finish = string.find(s, pattern, index)
				if start == nil then
					continue
				end

				-- Move head
				index = finish + 1
				matched = true

				-- Gather results
				local content = string.sub(s, start, finish)
				local rawToken = TOKENS[tokenType]
				local processedToken = rawToken

				-- Process token
				if rawToken == "var" then
					-- Since we merge spaces into the tok, we need to remove them
					-- in order to check the actual word it contains
					local cleanContent = string.gsub(content, Cleaner, "")

					if lua_keyword[cleanContent] then
						processedToken = "keyword"
					elseif lua_builtin[cleanContent] then
						processedToken = "builtin"
					elseif string.find(previousContent1, "%.[%s%c]*$") and previousToken ~= "comment" then
						-- The previous was a . so we need to special case indexing things
						local parent = string.gsub(previousContent2, Cleaner, "")
						local lib = lua_libraries[parent]
						if lib and lib[cleanContent] and not string.find(previousContent3, "%.[%s%c]*$") then
							-- Indexing a builtin lib with existing item, treat as a builtin
							processedToken = "builtin"
						else
							-- Indexing a non builtin, can't be treated as a keyword/builtin
							processedToken = "iden"
						end
						-- print("indexing",parent,"with",cleanTok,"as",t2)
					else
						processedToken = "iden"
					end
				elseif rawToken == "string_inter" then
					if not string.find(content, "[^\\]{") then
						-- This inter string doesnt actually have any inters
						processedToken = "string"
					else
						-- We're gonna do our own yields, so the main loop won't need to
						-- Our yields will be a mix of string and whatever is inside the inters
						processedToken = nil

						local isString = true
						local subIndex = 1
						local subSize = #content
						while subIndex <= subSize do
							-- Find next brace
							local subStart, subFinish = string.find(content, "^.-[^\\][{}]", subIndex)
							if subStart == nil then
								-- No more braces, all string
								coroutine.yield("string", string.sub(content, subIndex))
								break
							end

							if isString then
								-- We are currently a string
								subIndex = subFinish + 1
								coroutine.yield("string", string.sub(content, subStart, subFinish))

								-- This brace opens code
								isString = false
							else
								-- We are currently in code
								subIndex = subFinish
								local subContent = string.sub(content, subStart, subFinish - 1)
								for innerToken, innerContent in lexer.scan(subContent) do
									coroutine.yield(innerToken, innerContent)
								end

								-- This brace opens string/closes code
								isString = true
							end
						end
					end
				end

				-- Record last 3 tokens for the indexing context check
				previousContent3 = previousContent2
				previousContent2 = previousContent1
				previousContent1 = content
				previousToken = processedToken or rawToken
				if processedToken then
					coroutine.yield(processedToken, content)
				end
				break
			end

			-- No matches found
			if not matched then
				return
			end
		end

		-- Completed the scan
		return
	end)

	return function()
		if coroutine.status(thread) == "dead" then
			return
		end

		local success, token, content = coroutine.resume(thread)
		if success and token then
			return token, content
		end

		return
	end
end

function lexer.navigator()
	local nav = {
		Source = "",
		TokenCache = table.create(50),

		_RealIndex = 0,
		_UserIndex = 0,
		_ScanThread = nil,
	}

	function nav:Destroy()
		self.Source = nil
		self._RealIndex = nil
		self._UserIndex = nil
		self.TokenCache = nil
		self._ScanThread = nil
	end

	function nav:SetSource(SourceString)
		self.Source = SourceString

		self._RealIndex = 0
		self._UserIndex = 0
		table.clear(self.TokenCache)

		self._ScanThread = coroutine.create(function()
			for Token, Src in lexer.scan(self.Source) do
				self._RealIndex += 1
				self.TokenCache[self._RealIndex] = { Token, Src }
				coroutine.yield(Token, Src)
			end
		end)
	end

	function nav.Next()
		nav._UserIndex += 1

		if nav._RealIndex >= nav._UserIndex then
			-- Already scanned, return cached
			return table.unpack(nav.TokenCache[nav._UserIndex])
		else
			if coroutine.status(nav._ScanThread) == "dead" then
				-- Scan thread dead
				return
			else
				local success, token, src = coroutine.resume(nav._ScanThread)
				if success and token then
					-- Scanned new data
					return token, src
				else
					-- Lex completed
					return
				end
			end
		end
	end

	function nav.Peek(PeekAmount)
		local GoalIndex = nav._UserIndex + PeekAmount

		if nav._RealIndex >= GoalIndex then
			-- Already scanned, return cached
			if GoalIndex > 0 then
				return table.unpack(nav.TokenCache[GoalIndex])
			else
				-- Invalid peek
				return
			end
		else
			if coroutine.status(nav._ScanThread) == "dead" then
				-- Scan thread dead
				return
			else
				local IterationsAway = GoalIndex - nav._RealIndex

				local success, token, src = nil, nil, nil

				for _ = 1, IterationsAway do
					success, token, src = coroutine.resume(nav._ScanThread)
					if not (success or token) then
						-- Lex completed
						break
					end
				end

				return token, src
			end
		end
	end

	return nav
end

return lexer
 end,
                                                Properties = {
                                                    Name = "lexer"
                                                },
                                                Reference = 73,
                                                Children = {
                                                    {
                                                        Closure = function() local language = {
	keyword = {
		["and"] = "keyword",
		["break"] = "keyword",
		["continue"] = "keyword",
		["do"] = "keyword",
		["else"] = "keyword",
		["elseif"] = "keyword",
		["end"] = "keyword",
		["export"] = "keyword",
		["false"] = "keyword",
		["for"] = "keyword",
		["function"] = "keyword",
		["if"] = "keyword",
		["in"] = "keyword",
		["local"] = "keyword",
		["nil"] = "keyword",
		["not"] = "keyword",
		["or"] = "keyword",
		["repeat"] = "keyword",
		["return"] = "keyword",
		["self"] = "keyword",
		["then"] = "keyword",
		["true"] = "keyword",
		["type"] = "keyword",
		["typeof"] = "keyword",
		["until"] = "keyword",
		["while"] = "keyword",
	},

	builtin = {
		-- Luau Functions
		["assert"] = "function",
		["error"] = "function",
		["getfenv"] = "function",
		["getmetatable"] = "function",
		["ipairs"] = "function",
		["loadstring"] = "function",
		["newproxy"] = "function",
		["next"] = "function",
		["pairs"] = "function",
		["pcall"] = "function",
		["print"] = "function",
		["rawequal"] = "function",
		["rawget"] = "function",
		["rawlen"] = "function",
		["rawset"] = "function",
		["select"] = "function",
		["setfenv"] = "function",
		["setmetatable"] = "function",
		["tonumber"] = "function",
		["tostring"] = "function",
		["unpack"] = "function",
		["xpcall"] = "function",

		-- Luau Functions (Deprecated)
		["collectgarbage"] = "function",

		-- Luau Variables
		["_G"] = "table",
		["_VERSION"] = "string",

		-- Luau Tables
		["bit32"] = "table",
		["coroutine"] = "table",
		["debug"] = "table",
		["math"] = "table",
		["os"] = "table",
		["string"] = "table",
		["table"] = "table",
		["utf8"] = "table",

		-- Roblox Functions
		["DebuggerManager"] = "function",
		["delay"] = "function",
		["gcinfo"] = "function",
		["PluginManager"] = "function",
		["require"] = "function",
		["settings"] = "function",
		["spawn"] = "function",
		["tick"] = "function",
		["time"] = "function",
		["UserSettings"] = "function",
		["wait"] = "function",
		["warn"] = "function",

		-- Roblox Functions (Deprecated)
		["Delay"] = "function",
		["ElapsedTime"] = "function",
		["elapsedTime"] = "function",
		["printidentity"] = "function",
		["Spawn"] = "function",
		["Stats"] = "function",
		["stats"] = "function",
		["Version"] = "function",
		["version"] = "function",
		["Wait"] = "function",
		["ypcall"] = "function",

		-- Roblox Variables
		["game"] = "Instance",
		["plugin"] = "Instance",
		["script"] = "Instance",
		["shared"] = "Instance",
		["workspace"] = "Instance",

		-- Roblox Variables (Deprecated)
		["Game"] = "Instance",
		["Workspace"] = "Instance",

		-- Roblox Tables
		["Axes"] = "table",
		["BrickColor"] = "table",
		["CatalogSearchParams"] = "table",
		["CFrame"] = "table",
		["Color3"] = "table",
		["ColorSequence"] = "table",
		["ColorSequenceKeypoint"] = "table",
		["DateTime"] = "table",
		["DockWidgetPluginGuiInfo"] = "table",
		["Enum"] = "table",
		["Faces"] = "table",
		["FloatCurveKey"] = "table",
		["Font"] = "table",
		["Instance"] = "table",
		["NumberRange"] = "table",
		["NumberSequence"] = "table",
		["NumberSequenceKeypoint"] = "table",
		["OverlapParams"] = "table",
		["PathWaypoint"] = "table",
		["PhysicalProperties"] = "table",
		["Random"] = "table",
		["Ray"] = "table",
		["RaycastParams"] = "table",
		["Rect"] = "table",
		["Region3"] = "table",
		["Region3int16"] = "table",
		["RotationCurveKey"] = "table",
		["SharedTable"] = "table",
		["task"] = "table",
		["TweenInfo"] = "table",
		["UDim"] = "table",
		["UDim2"] = "table",
		["Vector2"] = "table",
		["Vector2int16"] = "table",
		["Vector3"] = "table",
		["Vector3int16"] = "table",
	},

	libraries = {

		-- Luau Libraries
		bit32 = {
			arshift = "function",
			band = "function",
			bnot = "function",
			bor = "function",
			btest = "function",
			bxor = "function",
			countlz = "function",
			countrz = "function",
			extract = "function",
			lrotate = "function",
			lshift = "function",
			replace = "function",
			rrotate = "function",
			rshift = "function",
		},

		coroutine = {
			close = "function",
			create = "function",
			isyieldable = "function",
			resume = "function",
			running = "function",
			status = "function",
			wrap = "function",
			yield = "function",
		},

		debug = {
			dumpheap = "function",
			getmemorycategory = "function",
			info = "function",
			loadmodule = "function",
			profilebegin = "function",
			profileend = "function",
			resetmemorycategory = "function",
			setmemorycategory = "function",
			traceback = "function",
		},

		math = {
			abs = "function",
			acos = "function",
			asin = "function",
			atan2 = "function",
			atan = "function",
			ceil = "function",
			clamp = "function",
			cos = "function",
			cosh = "function",
			deg = "function",
			exp = "function",
			floor = "function",
			fmod = "function",
			frexp = "function",
			ldexp = "function",
			log10 = "function",
			log = "function",
			max = "function",
			min = "function",
			modf = "function",
			noise = "function",
			pow = "function",
			rad = "function",
			random = "function",
			randomseed = "function",
			round = "function",
			sign = "function",
			sin = "function",
			sinh = "function",
			sqrt = "function",
			tan = "function",
			tanh = "function",

			huge = "number",
			pi = "number",
		},

		os = {
			clock = "function",
			date = "function",
			difftime = "function",
			time = "function",
		},

		string = {
			byte = "function",
			char = "function",
			find = "function",
			format = "function",
			gmatch = "function",
			gsub = "function",
			len = "function",
			lower = "function",
			match = "function",
			pack = "function",
			packsize = "function",
			rep = "function",
			reverse = "function",
			split = "function",
			sub = "function",
			unpack = "function",
			upper = "function",
		},

		table = {
			clear = "function",
			clone = "function",
			concat = "function",
			create = "function",
			find = "function",
			foreach = "function",
			foreachi = "function",
			freeze = "function",
			getn = "function",
			insert = "function",
			isfrozen = "function",
			maxn = "function",
			move = "function",
			pack = "function",
			remove = "function",
			sort = "function",
			unpack = "function",
		},

		utf8 = {
			char = "function",
			codepoint = "function",
			codes = "function",
			graphemes = "function",
			len = "function",
			nfcnormalize = "function",
			nfdnormalize = "function",
			offset = "function",

			charpattern = "string",
		},

		-- Roblox Libraries
		Axes = {
			new = "function",
		},

		BrickColor = {
			Black = "function",
			Blue = "function",
			DarkGray = "function",
			Gray = "function",
			Green = "function",
			new = "function",
			New = "function",
			palette = "function",
			Random = "function",
			random = "function",
			Red = "function",
			White = "function",
			Yellow = "function",
		},

		CatalogSearchParams = {
			new = "function",
		},

		CFrame = {
			Angles = "function",
			fromAxisAngle = "function",
			fromEulerAngles = "function",
			fromEulerAnglesXYZ = "function",
			fromEulerAnglesYXZ = "function",
			fromMatrix = "function",
			fromOrientation = "function",
			lookAt = "function",
			new = "function",

			identity = "CFrame",
		},

		Color3 = {
			fromHex = "function",
			fromHSV = "function",
			fromRGB = "function",
			new = "function",
			toHSV = "function",
		},

		ColorSequence = {
			new = "function",
		},

		ColorSequenceKeypoint = {
			new = "function",
		},

		DateTime = {
			fromIsoDate = "function",
			fromLocalTime = "function",
			fromUniversalTime = "function",
			fromUnixTimestamp = "function",
			fromUnixTimestampMillis = "function",
			now = "function",
		},

		DockWidgetPluginGuiInfo = {
			new = "function",
		},

		Enum = {},

		Faces = {
			new = "function",
		},

		FloatCurveKey = {
			new = "function",
		},

		Font = {
			fromEnum = "function",
			fromId = "function",
			fromName = "function",
			new = "function",
		},

		Instance = {
			new = "function",
		},

		NumberRange = {
			new = "function",
		},

		NumberSequence = {
			new = "function",
		},

		NumberSequenceKeypoint = {
			new = "function",
		},

		OverlapParams = {
			new = "function",
		},

		PathWaypoint = {
			new = "function",
		},

		PhysicalProperties = {
			new = "function",
		},

		Random = {
			new = "function",
		},

		Ray = {
			new = "function",
		},

		RaycastParams = {
			new = "function",
		},

		Rect = {
			new = "function",
		},

		Region3 = {
			new = "function",
		},

		Region3int16 = {
			new = "function",
		},

		RotationCurveKey = {
			new = "function",
		},

		SharedTable = {
			clear = "function",
			clone = "function",
			cloneAndFreeze = "function",
			increment = "function",
			isFrozen = "function",
			new = "function",
			size = "function",
			update = "function",
		},

		task = {
			cancel = "function",
			defer = "function",
			delay = "function",
			desynchronize = "function",
			spawn = "function",
			synchronize = "function",
			wait = "function",
		},

		TweenInfo = {
			new = "function",
		},

		UDim = {
			new = "function",
		},

		UDim2 = {
			fromOffset = "function",
			fromScale = "function",
			new = "function",
		},

		Vector2 = {
			new = "function",

			one = "Vector2",
			xAxis = "Vector2",
			yAxis = "Vector2",
			zero = "Vector2",
		},

		Vector2int16 = {
			new = "function",
		},

		Vector3 = {
			fromAxis = "function",
			FromAxis = "function",
			fromNormalId = "function",
			FromNormalId = "function",
			new = "function",

			one = "Vector3",
			xAxis = "Vector3",
			yAxis = "Vector3",
			zAxis = "Vector3",
			zero = "Vector3",
		},

		Vector3int16 = {
			new = "function",
		},
	},
}

-- Filling up language.libraries.Enum table
local enumLibraryTable = language.libraries.Enum

for _, enum in ipairs(Enum:GetEnums()) do
	--TODO: Remove tostring from here once there is a better way to get the name of an Enum
	enumLibraryTable[tostring(enum)] = "Enum"
end

return language
 end,
                                                        Properties = {
                                                            Name = "language"
                                                        },
                                                        Reference = 74,
                                                        ClassName = "ModuleScript"
                                                    }
                                                }
                                            },
                                            {
                                                Closure = function() local types = require(script.Parent.types)

local Utility = {}

function Utility.sanitizeRichText(s: string): string
	return string.gsub(
		string.gsub(string.gsub(string.gsub(string.gsub(s, "&", "&amp;"), "<", "&lt;"), ">", "&gt;"), '"', "&quot;"),
		"'",
		"&apos;"
	)
end

function Utility.convertTabsToSpaces(s: string): string
	return string.gsub(s, "\t", "    ")
end

function Utility.removeControlChars(s: string): string
	return string.gsub(s, "[\0\1\2\3\4\5\6\7\8\11\12\13\14\15\16\17\18\19\20\21\22\23\24\25\26\27\28\29\30\31]+", "")
end

function Utility.getInnerAbsoluteSize(textObject: types.TextObject): Vector2
	local fullSize = textObject.AbsoluteSize

	local padding: UIPadding? = textObject:FindFirstChildWhichIsA("UIPadding")
	if padding then
		local offsetX = padding.PaddingLeft.Offset + padding.PaddingRight.Offset
		local scaleX = (fullSize.X * padding.PaddingLeft.Scale) + (fullSize.X * padding.PaddingRight.Scale)
		local offsetY = padding.PaddingTop.Offset + padding.PaddingBottom.Offset
		local scaleY = (fullSize.Y * padding.PaddingTop.Scale) + (fullSize.Y * padding.PaddingBottom.Scale)
		return Vector2.new(fullSize.X - (scaleX + offsetX), fullSize.Y - (scaleY + offsetY))
	else
		return fullSize
	end
end

function Utility.getTextBounds(textObject: types.TextObject): Vector2
	if textObject.ContentText == "" then
		return Vector2.zero
	end

	local textBounds = textObject.TextBounds

	-- Wait for TextBounds to be non-NaN and non-zero because Roblox
	while (textBounds.Y ~= textBounds.Y) or (textBounds.Y < 1) do
		task.wait()
		textBounds = textObject.TextBounds
	end
	return textBounds
end

return Utility
 end,
                                                Properties = {
                                                    Name = "utility"
                                                },
                                                Reference = 77,
                                                ClassName = "ModuleScript"
                                            },
                                            {
                                                Closure = function() local DEFAULT_TOKEN_COLORS = {
	["background"] = Color3.fromRGB(47, 47, 47),
	["iden"] = Color3.fromRGB(234, 234, 234),
	["keyword"] = Color3.fromRGB(215, 174, 255),
	["builtin"] = Color3.fromRGB(131, 206, 255),
	["string"] = Color3.fromRGB(196, 255, 193),
	["number"] = Color3.fromRGB(255, 125, 125),
	["comment"] = Color3.fromRGB(140, 140, 155),
	["operator"] = Color3.fromRGB(255, 239, 148),
	["custom"] = Color3.fromRGB(119, 122, 255),
}

local types = require(script.Parent.types)

local Theme = {
	tokenColors = {},
	tokenRichTextFormatter = {},
}

function Theme.setColors(tokenColors: types.TokenColors)
	assert(type(tokenColors) == "table", "Theme.updateColors expects a table")

	for tokenName, color in tokenColors do
		Theme.tokenColors[tokenName] = color
	end
end

function Theme.getColoredRichText(color: Color3, text: string): string
	return '<font color="#' .. color:ToHex() .. '">' .. text .. "</font>"
end

function Theme.getColor(tokenName: types.TokenName): Color3
	return Theme.tokenColors[tokenName]
end

function Theme.matchStudioSettings(refreshCallback: () -> ()): boolean
	local success = pcall(function()
		-- When not used in a Studio plugin, this will error
		-- and the pcall will just silently return
		local studio = settings().Studio
		local studioTheme = studio.Theme

		local function getTokens()
			return {
				["background"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptBackground),
				["iden"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptText),
				["keyword"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptKeyword),
				["builtin"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptBuiltInFunction),
				["string"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptString),
				["number"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptNumber),
				["comment"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptComment),
				["operator"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptOperator),
				["custom"] = studioTheme:GetColor(Enum.StudioStyleGuideColor.ScriptBool),
			}
		end

		Theme.setColors(getTokens())
		studio.ThemeChanged:Connect(function()
			studioTheme = studio.Theme
			Theme.setColors(getTokens())
            refreshCallback()
		end)
	end)
	return success
end

-- Initialize
Theme.setColors(DEFAULT_TOKEN_COLORS)

return Theme
 end,
                                                Properties = {
                                                    Name = "theme"
                                                },
                                                Reference = 75,
                                                ClassName = "ModuleScript"
                                            }
                                        }
                                    },
                                    {
                                        Closure = function() local Emojis = {
	-- Services

	["Workspace"] = "\240\159\140\142",
	["Players"] = "\240\159\145\168\226\128\141\240\159\145\169\226\128\141\240\159\145\167",
	["BasePlayerGui"] = "\240\159\150\188\239\184\143",
	["GuiService"] = "\240\159\150\188\239\184\143",
	["Lighting"] = "\240\159\146\161"	,
	["RunService"] = "\226\140\154",
	["TimerService"] = "\226\140\154",
	["ReplicatedFirst"] = "\240\159\147\132",
	["ReplicatedStorage"] = "\240\159\151\130\239\184\143",
	["RobloxReplicatedStorage"] = "\240\159\145\129\240\159\151\130\239\184\143",
	["ServerStorage"] = "\240\159\148\146\240\159\151\130\239\184\143",
	["ServerScriptService"] = "\240\159\148\146\240\159\147\156",
	["ScriptService"] = "\240\159\147\156",
	["MarketplaceService"] = "\240\159\143\155\239\184\143",
	["ContentProvider"] = "\226\143\179",
	["MeshContentProvider"] = "\226\143\179",
	["SolidModelContentProvider"] = "\226\143\179",
	["HSRDataContentProvider"] = "\226\143\179",
	["VRService"] = "\240\159\149\182\239\184\143",
	["SoundService"] = "\240\159\148\138",
	["Stats"] = "\240\159\145\169\226\128\141\240\159\146\187",
	["VideoCaptureService"] = "\240\159\142\158\239\184\143",
	["LogService"] = "\240\159\147\157",
	["KeyframeSequenceProvider"] = "\240\159\142\158\239\184\143",
	["AnimationClipProvider"] = "\240\159\142\158\239\184\143",
	["TweenService"] = "\240\159\147\141",
	["MaterialService"] = "\226\155\176\240\159\142\168",
	["Chat"] = "\240\159\146\172",
	["TextChatService"] = "\240\159\146\172",
	["AvatarChatService"] = "\240\159\146\172",
	["TextService"] = "\240\159\146\172",
	["PointsService"] = "\240\159\145\155",
	["NotificationService"] = "\240\159\148\148",
	["HttpRbxApiService"] = "\240\159\146\187",
	["HttpService"] = "\240\159\146\187",
	["VoiceChatService"] = "\240\159\142\153\239\184\143",
	["StarterPlayer"] = "\240\159\147\129",
	["StarterPack"] = "\240\159\147\129",
	["ScriptContext"] = "\240\159\145\169\226\128\141\240\159\146\187",
	["TestService"] = "\240\159\167\170",
	["NetworkClient"] = "\240\159\146\187",
	["PermissionsService"] = "\240\159\148\145",
	["SharedTableRegistry"] = "\240\159\147\130",
	["LocalizationService"] = "\240\159\143\179",
	["LanguageService"] = "\240\159\143\179",
	["PolicyService"] = "\240\159\154\168",
	["TeleportService"] = "\240\159\147\141\226\155\176",
	["CollectionService"] = "\240\159\147\130",
	["PhysicsService"] = "\240\159\140\160",
	["BadgeService"] = "\240\159\145\155",
	["GeometryService"] = "\240\159\147\144",
	["FriendService"] = "\240\159\145\171",
	["InsertService"] = "\240\159\148\151",
	["GamePassService"] = "\240\159\146\181",
	["Debris"] = "\240\159\146\165",
	["CookiesService"] = "\240\159\141\170",
	["UserInputService"] = "\240\159\142\174",
	["KeyboardService"] = "\240\159\142\174",
	["MouseService"] = "\240\159\142\174",
	["ContextActionService"] = "\240\159\142\174",
	["TouchInputService"] = "\240\159\142\174",
	["GamepadService"] = "\240\159\142\174",
	["ControllerService"] = "\240\159\142\174",
	["HapticService"] = "\240\159\142\174",
	["AssetService"] = "\240\159\148\151",
	["BrowserService"] = "\240\159\146\187",
	["LuaWebService"] = "\240\159\146\187",
	["AnalyticsService"] = "\240\159\148\172",
	["RbxAnalyticsService"] = "\240\159\148\172",
	["Selection"] = "\226\152\145",
	["SelectionHighlightManager"] = "\226\152\145",
	["ChangeHistoryService"] = "\226\143\179",
	["ProcessInstancePhysicsService"] = "\240\159\140\160",
	["PathfindingService"] = "\240\159\150\135",
	["RemoteDebuggerServer"] = "\240\159\146\187",
	["MemStorageService"] = "\240\159\146\187\240\159\146\190",
	["ServiceVisibilityService"] = "\240\159\145\129",
	["TextBoxService"] = "\240\159\146\172",
	["Visit"] = "\240\159\154\131",
	["GuidRegistryService"] = "\240\159\146\187\240\159\146\190",
	["Teams"] = "\226\154\189",
	["AdService"] = "\240\159\148\148\240\159\150\188",
	["PlacesService"] = "\240\159\154\158",
	["UGCValidationService"] = "\226\157\147\240\159\145\149",
	["PluginManagementService"] = "\240\159\167\169",
	["CaptureService"] = "\240\159\142\158",
	["VirtualInputManager"] = "\240\159\164\150",
	["VirtualUser"] = "\240\159\164\150",
	["HeightmapImporterService"] = "\240\159\147\169",
	["ShorelineUpgraderService"] = "\240\159\140\138",
	["SocialService"] = "\240\159\145\171",
	["SpawnerService"] = "\226\154\153\240\159\164\186",
	["StylingService"] = "\240\159\150\140",
	["AvatarEditorService"] = "\240\159\145\149\240\159\145\150",
	["ProximityPromptService"] = "\240\159\150\177",
	["GroupService"] = "\240\159\143\173",
	["CSGDictionaryService"] = "\240\159\147\149",
	["NonReplicatedCSGDictionaryService"] = "\240\159\145\129\240\159\147\149",
	["PlayerEmulatorService"] = "\240\159\164\150",
	["CorePackages"] = "\240\159\147\166",
	["StudioData"] = "\240\159\155\160",
	["CloudLocalizationTable"] = "\240\159\143\179\240\159\147\145",
	["JointsService"] = "\240\159\148\151\240\159\166\191",
	["AppStorageService"] = "\240\159\146\187\240\159\146\190",
	["ScriptRegistrationService"] = "\240\159\147\156\240\159\148\145",
	["RuntimeScriptService"] = "\240\159\147\156",
	["LodDataService"] = "\240\159\140\179\240\159\146\187",
	["MessageBusService"] = "\240\159\147\169\240\159\154\140",
	["ExperienceAuthService"] = "\240\159\145\174\226\128\141\226\153\130\239\184\143",
	["SafetyService"] = "\240\159\145\174\226\128\141\226\153\130\239\184\143",
	["RobloxServerStorage"] = "\240\159\146\187\240\159\146\190",
	["EventIngestService"] = "\226\132\185",
	["PlatformFriendsService"] = "\240\159\145\171",
	["RtMessagingService"] = "\240\159\147\169",
	["SessionService"] = "\240\159\146\187",
	["FaceAnimatorService"] = "\240\159\152\177",
	["FacialAnimationStreamingServiceV2"] = "\240\159\146\187",
	["IXPService"] = "\240\159\141\170",




	-- Classes

	["Terrain"] = "\240\159\140\132",
	["BasePart"] = "\240\159\167\177",
	["Model"] = "\240\159\147\154",
	["Camera"] = "\240\159\147\183",
	["Humanoid"] = "\240\159\167\141",
	["LocalScript"] = "\240\159\147\156",
	["Script"] = "\240\159\148\146\240\159\147\156",
	["ModuleScript"] = "\240\159\147\154\240\159\147\156",
	["Player"] = "\240\159\153\142\226\128\141",
	["Folder"] = "\240\159\147\130",
	["Configuration"] = "\226\154\153\240\159\147\130",
	[""] = "\240\159\148\179", -- fucking filteredselection
	["RemoteEvent"] = "\226\154\161\240\159\146\187",
	["RemoteFunction"] = "\226\157\148\240\159\146\187",
	["BindableEvent"] = "\226\154\161",
	["BindableFunction"] = "\226\157\148",
	["Animation"] = "\240\159\142\158",
	["Animator"] = "\240\159\142\158",
	["AnimationController"] = "\240\159\142\158",
	["AnimationClip"] = "\240\159\142\158",
	["AnimationRigData"] = "\240\159\142\158",
	["AnimationStreamTrack"] = "\240\159\142\158",
	["Atmosphere"] = "\240\159\140\165",
	["Clouds"] = "\240\159\140\165",
	["Sound"] = "\240\159\148\138",
	["BodyMover"] = "\240\159\154\128",
	["ClickDetector"] = "\240\159\150\177",
	["TouchInterest"] = "\240\159\145\137",
	["CharacterAppearance"] = "\240\159\145\149\240\159\145\150",
	["Constraint"] = "\226\155\147",
	["Controller"] = "\240\159\149\180\240\159\142\174",
	["DataModelMesh"] = "\240\159\155\160",
	["Explosion"] = "\226\156\136\240\159\143\162\240\159\143\162",
	["Decal"] = "\240\159\150\188",
	["Fire"] = "\240\159\148\165",
	["ForceField"] = "\240\159\148\181",
	["GuiBase"] = "\240\159\150\188",
	["Highlight"] = "\240\159\150\141",
	["HumanoidDescription"] = "\240\159\149\180\240\159\147\156",
	["JointInstance"] = "\240\159\148\151",
	["Light"] = "\240\159\146\161",
	["LocalizationTable"] = "\240\159\143\179",
	["Message"] = "\240\159\146\172",
	["Tool"] = "\240\159\148\168",
	["ParticleEmitter"] = "\226\156\168",
	["PoseBase"] = "\240\159\142\158",
	["PostEffect"] = "\240\159\150\140",
	["ProximityPrompt"] = "\240\159\145\137",
	["Sky"] = "\240\159\140\165",
	["Smoke"] = "\240\159\140\171",
	["SoundEffect"] = "\240\159\148\138",
	["Sparkles"] = "\226\156\168",
	["Trail"] = "\240\159\140\160",
	["UIBase"] = "\240\159\150\188\240\159\150\140",
	["Backpack"] = "\240\159\142\146",
	["StarterGear"] = "\240\159\155\160",
	["PlayerScripts"] = "\240\159\149\180\240\159\147\156",
	
	
	
	
	


	-- Values that emojis really can't describe

	["IntValue"] = "INT",
	["NumberValue"] = "NUM",
	["RayValue"] = "RAY",
	["BoolValue"] = "BOOL",
	["Vector3Value"] = "VEC3",
	["ObjectValue"] = "OBJ",
	["StringValue"] = "STR",
	["Color3Value"] = "COL3",
	["BrickColorValue"] = "BCOL",
	["IntConstrainedValue"] = "INTC",
	["DoubleConstrainedValue"] = "DBLC",
	["CFrameValue"] = "CFRM",
}

local BypassIsA = {
	"LocalScript",
	"ModuleScript",
	"Script"
}

local function GetShort(String) -- Gets a shortened version of classnames in case there's no emoji correlated to it
	local Return = ""

	for i = 1, #String do
		local Char = String:sub(i, i)
		if Char:match("%u") then
			Return ..= Char
		end
	end

	return Return
end

local Ret = {}

return (function(Instance)
	local String = Instance.ClassName

	for _, v in next, Emojis do
		if _ == String or (not table.find(BypassIsA, String) and Instance:IsA(_)) then
			return v
		end
	end

	return GetShort(Instance.ClassName)
end) end,
                                        Properties = {
                                            Name = "Emojis"
                                        },
                                        Reference = 69,
                                        ClassName = "ModuleScript"
                                    }
                                },
                                Properties = {
                                    Name = "Modules"
                                },
                                Reference = 68,
                                ClassName = "Folder"
                            },
                            {
                                Closure = function() -- If you laugh at me for writing this at 2am, I will find you and I will put shrimp in your ears.

local Frame = script.Parent
local Explorer = Frame:WaitForChild("Explorer")

local Connection; Connection = game["Run Service"].RenderStepped:Connect(function()
	if not (Frame and Explorer and Frame.Parent and Explorer.Parent) then
		Connection:Disconnect()
	end
	
	local Pos = Frame.Position
	local NewScale = (Explorer.Size.X.Offset / workspace.CurrentCamera.ViewportSize.X)
	
	Frame.Position = UDim2.new(1 - NewScale, Pos.X.Offset, Pos.Y.Scale, Pos.Y.Offset)
	
	Explorer.Size = UDim2.new(Explorer.Size.X.Scale, Explorer.Size.X.Offset, Explorer.Size.Y.Scale, workspace.CurrentCamera.ViewportSize.Y)
end) end,
                                Properties = {
                                    Name = "AutoPosition"
                                },
                                Reference = 65,
                                ClassName = "LocalScript"
                            },
                            {
                                Children = {
                                    {
                                        Closure = function() local Explorer = script.Parent.Parent:WaitForChild("Explorer")
local Settings = script.Parent.Parent:WaitForChild("SettingsButton")
local Button = script.Parent
local Viewer = Button.Parent.Parent:WaitForChild("ScriptViewer")

local Offset = Explorer.Parent.AbsoluteSize.X + Button.AbsoluteSize.X
local YPos = Button.Position.Y.Offset


Button.Activated:Connect(function()
	Viewer.Visible = not Viewer.Visible
end)

while game:GetService("RunService").RenderStepped:Wait() and (Explorer and Button and Explorer.Parent and Button.Parent) do
	if Explorer.Visible then
		Button.Position = UDim2.new(0, -Button.AbsoluteSize.X, 0, YPos)
	else
		Button.Position = UDim2.new(0, Explorer.Size.X.Offset - Button.Size.X.Offset , 0, YPos)
	end
end

 end,
                                        Properties = {
                                            Name = "ScriptviewHandler"
                                        },
                                        Reference = 115,
                                        ClassName = "LocalScript"
                                    }
                                },
                                Properties = {
                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                    TextColor3 = Color3.new(1, 1, 1),
                                    BorderColor3 = Color3.new(0, 0, 0),
                                    Text = "\240\159\147\156",
                                    BorderSizePixel = 0,
                                    Name = "ScriptButton",
                                    Position = UDim2.new(0, -62, 0, 60),
                                    Size = UDim2.new(0, 62, 0, 62),
                                    ZIndex = 998,
                                    TextSize = 36,
                                    BackgroundColor3 = Color3.new(0.3098039329051971, 0.3098039329051971, 0.3098039329051971)
                                },
                                Reference = 114,
                                ClassName = "TextButton"
                            },
                            {
                                Attributes = {
                                    IsOpen = false
                                },
                                ClassName = "TextButton",
                                Properties = {
                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                    TextColor3 = Color3.new(1, 1, 1),
                                    BorderColor3 = Color3.new(0, 0, 0),
                                    Text = "\226\154\153",
                                    BorderSizePixel = 0,
                                    Name = "SettingsButton",
                                    Position = UDim2.new(0, -62, 0, -1),
                                    Size = UDim2.new(0, 62, 0, 62),
                                    ZIndex = 998,
                                    TextSize = 36,
                                    BackgroundColor3 = Color3.new(0.3098039329051971, 0.3098039329051971, 0.3098039329051971)
                                },
                                Reference = 66,
                                Children = {
                                    {
                                        Closure = function() local Holder = script.Parent.Parent
local Button = script.Parent
local Explorer = Holder:WaitForChild("Explorer")

local ExplorerTab, SettingsTab, ActionsTab = Explorer.ExplorerTab, Explorer.SettingsTab, Explorer.ActionsTab

Button.Activated:Connect(function()
	ExplorerTab.Visible = not ExplorerTab.Visible
	SettingsTab.Visible = not SettingsTab.Visible
	ActionsTab.Visible = false
end) end,
                                        Properties = {
                                            Name = "SettingsHandler"
                                        },
                                        Reference = 67,
                                        ClassName = "LocalScript"
                                    }
                                }
                            },
                            {
                                Children = {
                                    {
                                        Children = {
                                            {
                                                Closure = function() local Utilities = {ConvertTable = nil, CurrentRemote = nil, CurrentFunc = nil}

local Container = script.Parent:WaitForChild("Spy"):WaitForChild("Container")
local RemoteLogs = Container:WaitForChild("Logs"):WaitForChild("RemoteLogs")
local PlaceholderRemote = RemoteLogs.Parent:WaitForChild("Placeholder")
local Code = Container:WaitForChild("Info"):WaitForChild("ScrollingFrame"):WaitForChild("Code")

local CallIdx = 1

PlaceholderRemote.Visible = false
PlaceholderRemote.AutoButtonColor = false
PlaceholderRemote.Active = false

local SafeInstances = {
	"CFrame",
	"Vector3int16",
	"Vector3",
	"Vector2int16",
	"Vector2",
	"UDim",
	"UDim2",
	"Color3",
	"BrickColor",
	"Ray",
	"Region3",
	"Region3int16",
	"PhysicalProperties"
}

local RemoteTypes = {
	RemoteEvent = Color3.fromRGB(255, 255, 0),
	RemoteFunction = Color3.fromRGB(170, 0, 255)
}

local Blacklist = {}

function Utilities.Blacklist(Remote)
	if not table.find(Blacklist, Remote) then
		table.insert(Blacklist, Remote)
	end
end

function Utilities.IsEmpty(Table)
	for i, v in next, Table do
		return false
	end
	
	return true
end



function Utilities.FilterString(String, AAA)
	if typeof(String) ~= "string" then String = tostring(String) end
	local Copy = ""
	
	for i = 1, string.len(String) do
		local Char = string.sub(String, i, i)
		local Byte = string.byte(Char)
		
		if Byte < 32 or Byte > 126 then
			Copy = Copy .. "\\" .. Byte
		else
			Copy = Copy .. Char
		end
	end
	
	return Copy
end

function Utilities.GetFullName(Instance)
	local Parent = Instance.Parent
	local Ancestor = (Parent == nil and "nil" or "game")
	local Path = ":FindFirstChild(\"" .. Instance.Name .. "\")"
	
	while Parent and (Parent ~= game and Parent ~= nil) do
		if Parent.Parent == game then
			Path = "\[\"" .. Parent.Name .. "\"\]" .. Path
		else
			Path = ":FindFirstChild(\"" .. Parent.Name .. "\")" .. Path
		end
		
		Parent = Parent.Parent
	end
	
	return Utilities.FilterString(Ancestor .. Path)
end

function Utilities.ConvertTable(Data)
	local Table = Data.Table or Data
	local Indent = Data.Indent or 1
	local ShowKeys = true
	local LastIndent = Data.LastBracketIndent or 0
	
	
	local function ConvertData(Value)
		local Type = typeof(Value)
		
		if Type == "table" then
			if Utilities.IsEmpty(Value) then
				return "{}"
			end
			
			return Utilities.ConvertTable({
				Table = Value,
				Indent = Indent + (Data.LastBracketIndent or Indent),
				ShowKeys = true,
				LastBracketIndent = Indent
			})
		end
		
		if Type == "Instance" then
			if Value.Parent == nil then
				return string.format("nil.%s", Value.Name)
			else
				return Utilities.GetFullName(Value)
			end
		end
		
		if Type == "number" then
			return tostring(Value)
		end
		
		if Type == "string" then
			return string.format("\"%s\"", Utilities.FilterString(Value))
		end
		
		if Type == "function" then
			--[[if debug.getinfo and pcall(debug.getinfo, Value) then
				return tostring(Value) .. " | " .. debug.getinfo(Value).name
			else]]
				return tostring(Value)
			--end
		end
		
		if Type == "userdata" then
			local Proxy = Value
			local Metatable = getmetatable(Proxy)
			
			if getrawmetatable then
				local Meta = getrawmetatable(Proxy)
				
				if not Utilities.IsEmpty(Meta) then
					return "newproxy(true) --[[ raw metatable: " .. Utilities.ConvertTable({
						Table = Meta,
						Indent = Indent + (Data.LastBracketIndent or Indent),
						ShowKeys = true,
						LastBracketIndent = Indent
					}) .. "]]"
				end
			end
			
			if typeof(Metatable) ~= "table" then
				return "newproxy(true) --[[ locked __metatable: " .. Metatable .. "]]"
			end
			
			if not Utilities.IsEmpty(Metatable) then
				return "newproxy(true) --[[ metatable: " .. Utilities.ConvertTable({
					Table = Metatable,
					Indent = Indent + (Data.LastBracketIndent or Indent),
					ShowKeys = true,
					LastBracketIndent = Indent
				}) .. "]]"
			end
			
			return "newproxy(true) --[[Empty]]"
		end
		
		if table.find(SafeInstances, Type) then
			return Type .. ".new(" .. tostring(Value) .. ")"
		end
		
		if Type == "nil" then
			return "nil"
		end
		
		return tostring(Value)
	end
	
	local Result = "{\n"
	
	local LastIndex
	local Index = 0
	
	for i, v in next, Table do
		Index += 1
		
		if typeof(Table[i]) == "nil" then
			Result ..= ("%s[%s]= nil,\n"):format(string.rep("\t", Indent), i)
			continue
		end
		
		local Key
		
		if typeof(i) == "number" then
			Key = string.format("[%s] = ", i)
		else
			Key = string.format("[\"%s\"] = ", i)
		end
		
		Result ..= string.format("%s%s%s,\n", string.rep("\t", Indent), Key, ConvertData(v))
	end
	
	Result ..= string.rep("\t", LastIndent) .. "}"
	
	return Result
end

local Queue = {}

function Utilities.AddRemote(Remote, Traceback, ...)
	table.insert(Queue, {Remote, Traceback, {...}})
end

game:GetService("RunService").Stepped:Connect(function()
	for i, v in next, Queue do
		local Remote, Traceback, Args = v[1], v[2], v[3]
		
		if typeof(Remote) ~= "Instance" or not (Remote.IsA(Remote, "RemoteEvent") or Remote.IsA(Remote, "RemoteFunction")) then
			return
		end

		if table.find(Blacklist, Remote) or table.find(Blacklist, Remote.Name) then
			continue
		end
		
		local Log = PlaceholderRemote.Clone(PlaceholderRemote)
		local Name = Utilities.FilterString(Remote.Name)

		Log.Name = CallIdx
		Log.WaitForChild(Log, "RemoteType", 9e9).BackgroundColor3 = RemoteTypes[Remote.ClassName]
		
		Log.Visible = true
		Log.Active = true
		Log.AutoButtonColor = true

		Log.Parent = RemoteLogs
		Log.WaitForChild(Log, "TextLabel").Text = Name
		
		local Path = Utilities.GetFullName(Remote)
		
		local Data = Utilities.ConvertTable(Args)

		Log.Activated.Connect(Log.Activated, function()
			local Empty = Utilities.IsEmpty(Args)

			Code.Text = "-- It's really quite shrimple! Generated with ShrimpleSpy v1\n\n" .. (Empty and "" or "local Args = " .. Data .. "\n\n") .. Path .. ":" .. (Remote.IsA(Remote, "RemoteEvent") and "FireServer" or "InvokeServer") .. "(" .. (Empty and "" or "unpack(Args)") .. ")"

			Utilities.CurrentRemote = Remote
			
			Utilities.CurrentFunc = string.format("Info for remote: %s\n\n%s", Path, Utilities.ConvertTable(Traceback))
		end)

		CallIdx += 1
	end
	
	table.clear(Queue)
end)

function Utilities.Clear()
	CallIdx = 1
	
	for i, v in RemoteLogs:GetChildren() do
		if v:IsA("TextButton") and v ~= PlaceholderRemote then
			v:Destroy()
		end
	end
end

function Utilities.ClearBlacklist()
	table.clear(Blacklist)
end

return Utilities end,
                                                Properties = {
                                                    Name = "Utilities"
                                                },
                                                Reference = 111,
                                                ClassName = "ModuleScript"
                                            },
                                            {
                                                Closure = function() return (function()
	local Utilities = require(script.Parent:WaitForChild("Utilities"))
	local Spy = script.Parent:WaitForChild("Spy")

	local Container = Spy:WaitForChild("Container")
	local Topbar = Spy:WaitForChild("Topbar")

	local Logs = Container:WaitForChild("Logs")
	local Output = Container:WaitForChild("Info"):WaitForChild("ScrollingFrame"):WaitForChild("Code")
	local Controls = Container:WaitForChild("Controls")

	local Handlers = {
		Section1 = {
			Copy = function() 
				setclipboard(Output.Text)	
			end,
			Clear = function() 
				Output.Text = ""	
			end,
			Write = function() 
				writefile("Shrimp.lua", Output.Text)
			end
		},
		Section2 = {
			BlacklistRemote = function()
				if Utilities.CurrentRemote then
					Utilities.Blacklist(Utilities.CurrentRemote)
				end
			end,	
			BlacklistName = function()
				if Utilities.CurrentRemote then
					Utilities.Blacklist(Utilities.CurrentRemote.Name)
				end
			end,
			Run = function()
				loadstring(Output.Text)()
			end,
		},
		Section3 = {
			ClearLogs = function()
				Utilities.Clear()
			end,
			ClearBlacklist = function()
				Utilities.ClearBlacklist()
			end,
			GetInfo = function()	
				Output.Text = (Utilities.CurrentFunc or "")
			end,
		}
	}

	for i, v in next, Controls:GetChildren() do
		if Handlers[v.Name] then
			for Name, Func in next, Handlers[v.Name] do
				v:FindFirstChild(Name).Activated:Connect(Func)
			end
		end
	end

	Logs.CanvasSize = UDim2.new(0, 0, 0, Logs.RemoteLogs.UIListLayout.AbsoluteContentSize.Y)
	Logs.RemoteLogs.UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
		Logs.CanvasSize = UDim2.new(0, 0, 0, Logs.RemoteLogs.UIListLayout.AbsoluteContentSize.Y)
	end)

	Topbar.Close.Activated:Connect(function()
		script.Parent.Enabled = not script.Parent.Enabled
	end)

	Topbar.Minimize.Activated:Connect(function()
		Container.Visible = not Container.Visible
		Spy.BackgroundTransparency = (Spy.BackgroundTransparency == 1 and 0 or 1)
	end)

	if getgenv then
		getgenv().hookmetamethod = newcclosure(function(obj, meth, func, useArgGuard)
			if useArgGuard == nil then 
				useArgGuard = true 
			end

			local mt = getrawmetatable(obj)
			local methtohook = mt[meth]

			if islclosure(func) then 
				func = newcclosure(func) 
			end

			local minargs
			if meth == "__namecall" then 
				minargs = 1
			elseif meth == "__index" then 
				minargs = 2
			elseif meth == "__newindex" then
				minargs = 3
			else 
				minargs = 0
			end
			local old
			if useArgGuard then
				local handler = newcclosure(function(...)
					if table.getn({...}) < minargs then
						return old(...)
					end
					return func(unpack({...}))
				end)
				old = hookfunction(methtohook, handler)
			else
				old = hookfunction(methtohook, func)
			end
			return old
		end)

		local Methods = {
			"fireServer",
			"FireServer",
			"invokeServer",
			"InvokeServer"
		}

		local Old; Old = hookmetamethod(game, "__namecall", newcclosure(function(Self, ...)
			if table.find(Methods, getnamecallmethod()) then
				local Info = {}
				local Level = 0

				--[[while true do
					if pcall(getfenv, Level) then
						table.insert(Info, {if debug.getinfo and pcall(debug.validlevel, Level) then debug.getinfo(Level) else debug.info(Level, "slnaf")})
						Level += 1
					else
						break
					end
				end]]

				Utilities.AddRemote(Self, Info, ...)
			end

			return Old(Self, ...)
		end))

		local OldFire; OldFire = hookfunction(Instance.new("RemoteEvent").FireServer, newcclosure(function(Self, ...)
			if typeof(Self) == "Instance" and Self.IsA(Self, "RemoteEvent") then
				local Info = {}
				local Level = 0

				--[[while true do
					if pcall(getfenv, Level) then
						table.insert(Info, {if debug.getinfo and pcall(debug.validlevel, Level) then debug.getinfo(Level) else debug.info(Level, "slnaf")})
						Level += 1
					else
						break
					end
				end]]

				Utilities.AddRemote(Self, Info, ...)
			end	

			return OldFire(Self, ...)
		end))

		local OldInvoke; OldInvoke = hookfunction(Instance.new("RemoteFunction").InvokeServer, newcclosure(function(Self, ...)
			if typeof(Self) == "Instance" and Self.IsA(Self, "RemoteFunction") then
				local Info = {}
				local Level = 0

				--[[while true do
					if pcall(getfenv, Level) then
						table.insert(Info, {if debug.getinfo and pcall(debug.validlevel, Level) then debug.getinfo(Level) else debug.info(Level, "slnaf")})
						Level += 1
					else
						break
					end
				end]]

				Utilities.AddRemote(Self, Info, ...)
			end	

			return OldInvoke(Self, ...)
		end)) 
	else
		local Proxy = newproxy(true)
		local Metatable = getmetatable(Proxy)

		Metatable.__index = function()
			warn("IDX")
			return nil
		end

		Metatable.__tostring = function()
			warn("TSTR")
			return nil
		end

		Utilities.AddRemote(Instance.new("RemoteEvent"), {}, Proxy)

		Metatable.__metatable = "hey stop reading this metatable kid"

		Utilities.AddRemote(Instance.new("RemoteEvent"), {}, Proxy)

		local R = Instance.new("RemoteEvent")

		R.Name = string.rep("\240\159\166\144", 100)
	end
	
	return true
end)() end,
                                                Properties = {
                                                    Name = "Controller"
                                                },
                                                Reference = 112,
                                                ClassName = "ModuleScript"
                                            },
                                            {
                                                Children = {
                                                    {
                                                        Children = {
                                                            {
                                                                Properties = {
                                                                    FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                    Text = "\240\159\166\144 ShrimpleSpy",
                                                                    Size = UDim2.new(0, 117, 0, 31),
                                                                    Name = "Title",
                                                                    TextXAlignment = Enum.TextXAlignment.Left,
                                                                    Position = UDim2.new(0.01644346490502357, 0, 0.03125, 0),
                                                                    BorderSizePixel = 0,
                                                                    TextSize = 20,
                                                                    BackgroundColor3 = Color3.new(0.1529411822557449, 0.1529411822557449, 0.1529411822557449)
                                                                },
                                                                Reference = 109,
                                                                ClassName = "TextLabel"
                                                            },
                                                            {
                                                                Properties = {
                                                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                    Text = "_",
                                                                    Name = "Minimize",
                                                                    Position = UDim2.new(0.9270833134651184, 0, 0.03116954490542412, 0),
                                                                    Size = UDim2.new(0, 21, 0, 30),
                                                                    BorderSizePixel = 0,
                                                                    TextSize = 14,
                                                                    BackgroundColor3 = Color3.new(0.1529411822557449, 0.1529411822557449, 0.1529411822557449)
                                                                },
                                                                Reference = 108,
                                                                ClassName = "TextButton"
                                                            },
                                                            {
                                                                Properties = {
                                                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                    Text = "X",
                                                                    Name = "Close",
                                                                    Position = UDim2.new(0.9635416865348816, 0, 0.0008665142813697457, 0),
                                                                    Size = UDim2.new(0, 21, 0, 30),
                                                                    BorderSizePixel = 0,
                                                                    TextSize = 14,
                                                                    BackgroundColor3 = Color3.new(0.1529411822557449, 0.1529411822557449, 0.1529411822557449)
                                                                },
                                                                Reference = 107,
                                                                ClassName = "TextButton"
                                                            }
                                                        },
                                                        Properties = {
                                                            Name = "Topbar",
                                                            Position = UDim2.new(-0.0008184644975699484, 0, -0.001649065758101642, 0),
                                                            BorderColor3 = Color3.new(0, 0, 0),
                                                            Size = UDim2.new(0, 576, 0, 33),
                                                            BorderSizePixel = 0,
                                                            BackgroundColor3 = Color3.new(0.1529411822557449, 0.1529411822557449, 0.1529411822557449)
                                                        },
                                                        Reference = 106,
                                                        ClassName = "Frame"
                                                    },
                                                    {
                                                        Closure = function() --// Services
local Players = game:GetService('Players')
local UIS = game:GetService("UserInputService")

--// Variables
local UI = script.Parent

local Player = Players.LocalPlayer
local Mouse = Player:GetMouse()

local Hovered = false
local Holding = false
local MoveCon = nil

local InitialX, InitialY, UIInitialPos

local ViewPortSize = workspace.Camera.ViewportSize
local Speed = 1

--// Functions

local function Drag(processed)
	if processed then return end
	if Holding == false then MoveCon:Disconnect(); return end
	local distanceMovedX = (InitialX - Mouse.X)*Speed
	local distanceMovedY = (InitialY - Mouse.Y)*Speed

	local Pos = UIInitialPos - UDim2.new(distanceMovedX / ViewPortSize.X, 0, distanceMovedY / (ViewPortSize.Y + game.GuiService:GetGuiInset().Y), 0)
	UI.Position = UDim2.new(math.clamp(Pos.X.Scale, 0, 1-UI.Size.X.Scale), 0, math.clamp(Pos.Y.Scale, 0, 1-UI.Size.Y.Scale), 0)
end

--// Connections

UI.MouseEnter:Connect(function()
	Hovered = true
end)

UI.MouseLeave:Connect(function()
	Hovered = false
end)

UIS.InputBegan:Connect(function(input, processed)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch and not processed then
		Holding = Hovered
		if Holding then
			InitialX, InitialY = Mouse.X, Mouse.Y
			UIInitialPos = UI.Position

			MoveCon = Mouse.Move:Connect(function()
				Drag(processed)
			end)
		end
	end
end)

UIS.InputEnded:Connect(function(input, processed)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch and not processed then
		Holding = false
	end
end) end,
                                                        Properties = {
                                                            Name = "Draggable"
                                                        },
                                                        Reference = 110,
                                                        ClassName = "LocalScript"
                                                    },
                                                    {
                                                        Children = {
                                                            {
                                                                Children = {
                                                                    {
                                                                        Children = {
                                                                            {
                                                                                Properties = {
                                                                                    FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                                    Text = "Copy Code",
                                                                                    Name = "Copy",
                                                                                    Position = UDim2.new(0.01882352866232395, 0, 0, 0),
                                                                                    Size = UDim2.new(0, 133, 0, 32),
                                                                                    BorderSizePixel = 0,
                                                                                    TextSize = 14,
                                                                                    BackgroundColor3 = Color3.new(0.0470588281750679, 0.0470588281750679, 0.0470588281750679)
                                                                                },
                                                                                Reference = 95,
                                                                                ClassName = "TextButton"
                                                                            },
                                                                            {
                                                                                Properties = {
                                                                                    FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                                    Text = "Clear",
                                                                                    Name = "Clear",
                                                                                    Position = UDim2.new(0.3529411852359772, 0, 0, 0),
                                                                                    Size = UDim2.new(0, 133, 0, 32),
                                                                                    BorderSizePixel = 0,
                                                                                    TextSize = 14,
                                                                                    BackgroundColor3 = Color3.new(0.0470588281750679, 0.0470588281750679, 0.0470588281750679)
                                                                                },
                                                                                Reference = 96,
                                                                                ClassName = "TextButton"
                                                                            },
                                                                            {
                                                                                Properties = {
                                                                                    FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                                    Text = "Write to file",
                                                                                    Name = "Write",
                                                                                    Position = UDim2.new(0.6870588064193726, 0, 0, 0),
                                                                                    Size = UDim2.new(0, 133, 0, 32),
                                                                                    BorderSizePixel = 0,
                                                                                    TextSize = 14,
                                                                                    BackgroundColor3 = Color3.new(0.0470588281750679, 0.0470588281750679, 0.0470588281750679)
                                                                                },
                                                                                Reference = 97,
                                                                                ClassName = "TextButton"
                                                                            }
                                                                        },
                                                                        Properties = {
                                                                            Name = "Section1",
                                                                            BorderColor3 = Color3.new(0, 0, 0),
                                                                            Size = UDim2.new(0, 425, 0, 32),
                                                                            BorderSizePixel = 0,
                                                                            BackgroundColor3 = Color3.new(0.4196078777313232, 0.05098039656877518, 0.6352941393852234)
                                                                        },
                                                                        Reference = 94,
                                                                        ClassName = "Frame"
                                                                    },
                                                                    {
                                                                        Children = {
                                                                            {
                                                                                Properties = {
                                                                                    FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                                    Text = "Run Code",
                                                                                    Name = "Run",
                                                                                    Position = UDim2.new(0.01882352866232395, 0, 0, 0),
                                                                                    Size = UDim2.new(0, 133, 0, 32),
                                                                                    BorderSizePixel = 0,
                                                                                    TextSize = 14,
                                                                                    BackgroundColor3 = Color3.new(0.0470588281750679, 0.0470588281750679, 0.0470588281750679)
                                                                                },
                                                                                Reference = 99,
                                                                                ClassName = "TextButton"
                                                                            },
                                                                            {
                                                                                Properties = {
                                                                                    FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                                    Text = "Blacklist Remote",
                                                                                    Name = "BlacklistRemote",
                                                                                    Position = UDim2.new(0.3529411852359772, 0, 0, 0),
                                                                                    Size = UDim2.new(0, 133, 0, 32),
                                                                                    BorderSizePixel = 0,
                                                                                    TextSize = 14,
                                                                                    BackgroundColor3 = Color3.new(0.0470588281750679, 0.0470588281750679, 0.0470588281750679)
                                                                                },
                                                                                Reference = 100,
                                                                                ClassName = "TextButton"
                                                                            },
                                                                            {
                                                                                Properties = {
                                                                                    FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                                    Text = "Blacklist Name",
                                                                                    Name = "BlacklistName",
                                                                                    Position = UDim2.new(0.6870588064193726, 0, 0, 0),
                                                                                    Size = UDim2.new(0, 133, 0, 32),
                                                                                    BorderSizePixel = 0,
                                                                                    TextSize = 14,
                                                                                    BackgroundColor3 = Color3.new(0.0470588281750679, 0.0470588281750679, 0.0470588281750679)
                                                                                },
                                                                                Reference = 101,
                                                                                ClassName = "TextButton"
                                                                            }
                                                                        },
                                                                        Properties = {
                                                                            Name = "Section2",
                                                                            Position = UDim2.new(0, 0, 0.2914957702159882, 0),
                                                                            BorderColor3 = Color3.new(0, 0, 0),
                                                                            Size = UDim2.new(0, 425, 0, 32),
                                                                            BorderSizePixel = 0,
                                                                            BackgroundColor3 = Color3.new(0.4196078777313232, 0.05098039656877518, 0.6352941393852234)
                                                                        },
                                                                        Reference = 98,
                                                                        ClassName = "Frame"
                                                                    },
                                                                    {
                                                                        Children = {
                                                                            {
                                                                                Properties = {
                                                                                    FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                                    Text = "Clear Logs",
                                                                                    Name = "ClearLogs",
                                                                                    Position = UDim2.new(0.3529411852359772, 0, 0, 0),
                                                                                    Size = UDim2.new(0, 133, 0, 32),
                                                                                    BorderSizePixel = 0,
                                                                                    TextSize = 14,
                                                                                    BackgroundColor3 = Color3.new(0.0470588281750679, 0.0470588281750679, 0.0470588281750679)
                                                                                },
                                                                                Reference = 104,
                                                                                ClassName = "TextButton"
                                                                            },
                                                                            {
                                                                                Properties = {
                                                                                    FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                                    Text = "Clear Blacklist",
                                                                                    Name = "ClearBlacklist",
                                                                                    Position = UDim2.new(0.01882352866232395, 0, 0, 0),
                                                                                    Size = UDim2.new(0, 133, 0, 32),
                                                                                    BorderSizePixel = 0,
                                                                                    TextSize = 14,
                                                                                    BackgroundColor3 = Color3.new(0.0470588281750679, 0.0470588281750679, 0.0470588281750679)
                                                                                },
                                                                                Reference = 103,
                                                                                ClassName = "TextButton"
                                                                            },
                                                                            {
                                                                                Properties = {
                                                                                    FontFace = Font.new("rbxasset://fonts/families/FredokaOne.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                                    Text = "Get Info",
                                                                                    Name = "GetInfo",
                                                                                    Position = UDim2.new(0.6870588064193726, 0, 0, 0),
                                                                                    Size = UDim2.new(0, 133, 0, 32),
                                                                                    BorderSizePixel = 0,
                                                                                    TextSize = 14,
                                                                                    BackgroundColor3 = Color3.new(0.0470588281750679, 0.0470588281750679, 0.0470588281750679)
                                                                                },
                                                                                Reference = 105,
                                                                                ClassName = "TextButton"
                                                                            }
                                                                        },
                                                                        Properties = {
                                                                            Name = "Section3",
                                                                            Position = UDim2.new(0, 0, 0.5909411907196045, 0),
                                                                            BorderColor3 = Color3.new(0, 0, 0),
                                                                            Size = UDim2.new(0, 425, 0, 32),
                                                                            BorderSizePixel = 0,
                                                                            BackgroundColor3 = Color3.new(0.4196078777313232, 0.05098039656877518, 0.6352941393852234)
                                                                        },
                                                                        Reference = 102,
                                                                        ClassName = "Frame"
                                                                    }
                                                                },
                                                                Properties = {
                                                                    ScrollBarImageColor3 = Color3.new(0, 0, 0),
                                                                    Active = true,
                                                                    AutomaticCanvasSize = Enum.AutomaticSize.XY,
                                                                    ScrollBarThickness = 6,
                                                                    BorderSizePixel = 0,
                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                    Size = UDim2.new(0, 100, 0, 105),
                                                                    Name = "Controls",
                                                                    Position = UDim2.new(0.2604166567325592, 0, 0.7195767164230347, 0),
                                                                    SizeConstraint = Enum.SizeConstraint.RelativeYY,
                                                                    BackgroundColor3 = Color3.new(0.1764705926179886, 0.1764705926179886, 0.1764705926179886),
                                                                    AutomaticSize = Enum.AutomaticSize.X,
                                                                    CanvasSize = UDim2.new(0, 0, 0.5, 0)
                                                                },
                                                                Reference = 93,
                                                                ClassName = "ScrollingFrame"
                                                            },
                                                            {
                                                                Children = {
                                                                    {
                                                                        Children = {
                                                                            {
                                                                                Children = {
                                                                                    {
                                                                                        Closure = function() local Highlighter = require(script.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Parent.Modules.Highlighter)
Highlighter.highlight({textObject = script.Parent}) end,
                                                                                        Properties = {
                                                                                            Name = "Highlight"
                                                                                        },
                                                                                        Reference = 92,
                                                                                        ClassName = "LocalScript"
                                                                                    }
                                                                                },
                                                                                Properties = {
                                                                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                                    BorderSizePixel = 0,
                                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                                    Text = "",
                                                                                    TextWrapped = true,
                                                                                    Size = UDim2.new(0, 10000, 0, 11273),
                                                                                    Selectable = true,
                                                                                    Position = UDim2.new(0, 0, 0.001017476199194789, 0),
                                                                                    Name = "Code",
                                                                                    TextXAlignment = Enum.TextXAlignment.Left,
                                                                                    SizeConstraint = Enum.SizeConstraint.RelativeYY,
                                                                                    TextYAlignment = Enum.TextYAlignment.Top,
                                                                                    TextSize = 14,
                                                                                    BackgroundColor3 = Color3.new(0.2392157018184662, 0.2392157018184662, 0.2392157018184662)
                                                                                },
                                                                                Reference = 91,
                                                                                ClassName = "TextLabel"
                                                                            }
                                                                        },
                                                                        Properties = {
                                                                            ScrollBarImageColor3 = Color3.new(0, 0, 0),
                                                                            Active = true,
                                                                            BorderColor3 = Color3.new(0, 0, 0),
                                                                            Size = UDim2.new(0, 426, 0, 272),
                                                                            Position = UDim2.new(0, 0, 0.003453740384429693, 0),
                                                                            BackgroundColor3 = Color3.new(0.239215686917305, 0.239215686917305, 0.239215686917305),
                                                                            AutomaticCanvasSize = Enum.AutomaticSize.XY,
                                                                            BorderSizePixel = 0,
                                                                            CanvasSize = UDim2.new(0, 0, 0, 0)
                                                                        },
                                                                        Reference = 90,
                                                                        ClassName = "ScrollingFrame"
                                                                    }
                                                                },
                                                                Properties = {
                                                                    Name = "Info",
                                                                    Position = UDim2.new(0.2604166567325592, 0, -0.001316292560659349, 0),
                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                    Size = UDim2.new(0, 426, 0, 273),
                                                                    BorderSizePixel = 0,
                                                                    BackgroundColor3 = Color3.new(0.239215686917305, 0.239215686917305, 0.239215686917305)
                                                                },
                                                                Reference = 89,
                                                                ClassName = "Frame"
                                                            },
                                                            {
                                                                Children = {
                                                                    {
                                                                        Children = {
                                                                            {
                                                                                Properties = {
                                                                                    Size = UDim2.new(0, 9, 0, 21),
                                                                                    Name = "RemoteType",
                                                                                    Position = UDim2.new(0, 0, 0.0001968383730854839, 0),
                                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                                    ZIndex = 2,
                                                                                    BorderSizePixel = 0,
                                                                                    BackgroundColor3 = Color3.new(1, 1, 0)
                                                                                },
                                                                                Reference = 87,
                                                                                ClassName = "Frame"
                                                                            },
                                                                            {
                                                                                Properties = {
                                                                                    TextWrapped = true,
                                                                                    TextColor3 = Color3.new(1, 1, 1),
                                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                                    Size = UDim2.new(0, 135, 0, 22),
                                                                                    BorderSizePixel = 0,
                                                                                    BackgroundTransparency = 1,
                                                                                    Position = UDim2.new(0.05999999865889549, 0, 0, 0),
                                                                                    TextSize = 14,
                                                                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                                    TextScaled = true,
                                                                                    BackgroundColor3 = Color3.new(0.1764705926179886, 0.1764705926179886, 0.1764705926179886)
                                                                                },
                                                                                Reference = 88,
                                                                                ClassName = "TextLabel"
                                                                            }
                                                                        },
                                                                        Properties = {
                                                                            TextWrapped = true,
                                                                            TextColor3 = Color3.new(1, 1, 1),
                                                                            BorderColor3 = Color3.new(0, 0, 0),
                                                                            Text = "",
                                                                            Size = UDim2.new(0, 150, 0, 22),
                                                                            Name = "Placeholder",
                                                                            Position = UDim2.new(0, 0, 0.0004486406978685409, 0),
                                                                            BorderSizePixel = 0,
                                                                            FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                                                            TextSize = 14,
                                                                            BackgroundColor3 = Color3.new(0.1764705926179886, 0.1764705926179886, 0.1764705926179886)
                                                                        },
                                                                        Reference = 86,
                                                                        ClassName = "TextButton"
                                                                    },
                                                                    {
                                                                        Children = {
                                                                            {
                                                                                Properties = {
                                                                                    SortOrder = Enum.SortOrder.LayoutOrder
                                                                                },
                                                                                Reference = 85,
                                                                                ClassName = "UIListLayout"
                                                                            }
                                                                        },
                                                                        Properties = {
                                                                            Size = UDim2.new(0, 150, 0, 379),
                                                                            Name = "RemoteLogs",
                                                                            Position = UDim2.new(0, 0, 0.0005890377215109766, 0),
                                                                            BorderColor3 = Color3.new(0, 0, 0),
                                                                            BorderSizePixel = 0,
                                                                            AutomaticSize = Enum.AutomaticSize.Y,
                                                                            BackgroundColor3 = Color3.new(0.2470588237047195, 0.2470588237047195, 0.2470588237047195)
                                                                        },
                                                                        Reference = 84,
                                                                        ClassName = "Frame"
                                                                    }
                                                                },
                                                                Properties = {
                                                                    ScrollBarImageColor3 = Color3.new(0, 0, 0),
                                                                    Active = true,
                                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                                    ScrollBarThickness = 6,
                                                                    Name = "Logs",
                                                                    ScrollingDirection = Enum.ScrollingDirection.Y,
                                                                    Size = UDim2.new(0, 150, 0, 378),
                                                                    BorderSizePixel = 0,
                                                                    BackgroundColor3 = Color3.new(0.2117647230625153, 0.2117647230625153, 0.2117647230625153)
                                                                },
                                                                Reference = 83,
                                                                ClassName = "ScrollingFrame"
                                                            }
                                                        },
                                                        Properties = {
                                                            Name = "Container",
                                                            Position = UDim2.new(-0.0008184644975699484, 0, 0.07809314131736755, 0),
                                                            BorderColor3 = Color3.new(0, 0, 0),
                                                            Size = UDim2.new(0, 576, 0, 378),
                                                            BorderSizePixel = 0,
                                                            BackgroundColor3 = Color3.new(0.239215686917305, 0.239215686917305, 0.239215686917305)
                                                        },
                                                        Reference = 82,
                                                        ClassName = "Frame"
                                                    }
                                                },
                                                Properties = {
                                                    Name = "Spy",
                                                    Position = UDim2.new(0.674807071685791, 0, 0.2992473244667053, 0),
                                                    BorderColor3 = Color3.new(0, 0, 0),
                                                    Size = UDim2.new(0, 576, 0, 410),
                                                    BorderSizePixel = 0,
                                                    BackgroundColor3 = Color3.new(0.1843137294054031, 0.1843137294054031, 0.1843137294054031)
                                                },
                                                Reference = 81,
                                                ClassName = "Frame"
                                            }
                                        },
                                        Properties = {
                                            Enabled = false,
                                            ScreenInsets = Enum.ScreenInsets.DeviceSafeInsets,
                                            ZIndexBehavior = Enum.ZIndexBehavior.Sibling,
                                            ResetOnSpawn = false,
                                            Name = "Spy"
                                        },
                                        Reference = 80,
                                        ClassName = "ScreenGui"
                                    },
                                    {
                                        Closure = function() local Loaded = false

local Explorer = script.Parent.Parent:WaitForChild("Explorer")
local Settings = script.Parent.Parent:WaitForChild("SettingsButton")
local Button = script.Parent
local ShrimpleSpy = script.Parent:WaitForChild("Spy")

local YPos = Button.Position.Y.Offset

ShrimpleSpy.Enabled = false

local Offset = Explorer.Parent.AbsoluteSize.X + Button.AbsoluteSize.X

Button.Activated:Connect(function()
	if not Loaded then
		require(ShrimpleSpy.Controller)
		Loaded = true
	end
	
	ShrimpleSpy.Enabled = not ShrimpleSpy.Enabled
end)

while game:GetService("RunService").RenderStepped:Wait() and (Explorer and Button and Explorer.Parent and Button.Parent) do
	if Explorer.Visible then
		Button.Position = UDim2.new(0, -Button.AbsoluteSize.X, 0, YPos)
	else
		Button.Position = UDim2.new(0, Explorer.Size.X.Offset - Button.Size.X.Offset , 0, YPos)
	end
end

 end,
                                        Properties = {
                                            Name = "RspyHandler"
                                        },
                                        Reference = 79,
                                        ClassName = "LocalScript"
                                    }
                                },
                                Properties = {
                                    FontFace = Font.new("rbxasset://fonts/families/SourceSansPro.json", Enum.FontWeight.Regular, Enum.FontStyle.Normal),
                                    TextColor3 = Color3.new(1, 1, 1),
                                    BorderColor3 = Color3.new(0, 0, 0),
                                    Text = "\240\159\166\144",
                                    BorderSizePixel = 0,
                                    Name = "RspyButton",
                                    Position = UDim2.new(0, -62, 0, 122),
                                    Size = UDim2.new(0, 62, 0, 62),
                                    ZIndex = 998,
                                    TextSize = 36,
                                    BackgroundColor3 = Color3.new(0.3098039329051971, 0.3098039329051971, 0.3098039329051971)
                                },
                                Reference = 78,
                                ClassName = "TextButton"
                            }
                        },
                        Properties = {
                            BackgroundTransparency = 1,
                            Position = UDim2.new(0.7809576392173767, 0, 0, 0),
                            BorderColor3 = Color3.new(0, 0, 0),
                            Size = UDim2.new(0.2176917642354965, 0, 1, 0),
                            BorderSizePixel = 0,
                            BackgroundColor3 = Color3.new(1, 1, 1)
                        },
                        Reference = 3,
                        ClassName = "Frame"
                    }
                },
                Properties = {
                    ResetOnSpawn = false,
                    Name = "Shrex",
                    ScreenInsets = Enum.ScreenInsets.DeviceSafeInsets,
                    ZIndexBehavior = Enum.ZIndexBehavior.Sibling
                },
                Reference = 2,
                ClassName = "ScreenGui"
            }
        }
    }
}

do local a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p='0.4.2',Flags or{},script,next,unpack,table,require,type,pcall,getfenv,setfenv,setmetatable,rawget,coroutine,task,Instance local q,r,s,t,u,v,w,x,y=f.insert,f.freeze,n.wrap,o.defer,o.cancel,p.new,(b.ContextualExecution==nil and true)or b.ContextualExecution do if w then local z=game:GetService'RunService'x=z:IsServer()y=z:IsClient()end end local z,A,B,C,D,E={},{},{},{},{},{}local function F(G)local H,I=i(v,G.ClassName)if not H then return end z[G.Reference]=I if G.Closure then B[I]=G.Closure if I:IsA'BaseScript'then q(D,I)end end if G.Properties then for J,K in d,G.Properties do i(function()I[J]=K end)end end if G.RefProperties then for J,K in d,G.RefProperties do q(A,{InstanceObject=I,Property=J,ReferenceId=K})end end if G.Attributes then for J,K in d,G.Attributes do i(I.SetAttribute,I,J,K)end end if G.Children then for J,K in d,G.Children do local L=F(K)if L then L.Parent=I end end end return I end local G={}do for H,I in d,ModuleRoot do q(G,F(I))end end local H=j(0)local function I(J)local K=C[J]if J.ClassName=='ModuleScript'and K then return e(K)end local L=B[J]if not L then return end do local M local N={['maui']=r{Version=a,Script=c,Shared=E,GetScript=function()return c end,GetShared=function()return E end},['script']=J,['require']=function(N,...)if N and N.ClassName=='ModuleScript'and B[N]then return I(N)end return g(N,...)end,['getfenv']=function(N,...)if h(N)=='number'and N>=0 then if N==0 then return M else N=N+1 local O,P=i(j,N)if O and P==H then return M end end end return j(N,...)end,['setfenv']=function(N,O,...)if h(N)=='number'and N>=0 then if N==0 then return k(M,O)else N=N+1 local P,Q=i(j,N)if P and Q==H then return k(M,O)end end end return k(N,O,...)end}M=l({},{__index=function(O,P)local Q=m(M,P)if Q~=nil then return Q end local R=N[P]if R~=nil then return R end return H[P]end})k(L,M)end local M=s(L)if J:IsA'BaseScript'then local N=(not w or not J.Disabled)and t(M)if w then local O O=J:GetPropertyChangedSignal'Disabled':Connect(function(P)O:Disconnect()if P==false then I(J)else i(u,N)end end)end return else local N={M()}C[J]=N return e(N)end end for J,K in d,A do i(function()K.InstanceObject[K.Property]=z[K.ReferenceId]end)end for L,M in d,D do if not w or((x and M.ClassName=='Script')or(y and M.ClassName=='LocalScript'))then I(M)end end if b.ReturnMainModule==nil or b.ReturnMainModule then local N do for O,P in d,G do if P.ClassName=='ModuleScript'and P.Name=='MainModule'then N=P break end end end if N then return I(N)end end end
