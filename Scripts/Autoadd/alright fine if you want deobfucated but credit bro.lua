













































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Test", "GrapeTheme")

--main
local Towers = Window:NewTab("Tower placing")
local TowersSection = Towers:NewSection("Towers")
local Towers = Window:NewTab("admin tower BETA")
local Towe = Window:NewTab("Event tower")
local TowersSection1 = Towers:NewSection("Admin tower BETA ")
local Towersh = Towe:NewSection("Event server")
local Towa = Towe:NewSection("Event server")
TowersSection1:NewDropdown("Select tower", "won't work for sus tower", {"Sus", "Slayer"}, function(currentOption)
    Towers = currentOption
end)
Towersh:NewDropdown("Select tower", "funny description", {"mrshaska", "Raygun", "Platinum Slinger"}, function(currentOption)
    Towere = currentOption
end)


Towersh:NewButton("Place selected tower ", "WARNING! THIS WILL PLACE IT AT YOUR CURRENT POSITION", function()

local args = {
    [1] = Towere,
    [2] = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.Angles(-0, 0, -0)
}

game:GetService("ReplicatedStorage").Functions.SpawnTower:InvokeServer(unpack(args))

end)
TowersSection1:NewButton("Place selected tower ", "WARNING! THIS WILL PLACE IT AT YOUR CURRENT POSITION", function()

local args = {
    [1] = Towers,
    [2] = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.Angles(-0, 0, -0)
}

game:GetService("ReplicatedStorage").Functions.SpawnTower:InvokeServer(unpack(args))

end)


TowersSection:NewDropdown("Select tower", "funny description", {"1x1x1x1", "Archer", "Baller", "Boomer", "Boomer [Easter]", "Bot", "Bot [Error]", "Bugler", "Cannon", "Cannon [Party]", "Commander", "Commander [Cone]", "Commander [Party]", "Commando", "Cowboy", "Crossbow", "Festive", "Crossbow [Survivor]", "Energizer", "Exterminator", "Exterminator [Pink]", "Fighter", "Freezer", "Hacker", "Mercenary", "Minigunner", "FlameThrower", "Shop", "Shop [Party]", "Mercenary [Stealth]", "Militant", "Outlaw", "Platinum Minigunner",  "Swordsman", "Starry Assassin",  "Pilot", "Beegunner"}, function(currentOption)
    Tower = currentOption
end)
TowersSection:NewButton("Place selected tower ", "WARNING! THIS WILL PLACE IT AT YOUR CURRENT POSITION", function()

local args = {
    [1] = Tower,
    [2] = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.Angles(-0, 0, -0)
}

game:GetService("ReplicatedStorage").Functions.SpawnTower:InvokeServer(unpack(args))

end)

local credits = Window:NewTab("Credits")
local CreditSection = credits:NewSection("Credits")
CreditSection:NewLabel("Creator : caloriferedealer#9473 ")
CreditSection:NewLabel("Kavo ui library")
CreditSection:NewLabel("The moderator that banned me from their discord")
