-- This file was generated using Luraph Obfuscator v13.5.4

return(function(dv,qv,zv,Hv,lv,Kv,cv,Wv,vv,Vv,Qv,Ev,Tv,Nv,Dv,Ov,gv,Iv,Fv,Pv,kv,Uv,Mv,ov,yv,av,fv,rv,ev,xv,mv,iv,nv,Bv,...)local Rv,A,p=0,nil,(nil);local c=(0X1);local w=ev;repeat if Rv==0X0 then A=gv;do Rv=0X001;end;else p=kv;Rv=2;end;until Rv>=2;local Y,j,e=tostring,nil,nil;for F7=0,1 do if F7~=0x0 then e=string.char;else j=fv;continue;end;end;Rv=0X00002;local Yv,pv,g=nil,nil,nil;while Rv<=0X2 do if not(Rv<=0x0)then do if Rv==0x1 then g=string.rep;Rv=0x00003;else Yv={};Rv=0;do continue;end;end;end;else pv={};Rv=0X1;end;end;local k=Pv;local W=rawset;do Rv=0X0005;end;local u,d,h,b,S,a=nil,nil,nil,nil,nil,nil;repeat if Rv<=0X2 then if not(Rv<=0X0)then do if Rv==1 then S=Kv;Rv=0X00003;continue;else h={[8]=0X0009,[Wv]=0.9820328122061311,[0x004]=vv,[0X8]=-0X0000265b8d57,[0x1]=4,[Ev]=true,[0]=nv,[0X8]=0x0009,[Mv]=0X6,[1]=Mv,[5]=0x6,[7]=0X5248f424,[6]=3,[0]=mv,[3]=0X00005,[7]=-0x6b795716,[0]=Vv,[0X7]=3,[6]=9};Rv=0;end;end;else do b=bit32.rshift;end;do Rv=0X0001;end;do continue;end;end;else do if not(Rv<=0x3)then if Rv~=4 then do u=Dv;end;Rv=0x0004;continue;else d=2^av;Rv=0X2;end;else do a=Hv;end;Rv=0X6;continue;end;end;end;until Rv==0x0006;local X,v=Uv,next;do Rv=0x0;end;local P,M=nil,nil;while Rv<=0X001 do if Rv==0X0 then P=cv;do Rv=1;end;continue;else M=Tv;Rv=0X2;end;end;local V=Fv;local H=getfenv;local U=H();localv=2;local N,F,B,Q,f=nil,nil,nil,nil,nil;do repeat do if not(Rv<=2)then if Rv<=0X3 then do T=k(j(T,0X005),'\.\.',function(Ox)if S(Ox,2)==72 then for mc=0x0,1 do do if mc~=0X0 then return"";else do F=u(j(Ox,1,0x1));end;continue;end;end;end;else local R6=(e(u(Ox,lv)));do if F then local Xd,dd=1,(nil);while 0.9100309090000096 do if not(Xd<=0)then if Xd==1 then dd=g(R6,F);Xd=2;do continue;end;else F=nil;Xd=0;end;else return dd;end;end;else return R6;end;end;end;end);end;Rv=4;continue;else if Rv~=4 then f=Iv;do Rv=6;end;else Q=function()local V9=(S(T,c,c));c=c+1;return V9;end;Rv=5;end;end;else if Rv<=0X0 then Rv=1;else if Rv~=1 then N=Qv;do Rv=0;end;else B=0X100000000;Rv=0X3;end;end;end;end;until Rv>0x00005;end;local D=setmetatable;Rv=0x0;local I,l,m=nil,nil,(nil);repeat do if Rv<=0X0 then do I=0X80000000;end;do Rv=0X00001;end;else do if Rv==0X1 then l=function()local L4,P4,p4=0X2,nil,(nil);do while'\j\J\114\K\Kr\086'do if not(L4<=0X00000)then if L4==1 then c=p4;L4=0X000;else P4,p4=V("<I4",T,c);L4=1;continue;end;else return P4;end;end;end;end;Rv=2;else m=Bv;Rv=3;continue;end;end;end;end;until Rv==0x3;local z=B-0X00001;Rv=6;local O,q,r,C,i,x,E,R,G,s,Z=nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,(nil);repeat if not(Rv<=5)then if Rv<=0x8 then if Rv<=0x6 then O={[Mv]=vv};do Rv=7;end;else if Rv~=0x07 then x=function()local nw,Hw=V("<\100",T,c);c=Hw;return nw;end;Rv=0xa;else do local MM=(0X0);local XM=(nil);while MM~=2 do if MM==0 then XM=0X0002;MM=1;continue;else for u9=1,31 do for a6=0X000,1 do if a6~=0 then XM=XM*2;else do O[u9]=XM;end;end;end;end;MM=0X02;continue;end;end;end;do Rv=0x3;end;continue;end;end;else if Rv<=9 then do R=bit32.bnot;end;do Rv=0X4;end;else if Rv~=0Xa then i=yv;Rv=8;continue;else E=Ov.wrap;do Rv=0X09;end;do continue;end;end;end;end;else do if Rv<=0X002 then if not(Rv<=0X000)then if Rv==1 then s={0X5,0X4,0X0007};Rv=2;else Z=function()local xA=0x0;local EA=0X00;repeat local r4=S(T,c,c);c=c+1;EA=i(EA,X(N(r4,127),xA));do if N(r4,128)~=0X0 then else return EA;end;end;xA=xA+7;until false;end;Rv=0x0C;continue;end;else do C=zv;end;Rv=0X000B;end;else if not(Rv<=0X3)then do if Rv~=4 then r=dv;do Rv=0X0;end;do continue;end;else G=ov;Rv=0X0001;end;end;else do q=function()local UT=0;local AT,VT=nil,nil;do while UT~=0x0002 do do if UT==0 then AT,VT=V("<i8",T,c);do UT=0X0001;end;else c=VT;do UT=0X002;end;continue;end;end;end;end;return AT;end;end;Rv=0X5;end;end;end;end;until Rv==0Xc;local y=I-0X001;local J=(function()local P3=(Z());if P3>y then do return P3-B;end;end;return P3;end);local o=function(qT,iT,sT)local KT,PT=0,(nil);while true do if KT<=0 then PT=(qT/O[iT])%O[sT];KT=2;do continue;end;else if KT~=1 then do PT=PT-PT%0x01;end;KT=1;else return PT;end;end;end;end;local t=Q();local L=(Q());local K=qv;local Cv=function(Xf)local Of={S(T,c,c+3)};local sf=(1);local Jf,zf,Gf,Rf=nil,nil,nil,(nil);while true do do if sf<=2 then if sf<=0X00000 then do Gf=r(Of[3],L);end;sf=0x3;continue;else if sf~=0X001 then zf=r(Of[0X2],L);sf=0X0000;else Jf=r(Of[vv],L);sf=0X2;end;end;else if sf<=4 then if sf==3 then do Rf=r(Of[Vv],L);end;sf=6;else do return Rf*xv+Gf*rv+zf*0x00100+Jf;end;end;elseif sf~=0X5 then L=(13*L+Xf)%256;sf=5;else do c=c+Vv;end;do sf=4;end;end;end;end;end;end;local uv=function(...)do return w("#",...),{...};end;end;local Av,wv,Gv,jv,Sv=nil,nil,nil,nil,nil;for jt=0,0X005 do if jt<=0X2 then do if jt<=0x00 then Av=0x1;do continue;end;else if jt==1 then wv=function(j3)local m3=0X0002;local l3,Q3=nil,nil;do repeat if not(m3<=1)then if not(m3<=0X2)then if m3==0X3 then do Q3='';end;m3=0x4;do continue;end;else for G_=0X001,l3,0X1f3D do local c_=0X0;local i_=(nil);repeat do if c_==0 then i_=G_+7997-1;c_=1;else if i_>l3 then i_=l3;end;c_=0X002;continue;end;end;until c_>1;local r_=({S(T,c+G_-0X1,c+i_-1)});c_=0x1;while c_<2 do if c_==0X0 then Q3=Q3..e(m(r_));c_=0x002;else for Mn=0X1,#r_ do local Fn=1;do while 0.9594029668098858 do if Fn==0X0000 then t=(j3*t+0X00dB)%0X00100;do break;end;else do r_[Mn]=r(r_[Mn],t);end;Fn=0x0;continue;end;end;end;end;c_=0;continue;end;end;end;do m3=0X1;end;continue;end;else l3=l();m3=0X3;do continue;end;end;else if m3==0 then return Q3;else do c=c+l3;end;m3=0;end;end;until false;end;end;continue;else continue;end;end;end;else if not(jt<=0X3)then do if jt==4 then function jv()local gk=nil;local Ok=(0X0);while Ok<2 do do if Ok==0X000 then Ok=0X1;continue;else gk={Nv,Nv,Nv,{},nil,nil,{},nil,{}};Ok=0X2;end;end;end;Ok=0X01;local Mk,nk=nil,(nil);do while Ok~=3 do if Ok<=0 then nk={};Ok=3;continue;else if Ok~=1 then(gk)[15]=Q();Ok=0;do continue;end;else Mk={};Ok=0X2;continue;end;end;end;end;local Bk,sk=nil,(nil);for nI=0x00,7 do if nI<=3 then if not(nI<=1)then do if nI~=2 then for b7=0X0001,Z()do(nk)[b7]={Q(),Z()};end;else gk[8]=nk;do continue;end;end;end;else do if nI==0 then(gk)[0X00002]=Z();else Bk=1;continue;end;end;end;else do if nI<=0X5 then do if nI~=0X00004 then(gk)[19]=Q();continue;else(gk)[Wv]=Z();continue;end;end;else do if nI==6 then do sk={};end;else do gk[10]=l();end;end;end;end;end;end;end;local Wk=gk[0x7];Ok=0X00004;local mk,zk,Qk=nil,nil,nil;while Ok~=0X6 do if Ok<=2 then if not(Ok<=0X0)then if Ok~=1 then(gk)[1]=o(zk,0X2,0X0001)~=0;Ok=0X00003;continue;else(gk)[6]=o(zk,0X1,0x1)~=0x0;Ok=0x2;end;else zk=Q();Ok=1;continue;end;else if not(Ok<=3)then if Ok~=4 then for TQ=0X0,mk-0X1 do Wk[TQ]=jv();end;do Ok=0;end;continue;else mk=l()-42534;Ok=5;do continue;end;end;else Qk=l()-1975;Ok=0X6;end;end;end;local Ek=gk[0X00004];for Aa=0x0,0X1 do do if Aa==0X00 then for ma=1,Qk do(Ek)[ma]={[6]=0.8586372956517854,[2]="\048\_\110J\108\S",[0X7]=-0x68D6987c,[0X3]=0.5256827303432202,[0x5]=0.8634827509204168,[0X4]=J(),[1]=0.32597814374510026,[7]=-960441982,[0X3]=Q(),[0X0007]=J(),[1]=Q(),[0X5]=J(),[6]=Q(),[2]=Z()};end;else(gk)[18]=l();end;end;end;Ok=0x0003;local jk,Tk,Zk=nil,nil,(nil);repeat if not(Ok<=0X01)then do if Ok==2 then jk=l()-0X0428C;Ok=0;else gk[5]=Z();Ok=0x2;do continue;end;end;end;elseif Ok==0 then Tk=Q();Ok=0X001;else do Zk=Q()~=0;end;break;end;until(false);Ok=3;do repeat if Ok<=0X1 then if Ok==0X00000 then return gk;else do for BY=1,Qk do local gY=(gk[0X00004][BY]);for q9,Z9 in ipairs(s)do local O9,b9,J9=0X000,nil,(nil);while O9~=3 do if O9<=0X0 then b9=h[Z9];do O9=0X2;end;continue;else if O9~=1 then do J9=gY[b9];end;do O9=0X1;end;continue;else do if J9==0X007 then local uO,lO=0X1,nil;local JO=(sk[gY[Z9]]);while uO<=1 do if uO~=0x0 then lO=Mk[JO];do uO=0x0000;end;else if not(lO)then else local nP=nil;for K_=0,1 do if K_~=0 then nP=lO[iv];continue;else gY[b9]=lO[0X1];continue;end;end;do(nP)[#nP+1]={gY,b9};end;end;uO=0X2;continue;end;end;elseif J9~=10 then else do gY[Z9]=BY+gY[Z9]+0x1;end;end;end;O9=3;continue;end;end;end;end;end;end;do Ok=2;end;end;elseif Ok==0X0002 then gk[19]=l();do Ok=0;end;continue;else for S1=0X1,jk do local o1,F1,h1=0X0,nil,nil;do repeat if not(o1<=0X001)then if o1==0X2 then if h1==235 then F1=q();elseif h1==0X0E1 then do F1=x()+l();end;elseif h1==0X7A then F1=false;elseif h1==222 then F1=j(wv(Tk),l());elseif h1==0x0079 then F1=j(wv(Tk),Q());elseif h1==234 then do F1=q();end;elseif h1==0Xf0 then do F1=l();end;elseif h1==188 then F1=j(wv(Tk),0x5);elseif h1==31 then F1=j(wv(Tk),Q());elseif h1==75 then do F1=j(wv(Tk),Q());end;elseif h1==199 then F1=nv;elseif h1==38 then F1=j(wv(Tk),l());elseif h1~=0x91 then else F1=x();end;o1=4;else do(sk)[S1-0X0001]=Bk;end;o1=2;continue;end;else if o1~=0 then h1=Q();o1=3;do continue;end;else do F1=Nv;end;o1=1;end;end;until o1>0X00003;end;local v1=({F1,{}});o1=0X1;while o1<3 do if o1<=0 then Bk=Bk+0X1;do o1=2;end;do continue;end;else if o1~=0X00001 then if Zk then local hI=(1);while hI<2 do if hI~=0X0 then(pv)[Av]=v1;hI=0X0;else Av=Av+vv;hI=2;continue;end;end;end;o1=3;continue;else(Mk)[Bk]=v1;o1=0X0;end;end;end;end;Ok=0X1;continue;end;until(false);end;end;else Sv=jv();continue;end;end;else function Gv(lB,sB,bB)local AB=lB[0X00004];local IB,SB=lB[6],(lB[1]);local EB,qB=lB[0X0003],(lB[9]);local uB,mB=lB[0x7],lB[0X00002];local YB=(D({},{__mode="v"}));local XB=lB[5];local RB=nil;RB=function(...)local vU=(0X001);local kU=H();local eU=({});local GU=(0X0);local DU,dU=uv(...);DU=DU-0X1;for Jy=0X0,DU do if not(mB>Jy)then break;else do eU[Jy]=dU[Jy+1];end;end;end;do(Yv)[1]=lB;end;(Yv)[0x2]=eU;local hU=((kU==U and bB or kU));if not IB then dU=nil;else if SB then do(eU)[mB]={n=DU>=mB and DU-mB+1 or 0x0,m(dU,mB+1,DU+0X1)};end;end;end;if hU~=kU then(K)(RB,hU);end;while"\120\U\i(\095\065\~\H"do local R1=(AB[vU]);local n1=R1[2];vU=vU+1;do if n1>=0X002e then do if n1>=0X45 then if n1<0X0051 then if n1<0x4B then if n1<72 then if not(n1>=70)then local qF=(eU[R1[4]]);local DF=(R1[0x005]);eU[DF+0X1]=qF;do eU[DF]=qF[R1[0x3]];end;else if n1~=0X47 then local JX=R1[0X5];local bX,mX=eU[JX]();if not(bX)then else vU=R1[4];eU[JX+3]=mX;end;else do repeat local HV,bV=YB,(eU);do if not(#HV>0)then else local Tm=({});do for aU,lU in v,HV do for lJ,sJ in v,lU do if sJ[0x1]==bV and sJ[0X0002]>=0X00 then local aj=sJ[0X02];if not(not Tm[aj])then else Tm[aj]={bV[aj]};end;(sJ)[1]=Tm[aj];(sJ)[2]=1;end;end;end;end;end;end;until true;end;local MD=(R1[5]);return m(eU,MD,MD+R1[4]-0X2);end;end;else do if n1<0X49 then local Kl=R1[0X05];local Dl,gl,kl=eU[Kl]();if Dl then eU[Kl+0X1]=gl;do(eU)[Kl+2]=kl;end;vU=R1[0X4];end;else if n1==0X00004A then eU[R1[5]]=Yv[R1[4]];else do(Yv)[R1[0X4]]=eU[R1[5]];end;end;end;end;end;else if not(n1<78)then if n1<79 then eU[R1[0X005]]=hU[R1[1]];else if n1~=80 then if eU[R1[0X00004]]<eU[R1[0X00007]]then vU=R1[5];end;else(eU)[R1[5]]=eU[R1[4]]%eU[R1[0X7]];end;end;else if n1>=0X4C then if n1==77 then(eU)[R1[5]]=eU[R1[0X04]]>eU[R1[7]];else eU[R1[0x5]]=eU[R1[4]]/eU[R1[7]];end;else if eU[R1[0X4]]==eU[R1[0x007]]then vU=R1[0X5];end;end;end;end;else do if not(n1<87)then if not(n1<90)then if not(n1<91)then do if n1~=92 then(eU[R1[0X005]])[eU[R1[4]]]=R1[0X3];else do(eU)[R1[0X05]]=eU[R1[0x00004]]<=eU[R1[0X0007]];end;end;end;else(eU)[R1[0X5]]=eU[R1[4]]~=R1[0X3];end;else if n1>=0X58 then if n1~=0x59 then(eU)[R1[0x5]]={m({},0X1,R1[0X00004])};else do(eU)[R1[5]]=eU[R1[0X04]]*eU[R1[7]];end;end;else(eU)[R1[5]]=eU[R1[0X004]]~=eU[R1[7]];end;end;else if not(n1<84)then if not(n1>=0X55)then if eU[R1[0x00004]]==eU[R1[0X7]]then else vU=R1[0X5];end;else if n1==0X56 then if not(not(eU[R1[0X4]]<=eU[R1[0X7]]))then else vU=R1[0X5];end;else local DZ=R1[0X5];local qZ=(E(function(...)M();for zi in...do(M)(true,zi);end;end));qZ(eU[DZ],eU[DZ+0X01],eU[DZ+2]);GU=DZ;(eU)[DZ]=qZ;vU=R1[0x4];end;end;else do if n1<0X52 then do if not(eU[R1[0X04]]<=R1[3])then vU=R1[5];end;end;else if n1==83 then(eU)[R1[0x5]]=eU[R1[4]]>=eU[R1[7]];else local B9=R1[0x5];local f9=E(function(...)M();for h9,c9,E9,j9,J9,a9,G9,K9,z9,r9 in...do(M)(true,{h9,c9,E9,j9,J9,a9,G9,K9,z9,r9});end;end);f9(eU[B9],eU[B9+0X1],eU[B9+0X2]);do GU=B9;end;eU[B9]=f9;vU=R1[4];end;end;end;end;end;end;end;elseif not(n1>=0X39)then if not(n1<51)then do if n1>=54 then do if n1>=55 then do if n1~=56 then if R1[7]==48 then vU=vU-0X0001;(AB)[vU]={[4]=(R1[4]-0Xd8),[0x5]=(R1[5]-216),[2]=13};elseif R1[7]~=195 then for ue=R1[5],R1[4]do eU[ue]=nil;end;else vU=vU-0X00001;(AB)[vU]={[0X4]=(R1[0X0004]-0X00e4),[5]=(R1[0X005]-0Xe4),[2]=61};end;else local SJ=R1[5];GU=SJ+R1[4]-1;(eU[SJ])(m(eU,SJ+1,GU));GU=SJ-1;end;end;else hU[R1[0X00001]]=eU[R1[5]];end;end;else if n1<0X34 then local yN=(R1[5]);local aN=(eU[yN]);local WN=eU[yN+1];local PN=(eU[yN+0X2]);do eU[yN]=E(function()for jt=aN,WN,PN do(M)(true,jt);end;end);end;vU=R1[0x4];else if n1~=53 then local iD=(R1[7]);local PD,oD=R1[0X5],(R1[0X4]);if oD~=0 then GU=PD+oD-0X001;end;local lD,HD=nil,(nil);if oD~=0X1 then do lD,HD=uv(eU[PD](m(eU,PD+1,GU)));end;else lD,HD=uv(eU[PD]());end;if iD==1 then GU=PD-0X1;else do if iD~=0 then lD=PD+iD-0x2;GU=lD+0x01;else do lD=lD+PD-0X0001;end;GU=lD;end;end;local Q_=0X0;for mP=PD,lD do do Q_=Q_+0X1;end;do(eU)[mP]=HD[Q_];end;end;end;else do eU[R1[5]]=true;end;end;end;end;end;else if n1<0X30 then if n1==47 then local L3=(R1[5]);local F3,X3=eU[L3],(R1[7]-0X00001)*50;for s7=0X001,GU-L3 do(F3)[X3+s7]=eU[L3+s7];end;else do eU[R1[0X5]]=i(eU[R1[0X4]],eU[R1[7]]);end;end;else if n1>=0X31 then if n1~=0X32 then if R1[0X7]~=185 then local Fc=(DU-mB);local ic=R1[5];do if not(Fc<0)then else Fc=-0x1;end;end;for Jb=ic,ic+Fc do eU[Jb]=dU[mB+(Jb-ic)+1];end;GU=ic+Fc;else do vU=vU-1;end;do AB[vU]={[4]=(R1[0x00004]-192),[0X00005]=(R1[5]-0X000c0),[0X02]=0x0003F};end;end;else local cO=sB[R1[4]];cO[1][cO[2]]=eU[R1[5]];end;else eU[R1[0X5]]=X(eU[R1[0X4]],eU[R1[0X07]]);end;end;end;else if n1<0X00003f then if not(n1<60)then if n1>=61 then if n1~=62 then eU[R1[5]]=nil;else do(eU)[R1[5]]=eU[R1[4]]-eU[R1[7]];end;end;else eU[R1[5]][R1[1]]=eU[R1[0X00007]];end;else do if not(n1<0X00003A)then if n1==59 then local gK=(R1[5]);do eU[gK]=eU[gK](m(eU,gK+1,GU));end;GU=gK;else local aL=(sB[R1[4]]);eU[R1[5]]=aL[0X1][aL[2]];end;else do eU[R1[5]]=R1[1];end;end;end;end;else do if not(n1>=0x42)then do if not(n1>=64)then repeat local sv,Zv=YB,eU;if not(#sv>0X000)then else local Ob=({});for NP,SP in v,sv do for n2,M2 in v,SP do if not(M2[1]==Zv and M2[0X00002]>=0X0)then else local ua=M2[0X2];if not Ob[ua]then(Ob)[ua]={Zv[ua]};end;(M2)[1]=Ob[ua];M2[0X2]=1;end;end;end;end;until true;return;else do if n1==65 then local yE=(R1[5]);eU[yE](m(eU,yE+1,GU));GU=yE-1;else local Te,Ve=R1[5],R1[0X00004];do GU=Te+Ve-0X00001;end;repeat local fo,lo=YB,eU;if not(#fo>0)then else local Bq=({});for JI,EI in v,fo do for ZY,DY in v,EI do if DY[0x00001]==lo and DY[0X002]>=0x0 then local tG=DY[0X0002];if not(not Bq[tG])then else(Bq)[tG]={lo[tG]};end;DY[1]=Bq[tG];(DY)[2]=0X00001;end;end;end;end;until true;return eU[Te](m(eU,Te+1,GU));end;end;end;end;else do if n1<0x000043 then do vU=R1[0X00004];end;else do if n1~=0X00044 then do if not eU[R1[0X5]]then vU=R1[4];end;end;else eU[R1[5]]=eU[R1[4]];end;end;end;end;end;end;end;end;end;else do if not(n1>=23)then do if not(n1<11)then if n1<0x11 then if not(n1>=0X0E)then if not(n1<0XC)then if n1~=0XD then local KC=(R1[0x0005]);(eU[KC])(eU[KC+0X1],eU[KC+0X2]);GU=KC-0X01;else if R1[0X007]==0Xdc then vU=vU-0x0001;(AB)[vU]={[2]=8,[5]=(R1[0x5]-0X9),[0x4]=(R1[4]-9)};elseif R1[0X00007]~=0X017 then(eU)[R1[0x05]]=#eU[R1[0X4]];else vU=vU-1;do AB[vU]={[0X4]=(R1[0X4]-199),[0X2]=42,[0X5]=(R1[0X5]-0XC7)};end;end;end;else local KM=(uB[R1[4]]);local fM,NM=KM[8],(nil);local QM=#fM;do if not(QM>0)then else NM={};do for Wx=0X1,QM do local cx=fM[Wx];if cx[0X001]==0X00 then do NM[Wx-1]={eU,cx[2]};end;else do NM[Wx-0x1]=sB[cx[0X02]];end;end;end;end;(P)(YB,NM);end;end;eU[R1[0X5]]=Gv(KM,NM,hU);end;else do if not(n1<15)then do if n1~=0X10 then eU[R1[5]]=eU[R1[0X4]]<eU[R1[0X007]];else eU[R1[0x005]]=b(eU[R1[4]],eU[R1[0x7]]);end;end;else local eO=R1[5];local vO=(E(function(...)(M)();for SN,vN in...do(M)(true,SN,vN);end;end));vO(eU[eO],eU[eO+1],eU[eO+0X0002]);GU=eO;(eU)[eO]=vO;do vU=R1[0X4];end;end;end;end;else if not(n1<20)then if n1<0X15 then(eU)[R1[0X5]]={};else if n1==22 then do(eU)[R1[0X5]]=eU[R1[4]]^eU[R1[0X7]];end;else local w7=(R1[5]);eU[w7]=eU[w7](eU[w7+1],eU[w7+0X2]);GU=w7;end;end;else do if not(n1<18)then do if n1==19 then(eU[R1[5]])[R1[1]]=R1[3];else(eU)[R1[5]]=N(eU[R1[0X4]],eU[R1[7]]);end;end;else eU[R1[0X5]]=r(eU[R1[0X04]],eU[R1[0X7]]);end;end;end;end;else if not(n1<0X5)then if n1<0x8 then if n1>=0X6 then if n1~=0X7 then local Mm=R1[0X5];do eU[Mm]=eU[Mm](eU[Mm+1]);end;GU=Mm;else local qC=R1[4];(eU)[R1[0X5]]=eU[qC]..eU[qC+1];end;else do eU[R1[0X5]]=eU[R1[0x0004]]==eU[R1[0X007]];end;end;else do if not(n1>=0X0009)then do(eU)[R1[5]]=-eU[R1[4]];end;else if n1==0x000A then local z8=(R1[5]);GU=z8+R1[4]-0X01;eU[z8]=eU[z8](m(eU,z8+1,GU));GU=z8;else local Ub=R1[5];local zb,Vb=eU[Ub]();if zb then(eU)[Ub+1]=Vb;vU=R1[4];end;end;end;end;end;else if not(n1<2)then if not(n1<0x003)then if n1==4 then do if R1[7]~=0X7E then repeat local m_,w_=YB,eU;if not(#m_>0x0000)then else local cW=({});for H0,k0 in v,m_ do do for NL,ML in v,k0 do if not(ML[1]==w_ and ML[2]>=0)then else local HT=(ML[0X002]);if not cW[HT]then cW[HT]={w_[HT]};end;ML[0X1]=cW[HT];ML[0X2]=0X001;end;end;end;end;end;until true;return eU[R1[0x5]];else vU=vU-0X1;(AB)[vU]={[2]=63,[0x0004]=(R1[4]-0x6a),[0X5]=(R1[5]-106)};end;end;else do eU[R1[5]]=R1[0X1];end;end;else GU=R1[5];eU[GU]=eU[GU]();end;else if n1~=1 then if not(eU[R1[0X4]]<eU[R1[0X7]])then vU=R1[5];end;else repeat local fA,eA=YB,(eU);if#fA>0 then local j0=({});for Wr,Ar in v,fA do do for sX,dX in v,Ar do if not(dX[0x0001]==eA and dX[2]>=0)then else local FF=dX[2];do if not j0[FF]then j0[FF]={eA[FF]};end;end;do dX[1]=j0[FF];end;do dX[2]=1;end;end;end;end;end;end;until true;local mF=(R1[0X5]);do return eU[mF](m(eU,mF+1,GU));end;end;end;end;end;end;else if n1>=0X22 then if not(n1<40)then if n1<0X2b then if n1>=0x00029 then if n1==42 then repeat local Kt,jt=YB,eU;if#Kt>0X0 then local iI=({});for WV,BV in v,Kt do for zc,Ac in v,BV do if not(Ac[1]==jt and Ac[2]>=0)then else local SS=(Ac[0X00002]);if not(not iI[SS])then else(iI)[SS]={jt[SS]};end;(Ac)[0x1]=iI[SS];(Ac)[0X2]=0X1;end;end;end;end;until true;return m(eU,R1[5],GU);else(eU)[R1[0X5]]=false;end;else(eU)[R1[0X5]]=eU[R1[0X4]][eU[R1[7]]];end;else do if not(n1>=44)then if eU[R1[0X4]]~=R1[3]then vU=R1[0X5];end;else do if n1~=0X2d then local iL=(R1[0x0005]);for hf=iL,iL+(R1[4]-0X1)do(eU)[hf]=dU[mB+(hf-iL)+0X1];end;else do GU=R1[0x5];end;(eU[GU])();do GU=GU-1;end;end;end;end;end;end;else if not(n1>=0X025)then if n1>=35 then if n1~=0x24 then repeat local FJ,OJ=YB,(eU);if not(#FJ>0)then else local Ec={};do for jh,wh in v,FJ do for w0,e0 in v,wh do do if e0[1]==OJ and e0[2]>=0 then local Zm=(e0[0X2]);if not(not Ec[Zm])then else(Ec)[Zm]={OJ[Zm]};end;(e0)[1]=Ec[Zm];e0[0X2]=0x0001;end;end;end;end;end;end;until true;return eU[R1[0X0005]]();else eU[R1[0X5]]=eU[R1[4]][R1[3]];end;else local KC=R1[0X005];local tC=(R1[7]-1)*50;local SC=(eU[KC]);for o1=1,R1[4]do do SC[tC+o1]=eU[KC+o1];end;end;end;else if n1>=38 then if n1~=39 then local KC=R1[5];(eU[KC])(eU[KC+1]);do GU=KC-0X1;end;else eU[R1[5]]=not eU[R1[4]];end;else if not(eU[R1[0X5]])then else do vU=R1[4];end;end;end;end;end;else if n1>=0x01c then if n1<31 then do if n1>=29 then do if n1==30 then(eU)[R1[0X5]]=eU[R1[0x4]]%R1[3];else local fl=eU[R1[0X04]]/eU[R1[0X7]];(eU)[R1[0X05]]=fl-fl%0X0001;end;end;else local YP=R1[0X0004];local nP=eU[YP];for S8=YP+1,R1[0X7]do nP=nP..eU[S8];end;(eU)[R1[5]]=nP;end;end;else if not(n1<0X00020)then if n1~=33 then if eU[R1[0X4]]==R1[0x3]then vU=R1[0x5];end;else(eU[R1[0X5]])[eU[R1[4]]]=eU[R1[0X07]];end;else repeat local Ze,se,je=YB,eU,R1[5];if not(#Ze>0)then else local eO={};do for e3,v3 in v,Ze do for JT,nT in v,v3 do if not(nT[0X1]==se and nT[2]>=je)then else local nI=(nT[2]);if not eO[nI]then eO[nI]={se[nI]};end;do nT[1]=eO[nI];end;(nT)[2]=1;end;end;end;end;end;until true;end;end;else do if n1<25 then if n1~=24 then local l7=R1[5];local J7,w7=eU[l7]();if not(J7)then else for o1=0x00001,R1[0X07]do(eU)[l7+o1]=w7[o1];end;do vU=R1[4];end;end;else eU[R1[0X5]]=eU[R1[0X4]]+eU[R1[7]];end;else if n1<0X1A then if not(eU[R1[0x4]]<=eU[R1[7]])then else vU=R1[0X0005];end;else do if n1==0X00001b then(eU)[R1[5]]=R(eU[R1[4]]);else if R1[7]~=0X0000d4 then eU[R1[5]]=dU[mB+0x1];else vU=vU-1;AB[vU]={[0x0002]=68,[0X5]=(R1[0X00005]-0x007a),[0X4]=(R1[4]-0X7A)};end;end;end;end;end;end;end;end;end;end;end;end;end;end;(K)(RB,bB);return RB;end;do continue;end;end;end;end;Rv=0;while-0X21836EeA do if Rv==0 then Yv[Vv]=pv;Rv=1;continue;else pv=Nv;do break;end;end;end;return Gv(Sv,nil,U)(...);end)(bit32.bxor,setfenv,assert,rawget,16,string.byte,table.insert,0X3,0X00001,0x004,bit32.band,5,coroutine.yield,nil,tonumber,coroutine,type,string.match,string.unpack,string.gsub,pcall,bit32.lshift,0,error,bit32.bor,52,string.sub,0X10000,select,0X00001000000,0.13427189186495814,2,true,unpack,...);